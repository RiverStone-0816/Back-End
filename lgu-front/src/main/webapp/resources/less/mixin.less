/* Mixin */
.transition (@prop: all, @time: .2s, @ease: linear) {
  -webkit-transition: @prop @time @ease;
  -moz-transition: @prop @time @ease;
  -o-transition: @prop @time @ease;
  -ms-transition: @prop @time @ease;
  transition: @prop @time @ease;
  -webkit-transition-timing-function: ease;
  transition-timing-function: ease;
}
.box-shadow (@x: 0px, @y: 2px, @blur: 4px, @alpha: 0.1) {
  -webkit-box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
  box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
}

.keyframes(@name; @arguments) {
  @-moz-keyframes @name { @arguments(); }
  @-webkit-keyframes @name { @arguments(); }
  @keyframes @name { @arguments(); }
}

.animation(@arguments) {
  -webkit-animation: @arguments;
  -moz-animation: @arguments;
  animation: @arguments;
}

.no-drag {
  -ms-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  user-select: none;
}


.linear-gradient( @dir: top, @start-color: #eee, @end-color: #aaa ) {
  background: -webkit-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: -moz-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: -ms-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: -o-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: linear-gradient(@dir, @start-color 0%, @end-color 100%);
  .linear-gradient-ie(@dir, @start-color, @end-color);
}

.linear-gradient-multi( ... ) {
  background-image: -webkit-linear-gradient(@arguments);
  background-image: -moz-linear-gradient(@arguments);
  background-image: -ms-linear-gradient(@arguments);
  background-image: -o-linear-gradient(@arguments);
  background-image: linear-gradient(@arguments);
}

.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = top),
  not ( isstring(@dir) ) and ( @dir >= 225 ) and ( @dir < 315 ),
  not ( isstring(@dir) ) and ( @dir >= -135 ) and ( @dir < -45 ) {
  .linear-gradient-ie-filter(@start-color, @end-color, 0);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = right),
  not ( isstring(@dir) ) and ( @dir >= 135 ) and ( @dir < 225 ),
  not ( isstring(@dir) ) and ( @dir >= -225 ) and ( @dir < -135 ) {
  .linear-gradient-ie-filter(@end-color, @start-color, 1);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = bottom),
  not ( isstring(@dir) ) and ( @dir >= 45 ) and ( @dir < 135 ),
  not ( isstring(@dir) ) and ( @dir >= -315 ) and ( @dir < -225 ) {
  .linear-gradient-ie-filter(@end-color, @start-color, 0);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = left),
  not ( isstring(@dir) ) and ( @dir >= 315 ) and ( @dir < 360 ),
  not ( isstring(@dir) ) and ( @dir >= -45 ) and ( @dir < 45 ),
  not ( isstring(@dir) ) and ( @dir < -315 ) and ( @dir >= -360 ) {
  .linear-gradient-ie-filter(@start-color, @end-color, 1);
}

.linear-gradient-ie-filter( @start: #eee, @end: #aaa, @type: 1 ) {
  @c-start: argb(@start);
  @c-end: argb(@end);
  filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{c-start}', endColorstr='@{c-end}', GradientType=@{type})";
  -ms-filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{c-start}',endColorstr='@{c-end}',GradientType=@{type})";
}

.semantic-icon(@content) {
  display: inline-block;
  opacity: 1;
  margin: 0 .25rem 0 0;
  width: 1.18em;
  height: 1em;
  font-family: Icons, monospace;
  font-style: normal;
  font-weight: 400;
  text-decoration: inherit;
  text-align: center;
  speak: none;
  font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  content: @content;
}