/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PdsIvrRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * PDS IVR 관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PdsIvr extends TableImpl<PdsIvrRecord> {

    private static final long serialVersionUID = -948279552;

    /**
     * The reference instance of <code>eicn.pds_ivr</code>
     */
    public static final PdsIvr PDS_IVR = new PdsIvr();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PdsIvrRecord> getRecordType() {
        return PdsIvrRecord.class;
    }

    /**
     * The column <code>eicn.pds_ivr.seq</code>. SEQUENCE KEY
     */
    public final TableField<PdsIvrRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.pds_ivr.code</code>.
     */
    public final TableField<PdsIvrRecord, Integer> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.pds_ivr.root</code>.
     */
    public final TableField<PdsIvrRecord, Integer> ROOT = createField(DSL.name("root"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.pds_ivr.parent</code>.
     */
    public final TableField<PdsIvrRecord, Integer> PARENT = createField(DSL.name("parent"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.pds_ivr.level</code>.
     */
    public final TableField<PdsIvrRecord, Integer> LEVEL = createField(DSL.name("level"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.pds_ivr.tree_name</code>. 윗레벨의 코드를 포함한 코드의 나열 ex)0003_0008_0001
     */
    public final TableField<PdsIvrRecord, String> TREE_NAME = createField(DSL.name("tree_name"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "윗레벨의 코드를 포함한 코드의 나열 ex)0003_0008_0001");

    /**
     * The column <code>eicn.pds_ivr.name</code>. IVR이름
     */
    public final TableField<PdsIvrRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "IVR이름");

    /**
     * The column <code>eicn.pds_ivr.button</code>. 버튼정보
     */
    public final TableField<PdsIvrRecord, String> BUTTON = createField(DSL.name("button"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "버튼정보");

    /**
     * The column <code>eicn.pds_ivr.type</code>.
     */
    public final TableField<PdsIvrRecord, Byte> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>eicn.pds_ivr.type_data</code>.
     */
    public final TableField<PdsIvrRecord, String> TYPE_DATA = createField(DSL.name("type_data"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.pds_ivr.sound_code</code>. sound_list.seq
     */
    public final TableField<PdsIvrRecord, String> SOUND_CODE = createField(DSL.name("sound_code"), org.jooq.impl.SQLDataType.VARCHAR(11).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "sound_list.seq");

    /**
     * The column <code>eicn.pds_ivr.company_id</code>. 고객사아이디
     */
    public final TableField<PdsIvrRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사아이디");

    /**
     * Create a <code>eicn.pds_ivr</code> table reference
     */
    public PdsIvr() {
        this(DSL.name("pds_ivr"), null);
    }

    /**
     * Create an aliased <code>eicn.pds_ivr</code> table reference
     */
    public PdsIvr(String alias) {
        this(DSL.name(alias), PDS_IVR);
    }

    /**
     * Create an aliased <code>eicn.pds_ivr</code> table reference
     */
    public PdsIvr(Name alias) {
        this(alias, PDS_IVR);
    }

    private PdsIvr(Name alias, Table<PdsIvrRecord> aliased) {
        this(alias, aliased, null);
    }

    private PdsIvr(Name alias, Table<PdsIvrRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("PDS IVR 관리 테이블"), TableOptions.table());
    }

    public <O extends Record> PdsIvr(Table<O> child, ForeignKey<O, PdsIvrRecord> key) {
        super(child, key, PDS_IVR);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<PdsIvrRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PDS_IVR;
    }

    @Override
    public List<UniqueKey<PdsIvrRecord>> getKeys() {
        return Arrays.<UniqueKey<PdsIvrRecord>>asList(Keys.KEY_PDS_IVR_SEQ);
    }

    @Override
    public PdsIvr as(String alias) {
        return new PdsIvr(DSL.name(alias), this);
    }

    @Override
    public PdsIvr as(Name alias) {
        return new PdsIvr(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsIvr rename(String name) {
        return new PdsIvr(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsIvr rename(Name name) {
        return new PdsIvr(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Integer, Integer, Integer, Integer, String, String, String, Byte, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
