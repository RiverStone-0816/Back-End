/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CstGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CstGroup extends TableImpl<CstGroupRecord> {

    private static final long serialVersionUID = 35146181;

    /**
     * The reference instance of <code>eicn.cst_group</code>
     */
    public static final CstGroup CST_GROUP = new CstGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CstGroupRecord> getRecordType() {
        return CstGroupRecord.class;
    }

    /**
     * The column <code>eicn.cst_group.seq</code>.
     */
    public final TableField<CstGroupRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.cst_group.name</code>.
     */
    public final TableField<CstGroupRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cst_group.total_cnt</code>.
     */
    public final TableField<CstGroupRecord, Integer> TOTAL_CNT = createField(DSL.name("total_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.cst_group.cst_type</code>.
     */
    public final TableField<CstGroupRecord, Integer> CST_TYPE = createField(DSL.name("cst_type"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.cst_group.result_type</code>.
     */
    public final TableField<CstGroupRecord, Integer> RESULT_TYPE = createField(DSL.name("result_type"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.cst_group.info</code>.
     */
    public final TableField<CstGroupRecord, String> INFO = createField(DSL.name("info"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cst_group.areacode</code>.
     */
    public final TableField<CstGroupRecord, Integer> AREACODE = createField(DSL.name("areacode"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.cst_group.branchcode</code>.
     */
    public final TableField<CstGroupRecord, Integer> BRANCHCODE = createField(DSL.name("branchcode"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.cst_group.part_group</code>.
     */
    public final TableField<CstGroupRecord, Integer> PART_GROUP = createField(DSL.name("part_group"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.cst_group.company_id</code>.
     */
    public final TableField<CstGroupRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cst_group.inbound_service</code>.
     */
    public final TableField<CstGroupRecord, String> INBOUND_SERVICE = createField(DSL.name("inbound_service"), org.jooq.impl.SQLDataType.VARCHAR(400).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.cst_group</code> table reference
     */
    public CstGroup() {
        this(DSL.name("cst_group"), null);
    }

    /**
     * Create an aliased <code>eicn.cst_group</code> table reference
     */
    public CstGroup(String alias) {
        this(DSL.name(alias), CST_GROUP);
    }

    /**
     * Create an aliased <code>eicn.cst_group</code> table reference
     */
    public CstGroup(Name alias) {
        this(alias, CST_GROUP);
    }

    private CstGroup(Name alias, Table<CstGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private CstGroup(Name alias, Table<CstGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> CstGroup(Table<O> child, ForeignKey<O, CstGroupRecord> key) {
        super(child, key, CST_GROUP);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CST_GROUP_COMPANY_ID, Indexes.CST_GROUP_NAME);
    }

    @Override
    public Identity<CstGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CST_GROUP;
    }

    @Override
    public UniqueKey<CstGroupRecord> getPrimaryKey() {
        return Keys.KEY_CST_GROUP_PRIMARY;
    }

    @Override
    public List<UniqueKey<CstGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<CstGroupRecord>>asList(Keys.KEY_CST_GROUP_PRIMARY);
    }

    @Override
    public CstGroup as(String alias) {
        return new CstGroup(DSL.name(alias), this);
    }

    @Override
    public CstGroup as(Name alias) {
        return new CstGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CstGroup rename(String name) {
        return new CstGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CstGroup rename(Name name) {
        return new CstGroup(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, Integer, Integer, Integer, String, Integer, Integer, Integer, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
