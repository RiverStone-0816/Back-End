/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PersonListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 상담원 관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonList extends TableImpl<PersonListRecord> {

    private static final long serialVersionUID = 1254744520;

    /**
     * The reference instance of <code>eicn.person_list</code>
     */
    public static final PersonList PERSON_LIST = new PersonList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonListRecord> getRecordType() {
        return PersonListRecord.class;
    }

    /**
     * The column <code>eicn.person_list.id</code>. 상담원아이디
     */
    public final TableField<PersonListRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담원아이디");

    /**
     * The column <code>eicn.person_list.id_type</code>. 아이디타입
     */
    public final TableField<PersonListRecord, String> ID_TYPE = createField(DSL.name("id_type"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("M", org.jooq.impl.SQLDataType.CHAR)), this, "아이디타입");

    /**
     * The column <code>eicn.person_list.passwd</code>. 패스워드
     */
    public final TableField<PersonListRecord, String> PASSWD = createField(DSL.name("passwd"), org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "패스워드");

    /**
     * The column <code>eicn.person_list.id_name</code>. 한글이름
     */
    public final TableField<PersonListRecord, String> ID_NAME = createField(DSL.name("id_name"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "한글이름");

    /**
     * The column <code>eicn.person_list.group_code</code>.  ex&gt;0001
     */
    public final TableField<PersonListRecord, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4).nullable(false), this, " ex>0001");

    /**
     * The column <code>eicn.person_list.group_tree_name</code>. ex&gt;0003_0008_0001
     */
    public final TableField<PersonListRecord, String> GROUP_TREE_NAME = createField(DSL.name("group_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "ex>0003_0008_0001");

    /**
     * The column <code>eicn.person_list.group_level</code>. 3
     */
    public final TableField<PersonListRecord, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "3");

    /**
     * The column <code>eicn.person_list.is_login</code>. 로그인 상태
     */
    public final TableField<PersonListRecord, String> IS_LOGIN = createField(DSL.name("is_login"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "로그인 상태");

    /**
     * The column <code>eicn.person_list.is_login_msg</code>. 로그인상태메시지
     */
    public final TableField<PersonListRecord, String> IS_LOGIN_MSG = createField(DSL.name("is_login_msg"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "로그인상태메시지");

    /**
     * The column <code>eicn.person_list.is_login_chatt</code>.
     */
    public final TableField<PersonListRecord, String> IS_LOGIN_CHATT = createField(DSL.name("is_login_chatt"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.person_list.extension</code>. 내선
     */
    public final TableField<PersonListRecord, String> EXTENSION = createField(DSL.name("extension"), org.jooq.impl.SQLDataType.VARCHAR(18).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "내선");

    /**
     * The column <code>eicn.person_list.peer</code>.
     */
    public final TableField<PersonListRecord, String> PEER = createField(DSL.name("peer"), org.jooq.impl.SQLDataType.VARCHAR(18).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.person_list.phone_status</code>. 전화 상태
     */
    public final TableField<PersonListRecord, String> PHONE_STATUS = createField(DSL.name("phone_status"), org.jooq.impl.SQLDataType.VARCHAR(18).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "전화 상태");

    /**
     * The column <code>eicn.person_list.etc</code>.
     */
    public final TableField<PersonListRecord, String> ETC = createField(DSL.name("etc"), org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.person_list.logout_status</code>.
     */
    public final TableField<PersonListRecord, Byte> LOGOUT_STATUS = createField(DSL.name("logout_status"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>eicn.person_list.dial_status</code>.
     */
    public final TableField<PersonListRecord, Byte> DIAL_STATUS = createField(DSL.name("dial_status"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>eicn.person_list.company_id</code>. 회사 아이디
     */
    public final TableField<PersonListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사 아이디");

    /**
     * The column <code>eicn.person_list.id_status</code>. 근무상태
     */
    public final TableField<PersonListRecord, String> ID_STATUS = createField(DSL.name("id_status"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "근무상태");

    /**
     * The column <code>eicn.person_list.hp_number</code>.
     */
    public final TableField<PersonListRecord, String> HP_NUMBER = createField(DSL.name("hp_number"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.person_list.email_info</code>.
     */
    public final TableField<PersonListRecord, String> EMAIL_INFO = createField(DSL.name("email_info"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.person_list.pass_change_date</code>. 패스워드 마지막 변경일
     */
    public final TableField<PersonListRecord, Timestamp> PASS_CHANGE_DATE = createField(DSL.name("pass_change_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2017-11-06 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "패스워드 마지막 변경일");

    /**
     * The column <code>eicn.person_list.pass_reset</code>.
     */
    public final TableField<PersonListRecord, String> PASS_RESET = createField(DSL.name("pass_reset"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.person_list.is_pds</code>. pds 사용여부
     */
    public final TableField<PersonListRecord, String> IS_PDS = createField(DSL.name("is_pds"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "pds 사용여부");

    /**
     * The column <code>eicn.person_list.is_stat</code>. 통계,모니터링,상담원연결여부
     */
    public final TableField<PersonListRecord, String> IS_STAT = createField(DSL.name("is_stat"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "통계,모니터링,상담원연결여부");

    /**
     * The column <code>eicn.person_list.is_talk</code>. 상담톡 여부
     */
    public final TableField<PersonListRecord, String> IS_TALK = createField(DSL.name("is_talk"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "상담톡 여부");

    /**
     * The column <code>eicn.person_list.is_email</code>. 이메일상담 여부
     */
    public final TableField<PersonListRecord, String> IS_EMAIL = createField(DSL.name("is_email"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "이메일상담 여부");

    /**
     * The column <code>eicn.person_list.is_chatt</code>. 메신져사용 여부
     */
    public final TableField<PersonListRecord, String> IS_CHATT = createField(DSL.name("is_chatt"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "메신져사용 여부");

    /**
     * The column <code>eicn.person_list.try_login_count</code>. 로그인 시도 횟수
     */
    public final TableField<PersonListRecord, Integer> TRY_LOGIN_COUNT = createField(DSL.name("try_login_count"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "로그인 시도 횟수");

    /**
     * The column <code>eicn.person_list.try_login_date</code>. 최종 로그인 시도 시간
     */
    public final TableField<PersonListRecord, Timestamp> TRY_LOGIN_DATE = createField(DSL.name("try_login_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "최종 로그인 시도 시간");

    /**
     * The column <code>eicn.person_list.profile_photo</code>. 프로필사진정보
     */
    public final TableField<PersonListRecord, String> PROFILE_PHOTO = createField(DSL.name("profile_photo"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "프로필사진정보");

    /**
     * Create a <code>eicn.person_list</code> table reference
     */
    public PersonList() {
        this(DSL.name("person_list"), null);
    }

    /**
     * Create an aliased <code>eicn.person_list</code> table reference
     */
    public PersonList(String alias) {
        this(DSL.name(alias), PERSON_LIST);
    }

    /**
     * Create an aliased <code>eicn.person_list</code> table reference
     */
    public PersonList(Name alias) {
        this(alias, PERSON_LIST);
    }

    private PersonList(Name alias, Table<PersonListRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonList(Name alias, Table<PersonListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("상담원 관리 테이블"), TableOptions.table());
    }

    public <O extends Record> PersonList(Table<O> child, ForeignKey<O, PersonListRecord> key) {
        super(child, key, PERSON_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PERSON_LIST_EXTENSION);
    }

    @Override
    public List<UniqueKey<PersonListRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonListRecord>>asList(Keys.KEY_PERSON_LIST_PERSON_ID);
    }

    @Override
    public PersonList as(String alias) {
        return new PersonList(DSL.name(alias), this);
    }

    @Override
    public PersonList as(Name alias) {
        return new PersonList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonList rename(String name) {
        return new PersonList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonList rename(Name name) {
        return new PersonList(name, null);
    }
}
