/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CurrentTalkRoomRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurrentTalkRoom extends TableImpl<CurrentTalkRoomRecord> {

    private static final long serialVersionUID = -1237510040;

    /**
     * The reference instance of <code>eicn.current_talk_room</code>
     */
    public static final CurrentTalkRoom CURRENT_TALK_ROOM = new CurrentTalkRoom();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CurrentTalkRoomRecord> getRecordType() {
        return CurrentTalkRoomRecord.class;
    }

    /**
     * The column <code>eicn.current_talk_room.seq</code>.
     */
    public final TableField<CurrentTalkRoomRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.current_talk_room.room_id</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> ROOM_ID = createField(DSL.name("room_id"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_talk_room.room_start_time</code>.
     */
    public final TableField<CurrentTalkRoomRecord, Timestamp> ROOM_START_TIME = createField(DSL.name("room_start_time"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2009-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.current_talk_room.room_last_time</code>.
     */
    public final TableField<CurrentTalkRoomRecord, Timestamp> ROOM_LAST_TIME = createField(DSL.name("room_last_time"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2009-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.current_talk_room.room_status</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> ROOM_STATUS = createField(DSL.name("room_status"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("S", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.current_talk_room.maindb_group_id</code>.
     */
    public final TableField<CurrentTalkRoomRecord, Integer> MAINDB_GROUP_ID = createField(DSL.name("maindb_group_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.current_talk_room.maindb_custom_id</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> MAINDB_CUSTOM_ID = createField(DSL.name("maindb_custom_id"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_talk_room.maindb_custom_name</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> MAINDB_CUSTOM_NAME = createField(DSL.name("maindb_custom_name"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_talk_room.userid</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_talk_room.user_key</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> USER_KEY = createField(DSL.name("user_key"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_talk_room.sender_key</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> SENDER_KEY = createField(DSL.name("sender_key"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_talk_room.company_id</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_talk_room.room_name</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> ROOM_NAME = createField(DSL.name("room_name"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_talk_room.schedule_kind</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> SCHEDULE_KIND = createField(DSL.name("schedule_kind"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("D", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.current_talk_room.schedule_data</code>.
     */
    public final TableField<CurrentTalkRoomRecord, String> SCHEDULE_DATA = createField(DSL.name("schedule_data"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.current_talk_room</code> table reference
     */
    public CurrentTalkRoom() {
        this(DSL.name("current_talk_room"), null);
    }

    /**
     * Create an aliased <code>eicn.current_talk_room</code> table reference
     */
    public CurrentTalkRoom(String alias) {
        this(DSL.name(alias), CURRENT_TALK_ROOM);
    }

    /**
     * Create an aliased <code>eicn.current_talk_room</code> table reference
     */
    public CurrentTalkRoom(Name alias) {
        this(alias, CURRENT_TALK_ROOM);
    }

    private CurrentTalkRoom(Name alias, Table<CurrentTalkRoomRecord> aliased) {
        this(alias, aliased, null);
    }

    private CurrentTalkRoom(Name alias, Table<CurrentTalkRoomRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> CurrentTalkRoom(Table<O> child, ForeignKey<O, CurrentTalkRoomRecord> key) {
        super(child, key, CURRENT_TALK_ROOM);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CURRENT_TALK_ROOM_COMPANY_ID, Indexes.CURRENT_TALK_ROOM_ROOM_ID, Indexes.CURRENT_TALK_ROOM_SENDER_KEY, Indexes.CURRENT_TALK_ROOM_USER_KEY);
    }

    @Override
    public Identity<CurrentTalkRoomRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CURRENT_TALK_ROOM;
    }

    @Override
    public List<UniqueKey<CurrentTalkRoomRecord>> getKeys() {
        return Arrays.<UniqueKey<CurrentTalkRoomRecord>>asList(Keys.KEY_CURRENT_TALK_ROOM_SEQ);
    }

    @Override
    public CurrentTalkRoom as(String alias) {
        return new CurrentTalkRoom(DSL.name(alias), this);
    }

    @Override
    public CurrentTalkRoom as(Name alias) {
        return new CurrentTalkRoom(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CurrentTalkRoom rename(String name) {
        return new CurrentTalkRoom(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CurrentTalkRoom rename(Name name) {
        return new CurrentTalkRoom(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Integer, String, Timestamp, Timestamp, String, Integer, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
