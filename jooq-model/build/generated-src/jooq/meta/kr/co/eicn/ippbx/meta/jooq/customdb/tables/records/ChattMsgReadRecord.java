/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.customdb.tables.records;


import kr.co.eicn.ippbx.meta.jooq.customdb.tables.ChattMsgRead;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChattMsgReadRecord extends TableRecordImpl<ChattMsgReadRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 319885101;

    /**
     * Setter for <code>CUSTOMDB.chatt_msg_read.message_id</code>.
     */
    public ChattMsgReadRecord setMessageId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>CUSTOMDB.chatt_msg_read.message_id</code>.
     */
    public String getMessageId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>CUSTOMDB.chatt_msg_read.room_id</code>.
     */
    public ChattMsgReadRecord setRoomId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>CUSTOMDB.chatt_msg_read.room_id</code>.
     */
    public String getRoomId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>CUSTOMDB.chatt_msg_read.userid</code>.
     */
    public ChattMsgReadRecord setUserid(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>CUSTOMDB.chatt_msg_read.userid</code>.
     */
    public String getUserid() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ChattMsgRead.CHATT_MSG_READ.MESSAGE_ID;
    }

    @Override
    public Field<String> field2() {
        return ChattMsgRead.CHATT_MSG_READ.ROOM_ID;
    }

    @Override
    public Field<String> field3() {
        return ChattMsgRead.CHATT_MSG_READ.USERID;
    }

    @Override
    public String component1() {
        return getMessageId();
    }

    @Override
    public String component2() {
        return getRoomId();
    }

    @Override
    public String component3() {
        return getUserid();
    }

    @Override
    public String value1() {
        return getMessageId();
    }

    @Override
    public String value2() {
        return getRoomId();
    }

    @Override
    public String value3() {
        return getUserid();
    }

    @Override
    public ChattMsgReadRecord value1(String value) {
        setMessageId(value);
        return this;
    }

    @Override
    public ChattMsgReadRecord value2(String value) {
        setRoomId(value);
        return this;
    }

    @Override
    public ChattMsgReadRecord value3(String value) {
        setUserid(value);
        return this;
    }

    @Override
    public ChattMsgReadRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChattMsgReadRecord
     */
    public ChattMsgReadRecord() {
        super(ChattMsgRead.CHATT_MSG_READ);
    }

    /**
     * Create a detached, initialised ChattMsgReadRecord
     */
    public ChattMsgReadRecord(String messageId, String roomId, String userid) {
        super(ChattMsgRead.CHATT_MSG_READ);

        set(0, messageId);
        set(1, roomId);
        set(2, userid);
    }
}
