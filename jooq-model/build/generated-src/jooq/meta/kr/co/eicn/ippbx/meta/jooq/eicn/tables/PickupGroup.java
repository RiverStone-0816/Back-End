/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PickupGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 당겨받기그룹 정보
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PickupGroup extends TableImpl<PickupGroupRecord> {

    private static final long serialVersionUID = -1085345545;

    /**
     * The reference instance of <code>eicn.pickup_group</code>
     */
    public static final PickupGroup PICKUP_GROUP = new PickupGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PickupGroupRecord> getRecordType() {
        return PickupGroupRecord.class;
    }

    /**
     * The column <code>eicn.pickup_group.seq</code>. AUTO_INCREMENT
     */
    public final TableField<PickupGroupRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "AUTO_INCREMENT");

    /**
     * The column <code>eicn.pickup_group.groupcode</code>. 당겨받기 그룹코드
     */
    public final TableField<PickupGroupRecord, Integer> GROUPCODE = createField(DSL.name("groupcode"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "당겨받기 그룹코드");

    /**
     * The column <code>eicn.pickup_group.groupname</code>. 당겨받기 그룹명
     */
    public final TableField<PickupGroupRecord, String> GROUPNAME = createField(DSL.name("groupname"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "당겨받기 그룹명");

    /**
     * The column <code>eicn.pickup_group.host</code>. 교환기 host
     */
    public final TableField<PickupGroupRecord, String> HOST = createField(DSL.name("host"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "교환기 host");

    /**
     * The column <code>eicn.pickup_group.group_code</code>.  ex&gt;0001
     */
    public final TableField<PickupGroupRecord, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4).nullable(false), this, " ex>0001");

    /**
     * The column <code>eicn.pickup_group.group_tree_name</code>. ex&gt;0003_0008_0001
     */
    public final TableField<PickupGroupRecord, String> GROUP_TREE_NAME = createField(DSL.name("group_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "ex>0003_0008_0001");

    /**
     * The column <code>eicn.pickup_group.group_level</code>. 3
     */
    public final TableField<PickupGroupRecord, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "3");

    /**
     * The column <code>eicn.pickup_group.company_id</code>. 고객사 아이디
     */
    public final TableField<PickupGroupRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * The column <code>eicn.pickup_group.groupnamecode</code>. 고객사 아이디 + 당겨받기 그룹코드
     */
    public final TableField<PickupGroupRecord, String> GROUPNAMECODE = createField(DSL.name("groupnamecode"), org.jooq.impl.SQLDataType.VARCHAR(40).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디 + 당겨받기 그룹코드");

    /**
     * Create a <code>eicn.pickup_group</code> table reference
     */
    public PickupGroup() {
        this(DSL.name("pickup_group"), null);
    }

    /**
     * Create an aliased <code>eicn.pickup_group</code> table reference
     */
    public PickupGroup(String alias) {
        this(DSL.name(alias), PICKUP_GROUP);
    }

    /**
     * Create an aliased <code>eicn.pickup_group</code> table reference
     */
    public PickupGroup(Name alias) {
        this(alias, PICKUP_GROUP);
    }

    private PickupGroup(Name alias, Table<PickupGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private PickupGroup(Name alias, Table<PickupGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("당겨받기그룹 정보"), TableOptions.table());
    }

    public <O extends Record> PickupGroup(Table<O> child, ForeignKey<O, PickupGroupRecord> key) {
        super(child, key, PICKUP_GROUP);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PICKUP_GROUP_COMPANY_ID);
    }

    @Override
    public Identity<PickupGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PICKUP_GROUP;
    }

    @Override
    public List<UniqueKey<PickupGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<PickupGroupRecord>>asList(Keys.KEY_PICKUP_GROUP_SEQ);
    }

    @Override
    public PickupGroup as(String alias) {
        return new PickupGroup(DSL.name(alias), this);
    }

    @Override
    public PickupGroup as(Name alias) {
        return new PickupGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PickupGroup rename(String name) {
        return new PickupGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PickupGroup rename(Name name) {
        return new PickupGroup(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, String, String, String, Integer, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
