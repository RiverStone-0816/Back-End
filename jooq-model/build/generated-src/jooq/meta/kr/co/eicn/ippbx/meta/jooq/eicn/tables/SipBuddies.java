/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.enums.SipBuddiesType;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.SipBuddiesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 전화기 정보(asterisk 사용테이블)
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SipBuddies extends TableImpl<SipBuddiesRecord> {

    private static final long serialVersionUID = -341732339;

    /**
     * The reference instance of <code>eicn.sip_buddies</code>
     */
    public static final SipBuddies SIP_BUDDIES = new SipBuddies();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SipBuddiesRecord> getRecordType() {
        return SipBuddiesRecord.class;
    }

    /**
     * The column <code>eicn.sip_buddies.id</code>.
     */
    public final TableField<SipBuddiesRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.sip_buddies.name</code>.
     */
    public final TableField<SipBuddiesRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.host</code>.
     */
    public final TableField<SipBuddiesRecord, String> HOST = createField(DSL.name("host"), org.jooq.impl.SQLDataType.VARCHAR(31).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.nat</code>.
     */
    public final TableField<SipBuddiesRecord, String> NAT = createField(DSL.name("nat"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("no", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.type</code>.
     */
    public final TableField<SipBuddiesRecord, SipBuddiesType> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(6).nullable(false).defaultValue(org.jooq.impl.DSL.inline("friend", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(kr.co.eicn.ippbx.meta.jooq.eicn.enums.SipBuddiesType.class), this, "");

    /**
     * The column <code>eicn.sip_buddies.accountcode</code>.
     */
    public final TableField<SipBuddiesRecord, String> ACCOUNTCODE = createField(DSL.name("accountcode"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>eicn.sip_buddies.amaflags</code>.
     */
    public final TableField<SipBuddiesRecord, String> AMAFLAGS = createField(DSL.name("amaflags"), org.jooq.impl.SQLDataType.VARCHAR(13), this, "");

    /**
     * The column <code>eicn.sip_buddies.callgroup</code>.
     */
    public final TableField<SipBuddiesRecord, String> CALLGROUP = createField(DSL.name("callgroup"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>eicn.sip_buddies.callerid</code>.
     */
    public final TableField<SipBuddiesRecord, String> CALLERID = createField(DSL.name("callerid"), org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>eicn.sip_buddies.cancallforward</code>.
     */
    public final TableField<SipBuddiesRecord, String> CANCALLFORWARD = createField(DSL.name("cancallforward"), org.jooq.impl.SQLDataType.CHAR(3).defaultValue(org.jooq.impl.DSL.inline("yes", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.canreinvite</code>.
     */
    public final TableField<SipBuddiesRecord, String> CANREINVITE = createField(DSL.name("canreinvite"), org.jooq.impl.SQLDataType.CHAR(3).defaultValue(org.jooq.impl.DSL.inline("yes", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.context</code>.
     */
    public final TableField<SipBuddiesRecord, String> CONTEXT = createField(DSL.name("context"), org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>eicn.sip_buddies.defaultip</code>.
     */
    public final TableField<SipBuddiesRecord, String> DEFAULTIP = createField(DSL.name("defaultip"), org.jooq.impl.SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>eicn.sip_buddies.dtmfmode</code>.
     */
    public final TableField<SipBuddiesRecord, String> DTMFMODE = createField(DSL.name("dtmfmode"), org.jooq.impl.SQLDataType.VARCHAR(7), this, "");

    /**
     * The column <code>eicn.sip_buddies.fromuser</code>.
     */
    public final TableField<SipBuddiesRecord, String> FROMUSER = createField(DSL.name("fromuser"), org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>eicn.sip_buddies.fromdomain</code>.
     */
    public final TableField<SipBuddiesRecord, String> FROMDOMAIN = createField(DSL.name("fromdomain"), org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>eicn.sip_buddies.insecure</code>.
     */
    public final TableField<SipBuddiesRecord, String> INSECURE = createField(DSL.name("insecure"), org.jooq.impl.SQLDataType.VARCHAR(4), this, "");

    /**
     * The column <code>eicn.sip_buddies.language</code>.
     */
    public final TableField<SipBuddiesRecord, String> LANGUAGE = createField(DSL.name("language"), org.jooq.impl.SQLDataType.CHAR(2), this, "");

    /**
     * The column <code>eicn.sip_buddies.mailbox</code>.
     */
    public final TableField<SipBuddiesRecord, String> MAILBOX = createField(DSL.name("mailbox"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>eicn.sip_buddies.md5secret</code>.
     */
    public final TableField<SipBuddiesRecord, String> MD5SECRET = createField(DSL.name("md5secret"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.deny</code>.
     */
    public final TableField<SipBuddiesRecord, String> DENY = createField(DSL.name("deny"), org.jooq.impl.SQLDataType.VARCHAR(95), this, "");

    /**
     * The column <code>eicn.sip_buddies.permit</code>.
     */
    public final TableField<SipBuddiesRecord, String> PERMIT = createField(DSL.name("permit"), org.jooq.impl.SQLDataType.VARCHAR(95), this, "");

    /**
     * The column <code>eicn.sip_buddies.mask</code>.
     */
    public final TableField<SipBuddiesRecord, String> MASK = createField(DSL.name("mask"), org.jooq.impl.SQLDataType.VARCHAR(95), this, "");

    /**
     * The column <code>eicn.sip_buddies.musiconhold</code>.
     */
    public final TableField<SipBuddiesRecord, String> MUSICONHOLD = createField(DSL.name("musiconhold"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>eicn.sip_buddies.pickupgroup</code>.
     */
    public final TableField<SipBuddiesRecord, String> PICKUPGROUP = createField(DSL.name("pickupgroup"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>eicn.sip_buddies.qualify</code>.
     */
    public final TableField<SipBuddiesRecord, String> QUALIFY = createField(DSL.name("qualify"), org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>eicn.sip_buddies.regexten</code>.
     */
    public final TableField<SipBuddiesRecord, String> REGEXTEN = createField(DSL.name("regexten"), org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>eicn.sip_buddies.restrictcid</code>.
     */
    public final TableField<SipBuddiesRecord, String> RESTRICTCID = createField(DSL.name("restrictcid"), org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>eicn.sip_buddies.rtptimeout</code>.
     */
    public final TableField<SipBuddiesRecord, String> RTPTIMEOUT = createField(DSL.name("rtptimeout"), org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>eicn.sip_buddies.rtpholdtimeout</code>.
     */
    public final TableField<SipBuddiesRecord, String> RTPHOLDTIMEOUT = createField(DSL.name("rtpholdtimeout"), org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>eicn.sip_buddies.secret</code>.
     */
    public final TableField<SipBuddiesRecord, String> SECRET = createField(DSL.name("secret"), org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>eicn.sip_buddies.setvar</code>.
     */
    public final TableField<SipBuddiesRecord, String> SETVAR = createField(DSL.name("setvar"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>eicn.sip_buddies.disallow</code>.
     */
    public final TableField<SipBuddiesRecord, String> DISALLOW = createField(DSL.name("disallow"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("all", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.allow</code>.
     */
    public final TableField<SipBuddiesRecord, String> ALLOW = createField(DSL.name("allow"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("g729;ilbc;gsm;ulaw;alaw", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.fullcontact</code>.
     */
    public final TableField<SipBuddiesRecord, String> FULLCONTACT = createField(DSL.name("fullcontact"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.ipaddr</code>.
     */
    public final TableField<SipBuddiesRecord, String> IPADDR = createField(DSL.name("ipaddr"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.port</code>.
     */
    public final TableField<SipBuddiesRecord, String> PORT = createField(DSL.name("port"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>eicn.sip_buddies.regserver</code>.
     */
    public final TableField<SipBuddiesRecord, String> REGSERVER = createField(DSL.name("regserver"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>eicn.sip_buddies.regseconds</code>.
     */
    public final TableField<SipBuddiesRecord, Integer> REGSECONDS = createField(DSL.name("regseconds"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.sip_buddies.lastms</code>.
     */
    public final TableField<SipBuddiesRecord, Integer> LASTMS = createField(DSL.name("lastms"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.sip_buddies.defaultuser</code>.
     */
    public final TableField<SipBuddiesRecord, String> DEFAULTUSER = createField(DSL.name("defaultuser"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.subscribecontext</code>.
     */
    public final TableField<SipBuddiesRecord, String> SUBSCRIBECONTEXT = createField(DSL.name("subscribecontext"), org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>eicn.sip_buddies.call-limit</code>.
     */
    public final TableField<SipBuddiesRecord, Byte> CALL_LIMIT = createField(DSL.name("call-limit"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("3", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>eicn.sip_buddies.useragent</code>.
     */
    public final TableField<SipBuddiesRecord, String> USERAGENT = createField(DSL.name("useragent"), org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>eicn.sip_buddies.callbackextension</code>.
     */
    public final TableField<SipBuddiesRecord, String> CALLBACKEXTENSION = createField(DSL.name("callbackextension"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.sip_buddies.namedcallgroup</code>.
     */
    public final TableField<SipBuddiesRecord, String> NAMEDCALLGROUP = createField(DSL.name("namedcallgroup"), org.jooq.impl.SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>eicn.sip_buddies.namedpickupgroup</code>.
     */
    public final TableField<SipBuddiesRecord, String> NAMEDPICKUPGROUP = createField(DSL.name("namedpickupgroup"), org.jooq.impl.SQLDataType.VARCHAR(40), this, "");

    /**
     * Create a <code>eicn.sip_buddies</code> table reference
     */
    public SipBuddies() {
        this(DSL.name("sip_buddies"), null);
    }

    /**
     * Create an aliased <code>eicn.sip_buddies</code> table reference
     */
    public SipBuddies(String alias) {
        this(DSL.name(alias), SIP_BUDDIES);
    }

    /**
     * Create an aliased <code>eicn.sip_buddies</code> table reference
     */
    public SipBuddies(Name alias) {
        this(alias, SIP_BUDDIES);
    }

    private SipBuddies(Name alias, Table<SipBuddiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private SipBuddies(Name alias, Table<SipBuddiesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("전화기 정보(asterisk 사용테이블)"), TableOptions.table());
    }

    public <O extends Record> SipBuddies(Table<O> child, ForeignKey<O, SipBuddiesRecord> key) {
        super(child, key, SIP_BUDDIES);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SIP_BUDDIES_NAME_2);
    }

    @Override
    public Identity<SipBuddiesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SIP_BUDDIES;
    }

    @Override
    public UniqueKey<SipBuddiesRecord> getPrimaryKey() {
        return Keys.KEY_SIP_BUDDIES_PRIMARY;
    }

    @Override
    public List<UniqueKey<SipBuddiesRecord>> getKeys() {
        return Arrays.<UniqueKey<SipBuddiesRecord>>asList(Keys.KEY_SIP_BUDDIES_PRIMARY, Keys.KEY_SIP_BUDDIES_NAME);
    }

    @Override
    public SipBuddies as(String alias) {
        return new SipBuddies(DSL.name(alias), this);
    }

    @Override
    public SipBuddies as(Name alias) {
        return new SipBuddies(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SipBuddies rename(String name) {
        return new SipBuddies(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SipBuddies rename(Name name) {
        return new SipBuddies(name, null);
    }
}
