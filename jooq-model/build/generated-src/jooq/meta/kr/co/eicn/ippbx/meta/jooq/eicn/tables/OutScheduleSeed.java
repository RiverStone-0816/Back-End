/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.OutScheduleSeedRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 발신 스케쥬러의 리스트
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OutScheduleSeed extends TableImpl<OutScheduleSeedRecord> {

    private static final long serialVersionUID = 535310110;

    /**
     * The reference instance of <code>eicn.out_schedule_seed</code>
     */
    public static final OutScheduleSeed OUT_SCHEDULE_SEED = new OutScheduleSeed();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OutScheduleSeedRecord> getRecordType() {
        return OutScheduleSeedRecord.class;
    }

    /**
     * The column <code>eicn.out_schedule_seed.parent</code>. 발신 스케쥴러 유니크 값
     */
    public final TableField<OutScheduleSeedRecord, Integer> PARENT = createField(DSL.name("parent"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "발신 스케쥴러 유니크 값");

    /**
     * The column <code>eicn.out_schedule_seed.name</code>. 발신 스케쥴러 명
     */
    public final TableField<OutScheduleSeedRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "발신 스케쥴러 명");

    /**
     * The column <code>eicn.out_schedule_seed.extension</code>. 내선
     */
    public final TableField<OutScheduleSeedRecord, String> EXTENSION = createField(DSL.name("extension"), org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "내선");

    /**
     * The column <code>eicn.out_schedule_seed.type</code>. H:일별, W:주간
     */
    public final TableField<OutScheduleSeedRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("W", org.jooq.impl.SQLDataType.CHAR)), this, "H:일별, W:주간");

    /**
     * The column <code>eicn.out_schedule_seed.company_id</code>. 고객사 아이디
     */
    public final TableField<OutScheduleSeedRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * Create a <code>eicn.out_schedule_seed</code> table reference
     */
    public OutScheduleSeed() {
        this(DSL.name("out_schedule_seed"), null);
    }

    /**
     * Create an aliased <code>eicn.out_schedule_seed</code> table reference
     */
    public OutScheduleSeed(String alias) {
        this(DSL.name(alias), OUT_SCHEDULE_SEED);
    }

    /**
     * Create an aliased <code>eicn.out_schedule_seed</code> table reference
     */
    public OutScheduleSeed(Name alias) {
        this(alias, OUT_SCHEDULE_SEED);
    }

    private OutScheduleSeed(Name alias, Table<OutScheduleSeedRecord> aliased) {
        this(alias, aliased, null);
    }

    private OutScheduleSeed(Name alias, Table<OutScheduleSeedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("발신 스케쥬러의 리스트"), TableOptions.table());
    }

    public <O extends Record> OutScheduleSeed(Table<O> child, ForeignKey<O, OutScheduleSeedRecord> key) {
        super(child, key, OUT_SCHEDULE_SEED);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<UniqueKey<OutScheduleSeedRecord>> getKeys() {
        return Arrays.<UniqueKey<OutScheduleSeedRecord>>asList(Keys.KEY_OUT_SCHEDULE_SEED_PARENT);
    }

    @Override
    public OutScheduleSeed as(String alias) {
        return new OutScheduleSeed(DSL.name(alias), this);
    }

    @Override
    public OutScheduleSeed as(Name alias) {
        return new OutScheduleSeed(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OutScheduleSeed rename(String name) {
        return new OutScheduleSeed(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OutScheduleSeed rename(Name name) {
        return new OutScheduleSeed(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
