/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.EvaluationItemRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 평가항목 관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EvaluationItem extends TableImpl<EvaluationItemRecord> {

    private static final long serialVersionUID = 1341045592;

    /**
     * The reference instance of <code>eicn.evaluation_item</code>
     */
    public static final EvaluationItem EVALUATION_ITEM = new EvaluationItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EvaluationItemRecord> getRecordType() {
        return EvaluationItemRecord.class;
    }

    /**
     * The column <code>eicn.evaluation_item.id</code>. SEQUENCE KEY
     */
    public final TableField<EvaluationItemRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.evaluation_item.name</code>. 항목명
     */
    public final TableField<EvaluationItemRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "항목명");

    /**
     * The column <code>eicn.evaluation_item.category</code>. 분류
     */
    public final TableField<EvaluationItemRecord, Long> CATEGORY = createField(DSL.name("category"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "분류");

    /**
     * The column <code>eicn.evaluation_item.valuation_basis</code>. 평가기준
     */
    public final TableField<EvaluationItemRecord, String> VALUATION_BASIS = createField(DSL.name("valuation_basis"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "평가기준");

    /**
     * The column <code>eicn.evaluation_item.max_score</code>. 배정가능 최고 점수
     */
    public final TableField<EvaluationItemRecord, Integer> MAX_SCORE = createField(DSL.name("max_score"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "배정가능 최고 점수");

    /**
     * The column <code>eicn.evaluation_item.remark</code>. 비고
     */
    public final TableField<EvaluationItemRecord, String> REMARK = createField(DSL.name("remark"), org.jooq.impl.SQLDataType.VARCHAR(1024), this, "비고");

    /**
     * The column <code>eicn.evaluation_item.sequence</code>. 정렬순서
     */
    public final TableField<EvaluationItemRecord, Integer> SEQUENCE = createField(DSL.name("sequence"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "정렬순서");

    /**
     * Create a <code>eicn.evaluation_item</code> table reference
     */
    public EvaluationItem() {
        this(DSL.name("evaluation_item"), null);
    }

    /**
     * Create an aliased <code>eicn.evaluation_item</code> table reference
     */
    public EvaluationItem(String alias) {
        this(DSL.name(alias), EVALUATION_ITEM);
    }

    /**
     * Create an aliased <code>eicn.evaluation_item</code> table reference
     */
    public EvaluationItem(Name alias) {
        this(alias, EVALUATION_ITEM);
    }

    private EvaluationItem(Name alias, Table<EvaluationItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private EvaluationItem(Name alias, Table<EvaluationItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("평가항목 관리 테이블\r\n"), TableOptions.table());
    }

    public <O extends Record> EvaluationItem(Table<O> child, ForeignKey<O, EvaluationItemRecord> key) {
        super(child, key, EVALUATION_ITEM);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EVALUATION_ITEM_FK_EVALUATION_ITEM_CATEGORY_EVALUATION_CATEGORY_ID);
    }

    @Override
    public Identity<EvaluationItemRecord, Long> getIdentity() {
        return Keys.IDENTITY_EVALUATION_ITEM;
    }

    @Override
    public UniqueKey<EvaluationItemRecord> getPrimaryKey() {
        return Keys.KEY_EVALUATION_ITEM_PRIMARY;
    }

    @Override
    public List<UniqueKey<EvaluationItemRecord>> getKeys() {
        return Arrays.<UniqueKey<EvaluationItemRecord>>asList(Keys.KEY_EVALUATION_ITEM_PRIMARY);
    }

    @Override
    public EvaluationItem as(String alias) {
        return new EvaluationItem(DSL.name(alias), this);
    }

    @Override
    public EvaluationItem as(Name alias) {
        return new EvaluationItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EvaluationItem rename(String name) {
        return new EvaluationItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EvaluationItem rename(Name name) {
        return new EvaluationItem(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Long, String, Integer, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
