/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.EvaluationItemScoreRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 평가 항목 점수 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EvaluationItemScore extends TableImpl<EvaluationItemScoreRecord> {

    private static final long serialVersionUID = 406880246;

    /**
     * The reference instance of <code>eicn.evaluation_item_score</code>
     */
    public static final EvaluationItemScore EVALUATION_ITEM_SCORE = new EvaluationItemScore();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EvaluationItemScoreRecord> getRecordType() {
        return EvaluationItemScoreRecord.class;
    }

    /**
     * The column <code>eicn.evaluation_item_score.id</code>. SEQUENCE KEY
     */
    public final TableField<EvaluationItemScoreRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.evaluation_item_score.evaluation_id</code>. 평가지 아이디
     */
    public final TableField<EvaluationItemScoreRecord, Long> EVALUATION_ID = createField(DSL.name("evaluation_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "평가지 아이디");

    /**
     * The column <code>eicn.evaluation_item_score.cdr_id</code>. 녹취 아이디
     */
    public final TableField<EvaluationItemScoreRecord, Integer> CDR_ID = createField(DSL.name("cdr_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "녹취 아이디");

    /**
     * The column <code>eicn.evaluation_item_score.item_id</code>. 평가항목 아이디
     */
    public final TableField<EvaluationItemScoreRecord, Long> ITEM_ID = createField(DSL.name("item_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "평가항목 아이디");

    /**
     * The column <code>eicn.evaluation_item_score.target_userid</code>. 평가대상 아이디
     */
    public final TableField<EvaluationItemScoreRecord, String> TARGET_USERID = createField(DSL.name("target_userid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "평가대상 아이디");

    /**
     * The column <code>eicn.evaluation_item_score.score</code>. 평가점수
     */
    public final TableField<EvaluationItemScoreRecord, Byte> SCORE = createField(DSL.name("score"), org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "평가점수");

    /**
     * Create a <code>eicn.evaluation_item_score</code> table reference
     */
    public EvaluationItemScore() {
        this(DSL.name("evaluation_item_score"), null);
    }

    /**
     * Create an aliased <code>eicn.evaluation_item_score</code> table reference
     */
    public EvaluationItemScore(String alias) {
        this(DSL.name(alias), EVALUATION_ITEM_SCORE);
    }

    /**
     * Create an aliased <code>eicn.evaluation_item_score</code> table reference
     */
    public EvaluationItemScore(Name alias) {
        this(alias, EVALUATION_ITEM_SCORE);
    }

    private EvaluationItemScore(Name alias, Table<EvaluationItemScoreRecord> aliased) {
        this(alias, aliased, null);
    }

    private EvaluationItemScore(Name alias, Table<EvaluationItemScoreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("평가 항목 점수 테이블"), TableOptions.table());
    }

    public <O extends Record> EvaluationItemScore(Table<O> child, ForeignKey<O, EvaluationItemScoreRecord> key) {
        super(child, key, EVALUATION_ITEM_SCORE);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EVALUATION_ITEM_SCORE_INDEX_RESULT);
    }

    @Override
    public Identity<EvaluationItemScoreRecord, Long> getIdentity() {
        return Keys.IDENTITY_EVALUATION_ITEM_SCORE;
    }

    @Override
    public UniqueKey<EvaluationItemScoreRecord> getPrimaryKey() {
        return Keys.KEY_EVALUATION_ITEM_SCORE_PRIMARY;
    }

    @Override
    public List<UniqueKey<EvaluationItemScoreRecord>> getKeys() {
        return Arrays.<UniqueKey<EvaluationItemScoreRecord>>asList(Keys.KEY_EVALUATION_ITEM_SCORE_PRIMARY);
    }

    @Override
    public EvaluationItemScore as(String alias) {
        return new EvaluationItemScore(DSL.name(alias), this);
    }

    @Override
    public EvaluationItemScore as(Name alias) {
        return new EvaluationItemScore(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EvaluationItemScore rename(String name) {
        return new EvaluationItemScore(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EvaluationItemScore rename(Name name) {
        return new EvaluationItemScore(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Integer, Long, String, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
