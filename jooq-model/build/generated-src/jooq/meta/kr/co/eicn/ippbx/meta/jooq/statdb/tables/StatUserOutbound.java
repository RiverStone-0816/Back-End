/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.statdb.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.statdb.Indexes;
import kr.co.eicn.ippbx.meta.jooq.statdb.Keys;
import kr.co.eicn.ippbx.meta.jooq.statdb.Statdb;
import kr.co.eicn.ippbx.meta.jooq.statdb.tables.records.StatUserOutboundRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 상담원의 아웃바운드 통계 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatUserOutbound extends TableImpl<StatUserOutboundRecord> {

    private static final long serialVersionUID = -1526168260;

    /**
     * The reference instance of <code>STATDB.stat_user_outbound</code>
     */
    public static final StatUserOutbound STAT_USER_OUTBOUND = new StatUserOutbound();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatUserOutboundRecord> getRecordType() {
        return StatUserOutboundRecord.class;
    }

    /**
     * The column <code>STATDB.stat_user_outbound.seq</code>. 번호
     */
    public final TableField<StatUserOutboundRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "번호");

    /**
     * The column <code>STATDB.stat_user_outbound.company_id</code>. 회사아이디
     */
    public final TableField<StatUserOutboundRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아이디");

    /**
     * The column <code>STATDB.stat_user_outbound.group_code</code>. 조직코드
     */
    public final TableField<StatUserOutboundRecord, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4), this, "조직코드");

    /**
     * The column <code>STATDB.stat_user_outbound.group_tree_name</code>. 조직트리명
     */
    public final TableField<StatUserOutboundRecord, String> GROUP_TREE_NAME = createField(DSL.name("group_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "조직트리명");

    /**
     * The column <code>STATDB.stat_user_outbound.group_level</code>. 조직레벨
     */
    public final TableField<StatUserOutboundRecord, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "조직레벨");

    /**
     * The column <code>STATDB.stat_user_outbound.userid</code>. 상담원아이디
     */
    public final TableField<StatUserOutboundRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담원아이디");

    /**
     * The column <code>STATDB.stat_user_outbound.from_org</code>. 일반콜-NOR, 콜백콜-CALLBACK,예약콜-RESERVE, PDS콜-PDS, 고객DB-MAINDB
     */
    public final TableField<StatUserOutboundRecord, String> FROM_ORG = createField(DSL.name("from_org"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "일반콜-NOR, 콜백콜-CALLBACK,예약콜-RESERVE, PDS콜-PDS, 고객DB-MAINDB");

    /**
     * The column <code>STATDB.stat_user_outbound.worktime_yn</code>.
     */
    public final TableField<StatUserOutboundRecord, String> WORKTIME_YN = createField(DSL.name("worktime_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("Y", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>STATDB.stat_user_outbound.dcontext</code>. 다이얼플랜컨택스트
     */
    public final TableField<StatUserOutboundRecord, String> DCONTEXT = createField(DSL.name("dcontext"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "다이얼플랜컨택스트");

    /**
     * The column <code>STATDB.stat_user_outbound.stat_date</code>. 날짜
     */
    public final TableField<StatUserOutboundRecord, Date> STAT_DATE = createField(DSL.name("stat_date"), org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.inline("2009-01-01", org.jooq.impl.SQLDataType.DATE)), this, "날짜");

    /**
     * The column <code>STATDB.stat_user_outbound.stat_hour</code>. 시간
     */
    public final TableField<StatUserOutboundRecord, Byte> STAT_HOUR = createField(DSL.name("stat_hour"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "시간");

    /**
     * The column <code>STATDB.stat_user_outbound.out_total</code>. 총계
     */
    public final TableField<StatUserOutboundRecord, Integer> OUT_TOTAL = createField(DSL.name("out_total"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "총계");

    /**
     * The column <code>STATDB.stat_user_outbound.out_success</code>. 응답
     */
    public final TableField<StatUserOutboundRecord, Integer> OUT_SUCCESS = createField(DSL.name("out_success"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "응답");

    /**
     * The column <code>STATDB.stat_user_outbound.out_billsec_sum</code>. 통화시간
     */
    public final TableField<StatUserOutboundRecord, Integer> OUT_BILLSEC_SUM = createField(DSL.name("out_billsec_sum"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "통화시간");

    /**
     * The column <code>STATDB.stat_user_outbound.callback_call_cnt</code>. 콜백처리를위한 콜건수
     */
    public final TableField<StatUserOutboundRecord, Integer> CALLBACK_CALL_CNT = createField(DSL.name("callback_call_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "콜백처리를위한 콜건수");

    /**
     * The column <code>STATDB.stat_user_outbound.callback_call_succ</code>. 콜백처리를위한 콜이후 완료건수
     */
    public final TableField<StatUserOutboundRecord, Integer> CALLBACK_CALL_SUCC = createField(DSL.name("callback_call_succ"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "콜백처리를위한 콜이후 완료건수");

    /**
     * The column <code>STATDB.stat_user_outbound.reserve_call_cnt</code>. 예약콜처리를 위한 콜건수
     */
    public final TableField<StatUserOutboundRecord, Integer> RESERVE_CALL_CNT = createField(DSL.name("reserve_call_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "예약콜처리를 위한 콜건수");

    /**
     * The column <code>STATDB.stat_user_outbound.reserve_call_succ</code>. 예약콜처리를 콜이후 완료건수
     */
    public final TableField<StatUserOutboundRecord, Integer> RESERVE_CALL_SUCC = createField(DSL.name("reserve_call_succ"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "예약콜처리를 콜이후 완료건수");

    /**
     * Create a <code>STATDB.stat_user_outbound</code> table reference
     */
    public StatUserOutbound() {
        this(DSL.name("stat_user_outbound"), null);
    }

    /**
     * Create an aliased <code>STATDB.stat_user_outbound</code> table reference
     */
    public StatUserOutbound(String alias) {
        this(DSL.name(alias), STAT_USER_OUTBOUND);
    }

    /**
     * Create an aliased <code>STATDB.stat_user_outbound</code> table reference
     */
    public StatUserOutbound(Name alias) {
        this(alias, STAT_USER_OUTBOUND);
    }

    private StatUserOutbound(Name alias, Table<StatUserOutboundRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatUserOutbound(Name alias, Table<StatUserOutboundRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("상담원의 아웃바운드 통계 테이블"), TableOptions.table());
    }

    public <O extends Record> StatUserOutbound(Table<O> child, ForeignKey<O, StatUserOutboundRecord> key) {
        super(child, key, STAT_USER_OUTBOUND);
    }

    @Override
    public Schema getSchema() {
        return Statdb.STATDB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STAT_USER_OUTBOUND_COMPANY_ID, Indexes.STAT_USER_OUTBOUND_DCONTEXT, Indexes.STAT_USER_OUTBOUND_FROM_ORG, Indexes.STAT_USER_OUTBOUND_GROUP_CODE, Indexes.STAT_USER_OUTBOUND_GROUP_LEVEL, Indexes.STAT_USER_OUTBOUND_GROUP_TREE_NAME, Indexes.STAT_USER_OUTBOUND_STAT_DATE, Indexes.STAT_USER_OUTBOUND_STAT_HOUR, Indexes.STAT_USER_OUTBOUND_USERID, Indexes.STAT_USER_OUTBOUND_WORKTIME_YN);
    }

    @Override
    public Identity<StatUserOutboundRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STAT_USER_OUTBOUND;
    }

    @Override
    public UniqueKey<StatUserOutboundRecord> getPrimaryKey() {
        return Keys.KEY_STAT_USER_OUTBOUND_PRIMARY;
    }

    @Override
    public List<UniqueKey<StatUserOutboundRecord>> getKeys() {
        return Arrays.<UniqueKey<StatUserOutboundRecord>>asList(Keys.KEY_STAT_USER_OUTBOUND_PRIMARY);
    }

    @Override
    public StatUserOutbound as(String alias) {
        return new StatUserOutbound(DSL.name(alias), this);
    }

    @Override
    public StatUserOutbound as(Name alias) {
        return new StatUserOutbound(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatUserOutbound rename(String name) {
        return new StatUserOutbound(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatUserOutbound rename(Name name) {
        return new StatUserOutbound(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<Integer, String, String, String, Integer, String, String, String, String, Date, Byte, Integer, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
