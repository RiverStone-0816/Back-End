/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.MentMngRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MentMng extends TableImpl<MentMngRecord> {

    private static final long serialVersionUID = 1070795297;

    /**
     * The reference instance of <code>eicn.ment_mng</code>
     */
    public static final MentMng MENT_MNG = new MentMng();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MentMngRecord> getRecordType() {
        return MentMngRecord.class;
    }

    /**
     * The column <code>eicn.ment_mng.seq</code>.
     */
    public final TableField<MentMngRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.ment_mng.campaign_type</code>.
     */
    public final TableField<MentMngRecord, String> CAMPAIGN_TYPE = createField(DSL.name("campaign_type"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.ment_mng.campaign_seq</code>.
     */
    public final TableField<MentMngRecord, Integer> CAMPAIGN_SEQ = createField(DSL.name("campaign_seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.ment_mng.ment_title</code>.
     */
    public final TableField<MentMngRecord, String> MENT_TITLE = createField(DSL.name("ment_title"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.ment_mng.ment_text</code>.
     */
    public final TableField<MentMngRecord, String> MENT_TEXT = createField(DSL.name("ment_text"), org.jooq.impl.SQLDataType.VARCHAR(5000).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.ment_mng</code> table reference
     */
    public MentMng() {
        this(DSL.name("ment_mng"), null);
    }

    /**
     * Create an aliased <code>eicn.ment_mng</code> table reference
     */
    public MentMng(String alias) {
        this(DSL.name(alias), MENT_MNG);
    }

    /**
     * Create an aliased <code>eicn.ment_mng</code> table reference
     */
    public MentMng(Name alias) {
        this(alias, MENT_MNG);
    }

    private MentMng(Name alias, Table<MentMngRecord> aliased) {
        this(alias, aliased, null);
    }

    private MentMng(Name alias, Table<MentMngRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> MentMng(Table<O> child, ForeignKey<O, MentMngRecord> key) {
        super(child, key, MENT_MNG);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<MentMngRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MENT_MNG;
    }

    @Override
    public UniqueKey<MentMngRecord> getPrimaryKey() {
        return Keys.KEY_MENT_MNG_PRIMARY;
    }

    @Override
    public List<UniqueKey<MentMngRecord>> getKeys() {
        return Arrays.<UniqueKey<MentMngRecord>>asList(Keys.KEY_MENT_MNG_PRIMARY, Keys.KEY_MENT_MNG_CAMPAIGN_TYPE);
    }

    @Override
    public MentMng as(String alias) {
        return new MentMng(DSL.name(alias), this);
    }

    @Override
    public MentMng as(Name alias) {
        return new MentMng(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MentMng rename(String name) {
        return new MentMng(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MentMng rename(Name name) {
        return new MentMng(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Integer, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
