/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.QueueMemberTableRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * 실제 헌트에 해당하는 내선정보들과 개인 내선정보들을 저장한다.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueueMemberTable extends TableImpl<QueueMemberTableRecord> {

    private static final long serialVersionUID = 59481031;

    /**
     * The reference instance of <code>eicn.queue_member_table</code>
     */
    public static final QueueMemberTable QUEUE_MEMBER_TABLE = new QueueMemberTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QueueMemberTableRecord> getRecordType() {
        return QueueMemberTableRecord.class;
    }

    /**
     * The column <code>eicn.queue_member_table.uniqueid</code>. 고유값ID
     */
    public final TableField<QueueMemberTableRecord, UInteger> UNIQUEID = createField(DSL.name("uniqueid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "고유값ID");

    /**
     * The column <code>eicn.queue_member_table.membername</code>. phone_info.peer 참조
     */
    public final TableField<QueueMemberTableRecord, String> MEMBERNAME = createField(DSL.name("membername"), org.jooq.impl.SQLDataType.VARCHAR(40).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "phone_info.peer 참조");

    /**
     * The column <code>eicn.queue_member_table.queue_name</code>. 헌트 그룹명
     */
    public final TableField<QueueMemberTableRecord, String> QUEUE_NAME = createField(DSL.name("queue_name"), org.jooq.impl.SQLDataType.VARCHAR(128).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "헌트 그룹명");

    /**
     * The column <code>eicn.queue_member_table.interface</code>.
     */
    public final TableField<QueueMemberTableRecord, String> INTERFACE = createField(DSL.name("interface"), org.jooq.impl.SQLDataType.VARCHAR(128).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.queue_member_table.penalty</code>.
     */
    public final TableField<QueueMemberTableRecord, Integer> PENALTY = createField(DSL.name("penalty"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.queue_member_table.paused</code>. 전화기상태
     */
    public final TableField<QueueMemberTableRecord, Integer> PAUSED = createField(DSL.name("paused"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "전화기상태");

    /**
     * The column <code>eicn.queue_member_table.is_login</code>. 로그인상태
     */
    public final TableField<QueueMemberTableRecord, String> IS_LOGIN = createField(DSL.name("is_login"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "로그인상태");

    /**
     * The column <code>eicn.queue_member_table.userid</code>.
     */
    public final TableField<QueueMemberTableRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.queue_member_table.company_id</code>. 회사아이디
     */
    public final TableField<QueueMemberTableRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아이디");

    /**
     * The column <code>eicn.queue_member_table.call_cnt</code>.
     */
    public final TableField<QueueMemberTableRecord, Integer> CALL_CNT = createField(DSL.name("call_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.queue_member_table.call_rate</code>.
     */
    public final TableField<QueueMemberTableRecord, Integer> CALL_RATE = createField(DSL.name("call_rate"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.queue_member_table.lastcall_date</code>. 마지막콜시간
     */
    public final TableField<QueueMemberTableRecord, Timestamp> LASTCALL_DATE = createField(DSL.name("lastcall_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2016-01-01 01:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "마지막콜시간");

    /**
     * The column <code>eicn.queue_member_table.queue_number</code>.
     */
    public final TableField<QueueMemberTableRecord, String> QUEUE_NUMBER = createField(DSL.name("queue_number"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.queue_member_table.blending_mode</code>.
     */
    public final TableField<QueueMemberTableRecord, String> BLENDING_MODE = createField(DSL.name("blending_mode"), org.jooq.impl.SQLDataType.VARCHAR(5).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.queue_member_table</code> table reference
     */
    public QueueMemberTable() {
        this(DSL.name("queue_member_table"), null);
    }

    /**
     * Create an aliased <code>eicn.queue_member_table</code> table reference
     */
    public QueueMemberTable(String alias) {
        this(DSL.name(alias), QUEUE_MEMBER_TABLE);
    }

    /**
     * Create an aliased <code>eicn.queue_member_table</code> table reference
     */
    public QueueMemberTable(Name alias) {
        this(alias, QUEUE_MEMBER_TABLE);
    }

    private QueueMemberTable(Name alias, Table<QueueMemberTableRecord> aliased) {
        this(alias, aliased, null);
    }

    private QueueMemberTable(Name alias, Table<QueueMemberTableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("실제 헌트에 해당하는 내선정보들과 개인 내선정보들을 저장한다."), TableOptions.table());
    }

    public <O extends Record> QueueMemberTable(Table<O> child, ForeignKey<O, QueueMemberTableRecord> key) {
        super(child, key, QUEUE_MEMBER_TABLE);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QUEUE_MEMBER_TABLE_COMPANY_ID, Indexes.QUEUE_MEMBER_TABLE_IS_LOGIN, Indexes.QUEUE_MEMBER_TABLE_MEMBERNAME, Indexes.QUEUE_MEMBER_TABLE_QUEUE_NAME);
    }

    @Override
    public Identity<QueueMemberTableRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_QUEUE_MEMBER_TABLE;
    }

    @Override
    public UniqueKey<QueueMemberTableRecord> getPrimaryKey() {
        return Keys.KEY_QUEUE_MEMBER_TABLE_PRIMARY;
    }

    @Override
    public List<UniqueKey<QueueMemberTableRecord>> getKeys() {
        return Arrays.<UniqueKey<QueueMemberTableRecord>>asList(Keys.KEY_QUEUE_MEMBER_TABLE_PRIMARY);
    }

    @Override
    public QueueMemberTable as(String alias) {
        return new QueueMemberTable(DSL.name(alias), this);
    }

    @Override
    public QueueMemberTable as(Name alias) {
        return new QueueMemberTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QueueMemberTable rename(String name) {
        return new QueueMemberTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QueueMemberTable rename(Name name) {
        return new QueueMemberTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<UInteger, String, String, String, Integer, Integer, String, String, String, Integer, Integer, Timestamp, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
