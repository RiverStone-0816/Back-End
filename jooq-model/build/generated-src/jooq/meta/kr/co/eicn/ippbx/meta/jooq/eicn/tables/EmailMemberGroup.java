/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.EmailMemberGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 이메일수신그룹관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailMemberGroup extends TableImpl<EmailMemberGroupRecord> {

    private static final long serialVersionUID = -1541488602;

    /**
     * The reference instance of <code>eicn.email_member_group</code>
     */
    public static final EmailMemberGroup EMAIL_MEMBER_GROUP = new EmailMemberGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmailMemberGroupRecord> getRecordType() {
        return EmailMemberGroupRecord.class;
    }

    /**
     * The column <code>eicn.email_member_group.group_id</code>. 그룹아이디
     */
    public final TableField<EmailMemberGroupRecord, Integer> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "그룹아이디");

    /**
     * The column <code>eicn.email_member_group.group_name</code>. 이메일그룹명
     */
    public final TableField<EmailMemberGroupRecord, String> GROUP_NAME = createField(DSL.name("group_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "이메일그룹명");

    /**
     * The column <code>eicn.email_member_group.company_id</code>. 회사아이디
     */
    public final TableField<EmailMemberGroupRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아이디");

    /**
     * The column <code>eicn.email_member_group.email_id</code>. 관련이메일서비스
     */
    public final TableField<EmailMemberGroupRecord, Integer> EMAIL_ID = createField(DSL.name("email_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "관련이메일서비스");

    /**
     * Create a <code>eicn.email_member_group</code> table reference
     */
    public EmailMemberGroup() {
        this(DSL.name("email_member_group"), null);
    }

    /**
     * Create an aliased <code>eicn.email_member_group</code> table reference
     */
    public EmailMemberGroup(String alias) {
        this(DSL.name(alias), EMAIL_MEMBER_GROUP);
    }

    /**
     * Create an aliased <code>eicn.email_member_group</code> table reference
     */
    public EmailMemberGroup(Name alias) {
        this(alias, EMAIL_MEMBER_GROUP);
    }

    private EmailMemberGroup(Name alias, Table<EmailMemberGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmailMemberGroup(Name alias, Table<EmailMemberGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("이메일수신그룹관리 테이블"), TableOptions.table());
    }

    public <O extends Record> EmailMemberGroup(Table<O> child, ForeignKey<O, EmailMemberGroupRecord> key) {
        super(child, key, EMAIL_MEMBER_GROUP);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<EmailMemberGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMAIL_MEMBER_GROUP;
    }

    @Override
    public List<UniqueKey<EmailMemberGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<EmailMemberGroupRecord>>asList(Keys.KEY_EMAIL_MEMBER_GROUP_GROUP_ID);
    }

    @Override
    public EmailMemberGroup as(String alias) {
        return new EmailMemberGroup(DSL.name(alias), this);
    }

    @Override
    public EmailMemberGroup as(Name alias) {
        return new EmailMemberGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmailMemberGroup rename(String name) {
        return new EmailMemberGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EmailMemberGroup rename(Name name) {
        return new EmailMemberGroup(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
