/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.QaResultRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaResult extends TableImpl<QaResultRecord> {

    private static final long serialVersionUID = 923248265;

    /**
     * The reference instance of <code>eicn.qa_result</code>
     */
    public static final QaResult QA_RESULT = new QaResult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaResultRecord> getRecordType() {
        return QaResultRecord.class;
    }

    /**
     * The column <code>eicn.qa_result.seq</code>.
     */
    public final TableField<QaResultRecord, UInteger> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.qa_result.qa_seq</code>.
     */
    public final TableField<QaResultRecord, UInteger> QA_SEQ = createField(DSL.name("qa_seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>eicn.qa_result.cdr_seq</code>.
     */
    public final TableField<QaResultRecord, UInteger> CDR_SEQ = createField(DSL.name("cdr_seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>eicn.qa_result.cdr_userid</code>.
     */
    public final TableField<QaResultRecord, String> CDR_USERID = createField(DSL.name("cdr_userid"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.qa_result.call_uniqueid</code>.
     */
    public final TableField<QaResultRecord, String> CALL_UNIQUEID = createField(DSL.name("call_uniqueid"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>eicn.qa_result.call_peer</code>.
     */
    public final TableField<QaResultRecord, String> CALL_PEER = createField(DSL.name("call_peer"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.qa_result.call_src</code>.
     */
    public final TableField<QaResultRecord, String> CALL_SRC = createField(DSL.name("call_src"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.qa_result.call_dst</code>.
     */
    public final TableField<QaResultRecord, String> CALL_DST = createField(DSL.name("call_dst"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.qa_result.call_inout</code>.
     */
    public final TableField<QaResultRecord, String> CALL_INOUT = createField(DSL.name("call_inout"), org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>eicn.qa_result.call_userid</code>.
     */
    public final TableField<QaResultRecord, String> CALL_USERID = createField(DSL.name("call_userid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>eicn.qa_result.call_date</code>.
     */
    public final TableField<QaResultRecord, Timestamp> CALL_DATE = createField(DSL.name("call_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>eicn.qa_result.memo</code>.
     */
    public final TableField<QaResultRecord, String> MEMO = createField(DSL.name("memo"), org.jooq.impl.SQLDataType.VARCHAR(3000), this, "");

    /**
     * The column <code>eicn.qa_result.record_file</code>.
     */
    public final TableField<QaResultRecord, String> RECORD_FILE = createField(DSL.name("record_file"), org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>eicn.qa_result.finished</code>.
     */
    public final TableField<QaResultRecord, String> FINISHED = createField(DSL.name("finished"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.qa_result.qa_item_count</code>.
     */
    public final TableField<QaResultRecord, UShort> QA_ITEM_COUNT = createField(DSL.name("qa_item_count"), org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * The column <code>eicn.qa_result.qa_total_score</code>.
     */
    public final TableField<QaResultRecord, UShort> QA_TOTAL_SCORE = createField(DSL.name("qa_total_score"), org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * The column <code>eicn.qa_result.qa_average</code>.
     */
    public final TableField<QaResultRecord, BigDecimal> QA_AVERAGE = createField(DSL.name("qa_average"), org.jooq.impl.SQLDataType.DECIMAL(7, 2), this, "");

    /**
     * The column <code>eicn.qa_result.company_id</code>.
     */
    public final TableField<QaResultRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>eicn.qa_result.insert_userid</code>.
     */
    public final TableField<QaResultRecord, String> INSERT_USERID = createField(DSL.name("insert_userid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>eicn.qa_result.insert_date</code>.
     */
    public final TableField<QaResultRecord, Timestamp> INSERT_DATE = createField(DSL.name("insert_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>eicn.qa_result.update_userid</code>.
     */
    public final TableField<QaResultRecord, String> UPDATE_USERID = createField(DSL.name("update_userid"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.qa_result.update_date</code>.
     */
    public final TableField<QaResultRecord, Timestamp> UPDATE_DATE = createField(DSL.name("update_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>eicn.qa_result.deleted</code>.
     */
    public final TableField<QaResultRecord, String> DELETED = createField(DSL.name("deleted"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * Create a <code>eicn.qa_result</code> table reference
     */
    public QaResult() {
        this(DSL.name("qa_result"), null);
    }

    /**
     * Create an aliased <code>eicn.qa_result</code> table reference
     */
    public QaResult(String alias) {
        this(DSL.name(alias), QA_RESULT);
    }

    /**
     * Create an aliased <code>eicn.qa_result</code> table reference
     */
    public QaResult(Name alias) {
        this(alias, QA_RESULT);
    }

    private QaResult(Name alias, Table<QaResultRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaResult(Name alias, Table<QaResultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> QaResult(Table<O> child, ForeignKey<O, QaResultRecord> key) {
        super(child, key, QA_RESULT);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_RESULT_QA_RESULT_INDEX1, Indexes.QA_RESULT_QA_RESULT_INDEX2, Indexes.QA_RESULT_QA_RESULT_INDEX3, Indexes.QA_RESULT_QA_RESULT_INDEX4);
    }

    @Override
    public Identity<QaResultRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_QA_RESULT;
    }

    @Override
    public UniqueKey<QaResultRecord> getPrimaryKey() {
        return Keys.KEY_QA_RESULT_PRIMARY;
    }

    @Override
    public List<UniqueKey<QaResultRecord>> getKeys() {
        return Arrays.<UniqueKey<QaResultRecord>>asList(Keys.KEY_QA_RESULT_PRIMARY);
    }

    @Override
    public QaResult as(String alias) {
        return new QaResult(DSL.name(alias), this);
    }

    @Override
    public QaResult as(Name alias) {
        return new QaResult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaResult rename(String name) {
        return new QaResult(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaResult rename(Name name) {
        return new QaResult(name, null);
    }
}
