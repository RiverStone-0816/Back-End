/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.QaInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * 평가지 관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaInfo extends TableImpl<QaInfoRecord> {

    private static final long serialVersionUID = 1721198899;

    /**
     * The reference instance of <code>eicn.qa_info</code>
     */
    public static final QaInfo QA_INFO = new QaInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaInfoRecord> getRecordType() {
        return QaInfoRecord.class;
    }

    /**
     * The column <code>eicn.qa_info.seq</code>. SEQUENCE KEY
     */
    public final TableField<QaInfoRecord, UInteger> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.qa_info.title</code>.
     */
    public final TableField<QaInfoRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>eicn.qa_info.is_use</code>.
     */
    public final TableField<QaInfoRecord, String> IS_USE = createField(DSL.name("is_use"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.qa_info.use_type</code>.
     */
    public final TableField<QaInfoRecord, UByte> USE_TYPE = createField(DSL.name("use_type"), org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>eicn.qa_info.start_date</code>.
     */
    public final TableField<QaInfoRecord, Timestamp> START_DATE = createField(DSL.name("start_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>eicn.qa_info.end_date</code>.
     */
    public final TableField<QaInfoRecord, Timestamp> END_DATE = createField(DSL.name("end_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>eicn.qa_info.score_set_seq</code>.
     */
    public final TableField<QaInfoRecord, UInteger> SCORE_SET_SEQ = createField(DSL.name("score_set_seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>eicn.qa_info.score_type</code>.
     */
    public final TableField<QaInfoRecord, String> SCORE_TYPE = createField(DSL.name("score_type"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("A", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.qa_info.score_min</code>.
     */
    public final TableField<QaInfoRecord, UShort> SCORE_MIN = createField(DSL.name("score_min"), org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * The column <code>eicn.qa_info.score_max</code>.
     */
    public final TableField<QaInfoRecord, UShort> SCORE_MAX = createField(DSL.name("score_max"), org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * The column <code>eicn.qa_info.category_step</code>.
     */
    public final TableField<QaInfoRecord, UByte> CATEGORY_STEP = createField(DSL.name("category_step"), org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>eicn.qa_info.company_id</code>.
     */
    public final TableField<QaInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>eicn.qa_info.insert_userid</code>.
     */
    public final TableField<QaInfoRecord, String> INSERT_USERID = createField(DSL.name("insert_userid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>eicn.qa_info.insert_date</code>.
     */
    public final TableField<QaInfoRecord, Timestamp> INSERT_DATE = createField(DSL.name("insert_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>eicn.qa_info.update_userid</code>.
     */
    public final TableField<QaInfoRecord, String> UPDATE_USERID = createField(DSL.name("update_userid"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.qa_info.update_date</code>.
     */
    public final TableField<QaInfoRecord, Timestamp> UPDATE_DATE = createField(DSL.name("update_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>eicn.qa_info.deleted</code>.
     */
    public final TableField<QaInfoRecord, String> DELETED = createField(DSL.name("deleted"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * Create a <code>eicn.qa_info</code> table reference
     */
    public QaInfo() {
        this(DSL.name("qa_info"), null);
    }

    /**
     * Create an aliased <code>eicn.qa_info</code> table reference
     */
    public QaInfo(String alias) {
        this(DSL.name(alias), QA_INFO);
    }

    /**
     * Create an aliased <code>eicn.qa_info</code> table reference
     */
    public QaInfo(Name alias) {
        this(alias, QA_INFO);
    }

    private QaInfo(Name alias, Table<QaInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaInfo(Name alias, Table<QaInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("평가지 관리 테이블\r\n"), TableOptions.table());
    }

    public <O extends Record> QaInfo(Table<O> child, ForeignKey<O, QaInfoRecord> key) {
        super(child, key, QA_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_INFO_QA_INFO_INDEX1);
    }

    @Override
    public Identity<QaInfoRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_QA_INFO;
    }

    @Override
    public UniqueKey<QaInfoRecord> getPrimaryKey() {
        return Keys.KEY_QA_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<QaInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<QaInfoRecord>>asList(Keys.KEY_QA_INFO_PRIMARY);
    }

    @Override
    public QaInfo as(String alias) {
        return new QaInfo(DSL.name(alias), this);
    }

    @Override
    public QaInfo as(Name alias) {
        return new QaInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaInfo rename(String name) {
        return new QaInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaInfo rename(Name name) {
        return new QaInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<UInteger, String, String, UByte, Timestamp, Timestamp, UInteger, String, UShort, UShort, UByte, String, String, Timestamp, String, Timestamp, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
