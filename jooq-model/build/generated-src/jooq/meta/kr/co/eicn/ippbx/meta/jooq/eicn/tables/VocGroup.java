/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.VocGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VocGroup extends TableImpl<VocGroupRecord> {

    private static final long serialVersionUID = 1505450299;

    /**
     * The reference instance of <code>eicn.voc_group</code>
     */
    public static final VocGroup VOC_GROUP = new VocGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VocGroupRecord> getRecordType() {
        return VocGroupRecord.class;
    }

    /**
     * The column <code>eicn.voc_group.seq</code>.
     */
    public final TableField<VocGroupRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.voc_group.insert_date</code>. 만든날짜
     */
    public final TableField<VocGroupRecord, Timestamp> INSERT_DATE = createField(DSL.name("insert_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2020-01-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "만든날짜");

    /**
     * The column <code>eicn.voc_group.voc_group_name</code>. VOC/해피콜명
     */
    public final TableField<VocGroupRecord, String> VOC_GROUP_NAME = createField(DSL.name("voc_group_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "VOC/해피콜명");

    /**
     * The column <code>eicn.voc_group.process_kind</code>. VOC또는HAPPYCALL의 진행여부/기한 CONTINUE-비사용할때까지계속진행,NOTUSE-사용하지않음,TERM-일정기간동안진행,DELETE-삭제됨
     */
    public final TableField<VocGroupRecord, String> PROCESS_KIND = createField(DSL.name("process_kind"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)), this, "VOC또는HAPPYCALL의 진행여부/기한 CONTINUE-비사용할때까지계속진행,NOTUSE-사용하지않음,TERM-일정기간동안진행,DELETE-삭제됨");

    /**
     * The column <code>eicn.voc_group.start_term</code>. process_kind=TERM 조건에서 시작날짜
     */
    public final TableField<VocGroupRecord, Date> START_TERM = createField(DSL.name("start_term"), org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.inline("2020-01-01", org.jooq.impl.SQLDataType.DATE)), this, "process_kind=TERM 조건에서 시작날짜");

    /**
     * The column <code>eicn.voc_group.end_term</code>. process_kind=TERM 조건에서 종료날짜
     */
    public final TableField<VocGroupRecord, Date> END_TERM = createField(DSL.name("end_term"), org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.inline("2020-01-01", org.jooq.impl.SQLDataType.DATE)), this, "process_kind=TERM 조건에서 종료날짜");

    /**
     * The column <code>eicn.voc_group.is_ars_sms</code>. VOC또는HAPPYCALL의 형태 ARS,SMS. SMS서비스를 사용하지 않는고객은 디폴트로 ARS
     */
    public final TableField<VocGroupRecord, String> IS_ARS_SMS = createField(DSL.name("is_ars_sms"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("ARS", org.jooq.impl.SQLDataType.VARCHAR)), this, "VOC또는HAPPYCALL의 형태 ARS,SMS. SMS서비스를 사용하지 않는고객은 디폴트로 ARS");

    /**
     * The column <code>eicn.voc_group.sender</code>. 진행을 결정하는 주체 MEMBER-상담사가 화면에서결정 AUTO-자동으로 조건이 맞으면진행
     */
    public final TableField<VocGroupRecord, String> SENDER = createField(DSL.name("sender"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("MEMBER", org.jooq.impl.SQLDataType.VARCHAR)), this, "진행을 결정하는 주체 MEMBER-상담사가 화면에서결정 AUTO-자동으로 조건이 맞으면진행");

    /**
     * The column <code>eicn.voc_group.ars_research_id</code>. is_ars_sms=ARS 조건에서 ARS설문시나리오아이디
     */
    public final TableField<VocGroupRecord, Integer> ARS_RESEARCH_ID = createField(DSL.name("ars_research_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "is_ars_sms=ARS 조건에서 ARS설문시나리오아이디");

    /**
     * The column <code>eicn.voc_group.sms_ment</code>. is_ars_sms=SMS 조건에서 SMS문구
     */
    public final TableField<VocGroupRecord, String> SMS_MENT = createField(DSL.name("sms_ment"), org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "is_ars_sms=SMS 조건에서 SMS문구");

    /**
     * The column <code>eicn.voc_group.outbound_target</code>. sender=AUTO 조건일때 MEMBER-일정상담사들의 아웃바운드콜만진행,CIDNUM-특정발신번호CID만진행,ALL-모든발신,NO-아웃바운드모두진행하지않음
     */
    public final TableField<VocGroupRecord, String> OUTBOUND_TARGET = createField(DSL.name("outbound_target"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("NO", org.jooq.impl.SQLDataType.VARCHAR)), this, "sender=AUTO 조건일때 MEMBER-일정상담사들의 아웃바운드콜만진행,CIDNUM-특정발신번호CID만진행,ALL-모든발신,NO-아웃바운드모두진행하지않음");

    /**
     * The column <code>eicn.voc_group.outbound_call_kind</code>. sender=AUTO &amp;&amp; outbound_target!=NO 조건에서 NOANSWER-발신콜비수신때진행,ANSWER-발신콜통화된콜때진행, ALL-발신된모든콜진행
     */
    public final TableField<VocGroupRecord, String> OUTBOUND_CALL_KIND = createField(DSL.name("outbound_call_kind"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "sender=AUTO && outbound_target!=NO 조건에서 NOANSWER-발신콜비수신때진행,ANSWER-발신콜통화된콜때진행, ALL-발신된모든콜진행");

    /**
     * The column <code>eicn.voc_group.outbound_target_cidnum</code>. sender=AUTO &amp;&amp; outbound_target=CIDNUM 조건일때, 대상이되는 발신번호CID
     */
    public final TableField<VocGroupRecord, String> OUTBOUND_TARGET_CIDNUM = createField(DSL.name("outbound_target_cidnum"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "sender=AUTO && outbound_target=CIDNUM 조건일때, 대상이되는 발신번호CID");

    /**
     * The column <code>eicn.voc_group.inbound_target</code>. sender=AUTO 조건일때 MEMBER-일정상담사들의 인바운드콜만진행,SVCNUM-수신대표번호만진행,ALL-모든인바운드,NO-인바운드모두진행하지않음
     */
    public final TableField<VocGroupRecord, String> INBOUND_TARGET = createField(DSL.name("inbound_target"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("NO", org.jooq.impl.SQLDataType.VARCHAR)), this, "sender=AUTO 조건일때 MEMBER-일정상담사들의 인바운드콜만진행,SVCNUM-수신대표번호만진행,ALL-모든인바운드,NO-인바운드모두진행하지않음");

    /**
     * The column <code>eicn.voc_group.inbound_call_kind</code>. sender=AUTO &amp;&amp; inbound_target!=NO 조건에서 NOANSWER-수신콜비수신때진행,ANSWER-수신콜통화된콜때진행, ALL-수신된모든콜진행
     */
    public final TableField<VocGroupRecord, String> INBOUND_CALL_KIND = createField(DSL.name("inbound_call_kind"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "sender=AUTO && inbound_target!=NO 조건에서 NOANSWER-수신콜비수신때진행,ANSWER-수신콜통화된콜때진행, ALL-수신된모든콜진행");

    /**
     * The column <code>eicn.voc_group.inbound_target_svcnum</code>. sender=AUTO &amp;&amp; inbound_target=SVCNUM 조건일때, 대상이되는 수신대표번호(070번호)
     */
    public final TableField<VocGroupRecord, String> INBOUND_TARGET_SVCNUM = createField(DSL.name("inbound_target_svcnum"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "sender=AUTO && inbound_target=SVCNUM 조건일때, 대상이되는 수신대표번호(070번호)");

    /**
     * The column <code>eicn.voc_group.information</code>. VOC에 대한설명
     */
    public final TableField<VocGroupRecord, String> INFORMATION = createField(DSL.name("information"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "VOC에 대한설명");

    /**
     * The column <code>eicn.voc_group.company_id</code>.
     */
    public final TableField<VocGroupRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.voc_group</code> table reference
     */
    public VocGroup() {
        this(DSL.name("voc_group"), null);
    }

    /**
     * Create an aliased <code>eicn.voc_group</code> table reference
     */
    public VocGroup(String alias) {
        this(DSL.name(alias), VOC_GROUP);
    }

    /**
     * Create an aliased <code>eicn.voc_group</code> table reference
     */
    public VocGroup(Name alias) {
        this(alias, VOC_GROUP);
    }

    private VocGroup(Name alias, Table<VocGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private VocGroup(Name alias, Table<VocGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> VocGroup(Table<O> child, ForeignKey<O, VocGroupRecord> key) {
        super(child, key, VOC_GROUP);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VOC_GROUP_COMPANY_ID);
    }

    @Override
    public Identity<VocGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VOC_GROUP;
    }

    @Override
    public List<UniqueKey<VocGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<VocGroupRecord>>asList(Keys.KEY_VOC_GROUP_SEQ);
    }

    @Override
    public VocGroup as(String alias) {
        return new VocGroup(DSL.name(alias), this);
    }

    @Override
    public VocGroup as(Name alias) {
        return new VocGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VocGroup rename(String name) {
        return new VocGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VocGroup rename(Name name) {
        return new VocGroup(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<Integer, Timestamp, String, String, Date, Date, String, String, Integer, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
