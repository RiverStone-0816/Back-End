/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.MohConfigRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 각 컬러링 음원에 대한 정보
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MohConfig extends TableImpl<MohConfigRecord> {

    private static final long serialVersionUID = 1805086931;

    /**
     * The reference instance of <code>eicn.moh_config</code>
     */
    public static final MohConfig MOH_CONFIG = new MohConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MohConfigRecord> getRecordType() {
        return MohConfigRecord.class;
    }

    /**
     * The column <code>eicn.moh_config.id</code>. moh_config seq값
     */
    public final TableField<MohConfigRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "moh_config seq값");

    /**
     * The column <code>eicn.moh_config.cat_metric</code>. 0 고정
     */
    public final TableField<MohConfigRecord, Integer> CAT_METRIC = createField(DSL.name("cat_metric"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "0 고정");

    /**
     * The column <code>eicn.moh_config.var_metric</code>. 0 고정
     */
    public final TableField<MohConfigRecord, Integer> VAR_METRIC = createField(DSL.name("var_metric"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "0 고정");

    /**
     * The column <code>eicn.moh_config.commented</code>. 0 고정
     */
    public final TableField<MohConfigRecord, Integer> COMMENTED = createField(DSL.name("commented"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "0 고정");

    /**
     * The column <code>eicn.moh_config.filename</code>. musiconhold.conf 고정
     */
    public final TableField<MohConfigRecord, String> FILENAME = createField(DSL.name("filename"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "musiconhold.conf 고정");

    /**
     * The column <code>eicn.moh_config.category</code>. moh_list 테이블의 category값
     */
    public final TableField<MohConfigRecord, String> CATEGORY = createField(DSL.name("category"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("default", org.jooq.impl.SQLDataType.VARCHAR)), this, "moh_list 테이블의 category값");

    /**
     * The column <code>eicn.moh_config.var_name</code>. 변수명(mode, directory)
     */
    public final TableField<MohConfigRecord, String> VAR_NAME = createField(DSL.name("var_name"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "변수명(mode, directory)");

    /**
     * The column <code>eicn.moh_config.var_val</code>. 변수 값(파일 경로 등)
     */
    public final TableField<MohConfigRecord, String> VAR_VAL = createField(DSL.name("var_val"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "변수 값(파일 경로 등)");

    /**
     * Create a <code>eicn.moh_config</code> table reference
     */
    public MohConfig() {
        this(DSL.name("moh_config"), null);
    }

    /**
     * Create an aliased <code>eicn.moh_config</code> table reference
     */
    public MohConfig(String alias) {
        this(DSL.name(alias), MOH_CONFIG);
    }

    /**
     * Create an aliased <code>eicn.moh_config</code> table reference
     */
    public MohConfig(Name alias) {
        this(alias, MOH_CONFIG);
    }

    private MohConfig(Name alias, Table<MohConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private MohConfig(Name alias, Table<MohConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("각 컬러링 음원에 대한 정보"), TableOptions.table());
    }

    public <O extends Record> MohConfig(Table<O> child, ForeignKey<O, MohConfigRecord> key) {
        super(child, key, MOH_CONFIG);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MOH_CONFIG_FILENAME_COMMENT);
    }

    @Override
    public Identity<MohConfigRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MOH_CONFIG;
    }

    @Override
    public UniqueKey<MohConfigRecord> getPrimaryKey() {
        return Keys.KEY_MOH_CONFIG_PRIMARY;
    }

    @Override
    public List<UniqueKey<MohConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<MohConfigRecord>>asList(Keys.KEY_MOH_CONFIG_PRIMARY);
    }

    @Override
    public MohConfig as(String alias) {
        return new MohConfig(DSL.name(alias), this);
    }

    @Override
    public MohConfig as(Name alias) {
        return new MohConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MohConfig rename(String name) {
        return new MohConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MohConfig rename(Name name) {
        return new MohConfig(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, Integer, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
