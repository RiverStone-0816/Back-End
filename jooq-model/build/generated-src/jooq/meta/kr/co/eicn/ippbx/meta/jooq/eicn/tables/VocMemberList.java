/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.VocMemberListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * VOC대상콜 멤버정보 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VocMemberList extends TableImpl<VocMemberListRecord> {

    private static final long serialVersionUID = 92774592;

    /**
     * The reference instance of <code>eicn.voc_member_list</code>
     */
    public static final VocMemberList VOC_MEMBER_LIST = new VocMemberList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VocMemberListRecord> getRecordType() {
        return VocMemberListRecord.class;
    }

    /**
     * The column <code>eicn.voc_member_list.seq</code>. SEQUENCE KEY
     */
    public final TableField<VocMemberListRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.voc_member_list.userid</code>. 상담원 아이디
     */
    public final TableField<VocMemberListRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담원 아이디");

    /**
     * The column <code>eicn.voc_member_list.voc_group_id</code>. VOC_HAPPYCALL그룹 아이디
     */
    public final TableField<VocMemberListRecord, Integer> VOC_GROUP_ID = createField(DSL.name("voc_group_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "VOC_HAPPYCALL그룹 아이디");

    /**
     * The column <code>eicn.voc_member_list.outbound_call_kind</code>. NOANSWER-발신콜비수신때진행,ANSWER-발신콜통화된콜때진행, ALL-발신된모든콜진행
     */
    public final TableField<VocMemberListRecord, String> OUTBOUND_CALL_KIND = createField(DSL.name("outbound_call_kind"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "NOANSWER-발신콜비수신때진행,ANSWER-발신콜통화된콜때진행, ALL-발신된모든콜진행");

    /**
     * The column <code>eicn.voc_member_list.inbound_call_kind</code>. NOANSWER-수신콜비수신때진행,ANSWER-수신콜통화된콜때진행, ALL-수신된모든콜진행
     */
    public final TableField<VocMemberListRecord, String> INBOUND_CALL_KIND = createField(DSL.name("inbound_call_kind"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "NOANSWER-수신콜비수신때진행,ANSWER-수신콜통화된콜때진행, ALL-수신된모든콜진행");

    /**
     * The column <code>eicn.voc_member_list.company_id</code>. 고객사 아이디
     */
    public final TableField<VocMemberListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * Create a <code>eicn.voc_member_list</code> table reference
     */
    public VocMemberList() {
        this(DSL.name("voc_member_list"), null);
    }

    /**
     * Create an aliased <code>eicn.voc_member_list</code> table reference
     */
    public VocMemberList(String alias) {
        this(DSL.name(alias), VOC_MEMBER_LIST);
    }

    /**
     * Create an aliased <code>eicn.voc_member_list</code> table reference
     */
    public VocMemberList(Name alias) {
        this(alias, VOC_MEMBER_LIST);
    }

    private VocMemberList(Name alias, Table<VocMemberListRecord> aliased) {
        this(alias, aliased, null);
    }

    private VocMemberList(Name alias, Table<VocMemberListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VOC대상콜 멤버정보 테이블"), TableOptions.table());
    }

    public <O extends Record> VocMemberList(Table<O> child, ForeignKey<O, VocMemberListRecord> key) {
        super(child, key, VOC_MEMBER_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<VocMemberListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VOC_MEMBER_LIST;
    }

    @Override
    public List<UniqueKey<VocMemberListRecord>> getKeys() {
        return Arrays.<UniqueKey<VocMemberListRecord>>asList(Keys.KEY_VOC_MEMBER_LIST_SEQ);
    }

    @Override
    public VocMemberList as(String alias) {
        return new VocMemberList(DSL.name(alias), this);
    }

    @Override
    public VocMemberList as(Name alias) {
        return new VocMemberList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VocMemberList rename(String name) {
        return new VocMemberList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VocMemberList rename(Name name) {
        return new VocMemberList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Integer, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
