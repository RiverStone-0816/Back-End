/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CmpDisplayGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 그룹별 전광판
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CmpDisplayGroup extends TableImpl<CmpDisplayGroupRecord> {

    private static final long serialVersionUID = -810997482;

    /**
     * The reference instance of <code>eicn.cmp_display_group</code>
     */
    public static final CmpDisplayGroup CMP_DISPLAY_GROUP = new CmpDisplayGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CmpDisplayGroupRecord> getRecordType() {
        return CmpDisplayGroupRecord.class;
    }

    /**
     * The column <code>eicn.cmp_display_group.group_id</code>. 그룹 ID
     */
    public final TableField<CmpDisplayGroupRecord, Integer> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "그룹 ID");

    /**
     * The column <code>eicn.cmp_display_group.group_name</code>. 그룹명
     */
    public final TableField<CmpDisplayGroupRecord, String> GROUP_NAME = createField(DSL.name("group_name"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "그룹명");

    /**
     * The column <code>eicn.cmp_display_group.title_text</code>. 제목
     */
    public final TableField<CmpDisplayGroupRecord, String> TITLE_TEXT = createField(DSL.name("title_text"), org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "제목");

    /**
     * The column <code>eicn.cmp_display_group.win_width</code>. 윈도우 세로 사이즈
     */
    public final TableField<CmpDisplayGroupRecord, Integer> WIN_WIDTH = createField(DSL.name("win_width"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "윈도우 세로 사이즈");

    /**
     * The column <code>eicn.cmp_display_group.win_height</code>. 윈도우 가로 사이즈
     */
    public final TableField<CmpDisplayGroupRecord, Integer> WIN_HEIGHT = createField(DSL.name("win_height"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "윈도우 가로 사이즈");

    /**
     * The column <code>eicn.cmp_display_group.company_id</code>. 회사 ID
     */
    public final TableField<CmpDisplayGroupRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사 ID");

    /**
     * Create a <code>eicn.cmp_display_group</code> table reference
     */
    public CmpDisplayGroup() {
        this(DSL.name("cmp_display_group"), null);
    }

    /**
     * Create an aliased <code>eicn.cmp_display_group</code> table reference
     */
    public CmpDisplayGroup(String alias) {
        this(DSL.name(alias), CMP_DISPLAY_GROUP);
    }

    /**
     * Create an aliased <code>eicn.cmp_display_group</code> table reference
     */
    public CmpDisplayGroup(Name alias) {
        this(alias, CMP_DISPLAY_GROUP);
    }

    private CmpDisplayGroup(Name alias, Table<CmpDisplayGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private CmpDisplayGroup(Name alias, Table<CmpDisplayGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("그룹별 전광판"), TableOptions.table());
    }

    public <O extends Record> CmpDisplayGroup(Table<O> child, ForeignKey<O, CmpDisplayGroupRecord> key) {
        super(child, key, CMP_DISPLAY_GROUP);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<CmpDisplayGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CMP_DISPLAY_GROUP;
    }

    @Override
    public List<UniqueKey<CmpDisplayGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<CmpDisplayGroupRecord>>asList(Keys.KEY_CMP_DISPLAY_GROUP_GROUP_ID);
    }

    @Override
    public CmpDisplayGroup as(String alias) {
        return new CmpDisplayGroup(DSL.name(alias), this);
    }

    @Override
    public CmpDisplayGroup as(Name alias) {
        return new CmpDisplayGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CmpDisplayGroup rename(String name) {
        return new CmpDisplayGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CmpDisplayGroup rename(Name name) {
        return new CmpDisplayGroup(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, Integer, Integer, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
