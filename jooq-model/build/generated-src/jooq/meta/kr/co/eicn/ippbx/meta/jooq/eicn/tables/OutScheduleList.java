/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.OutScheduleListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 발신 스케쥴러의 세부 리스트
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OutScheduleList extends TableImpl<OutScheduleListRecord> {

    private static final long serialVersionUID = 2002947786;

    /**
     * The reference instance of <code>eicn.out_schedule_list</code>
     */
    public static final OutScheduleList OUT_SCHEDULE_LIST = new OutScheduleList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OutScheduleListRecord> getRecordType() {
        return OutScheduleListRecord.class;
    }

    /**
     * The column <code>eicn.out_schedule_list.code</code>. 발신 스케쥴러의 유니크 값
     */
    public final TableField<OutScheduleListRecord, Integer> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "발신 스케쥴러의 유니크 값");

    /**
     * The column <code>eicn.out_schedule_list.type</code>. H:일별, W:주간 값
     */
    public final TableField<OutScheduleListRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("W", org.jooq.impl.SQLDataType.CHAR)), this, "H:일별, W:주간 값");

    /**
     * The column <code>eicn.out_schedule_list.name</code>. 일정명
     */
    public final TableField<OutScheduleListRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "일정명");

    /**
     * The column <code>eicn.out_schedule_list.extension</code>. 내선
     */
    public final TableField<OutScheduleListRecord, String> EXTENSION = createField(DSL.name("extension"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "내선");

    /**
     * The column <code>eicn.out_schedule_list.worktime_yn</code>.
     */
    public final TableField<OutScheduleListRecord, String> WORKTIME_YN = createField(DSL.name("worktime_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("Y", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.out_schedule_list.stat_yn</code>.
     */
    public final TableField<OutScheduleListRecord, String> STAT_YN = createField(DSL.name("stat_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("Y", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.out_schedule_list.fromtime</code>. 발신 스케쥴러 시작일(일별에서 사용)
     */
    public final TableField<OutScheduleListRecord, Timestamp> FROMTIME = createField(DSL.name("fromtime"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "발신 스케쥴러 시작일(일별에서 사용)");

    /**
     * The column <code>eicn.out_schedule_list.totime</code>. 발신 스케쥴러 종료일(일별에서 사용)
     */
    public final TableField<OutScheduleListRecord, Timestamp> TOTIME = createField(DSL.name("totime"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "발신 스케쥴러 종료일(일별에서 사용)");

    /**
     * The column <code>eicn.out_schedule_list.week</code>. 주간 스케쥴러일 경우 요일 값
     */
    public final TableField<OutScheduleListRecord, String> WEEK = createField(DSL.name("week"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "주간 스케쥴러일 경우 요일 값");

    /**
     * The column <code>eicn.out_schedule_list.fromhour</code>. 스케쥴러 실행 시작시간
     */
    public final TableField<OutScheduleListRecord, Integer> FROMHOUR = createField(DSL.name("fromhour"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "스케쥴러 실행 시작시간");

    /**
     * The column <code>eicn.out_schedule_list.tohour</code>. 스케쥴러 실행 종료시간
     */
    public final TableField<OutScheduleListRecord, Integer> TOHOUR = createField(DSL.name("tohour"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "스케쥴러 실행 종료시간");

    /**
     * The column <code>eicn.out_schedule_list.soundcode</code>. sound_list 테이블의 seq 컬럼 값
     */
    public final TableField<OutScheduleListRecord, String> SOUNDCODE = createField(DSL.name("soundcode"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "sound_list 테이블의 seq 컬럼 값");

    /**
     * The column <code>eicn.out_schedule_list.parent</code>. out_schedule_seed 테이블의 parent 컬럼 값
     */
    public final TableField<OutScheduleListRecord, Integer> PARENT = createField(DSL.name("parent"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "out_schedule_seed 테이블의 parent 컬럼 값");

    /**
     * The column <code>eicn.out_schedule_list.company_id</code>. 고객사 아이디
     */
    public final TableField<OutScheduleListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * Create a <code>eicn.out_schedule_list</code> table reference
     */
    public OutScheduleList() {
        this(DSL.name("out_schedule_list"), null);
    }

    /**
     * Create an aliased <code>eicn.out_schedule_list</code> table reference
     */
    public OutScheduleList(String alias) {
        this(DSL.name(alias), OUT_SCHEDULE_LIST);
    }

    /**
     * Create an aliased <code>eicn.out_schedule_list</code> table reference
     */
    public OutScheduleList(Name alias) {
        this(alias, OUT_SCHEDULE_LIST);
    }

    private OutScheduleList(Name alias, Table<OutScheduleListRecord> aliased) {
        this(alias, aliased, null);
    }

    private OutScheduleList(Name alias, Table<OutScheduleListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("발신 스케쥴러의 세부 리스트"), TableOptions.table());
    }

    public <O extends Record> OutScheduleList(Table<O> child, ForeignKey<O, OutScheduleListRecord> key) {
        super(child, key, OUT_SCHEDULE_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<UniqueKey<OutScheduleListRecord>> getKeys() {
        return Arrays.<UniqueKey<OutScheduleListRecord>>asList(Keys.KEY_OUT_SCHEDULE_LIST_SCHEDULE_ID);
    }

    @Override
    public OutScheduleList as(String alias) {
        return new OutScheduleList(DSL.name(alias), this);
    }

    @Override
    public OutScheduleList as(Name alias) {
        return new OutScheduleList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OutScheduleList rename(String name) {
        return new OutScheduleList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OutScheduleList rename(Name name) {
        return new OutScheduleList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, String, String, String, String, Timestamp, Timestamp, String, Integer, Integer, String, Integer, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
