/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.WebvoiceServerInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WebvoiceServerInfo extends TableImpl<WebvoiceServerInfoRecord> {

    private static final long serialVersionUID = 559741828;

    /**
     * The reference instance of <code>eicn.webvoice_server_info</code>
     */
    public static final WebvoiceServerInfo WEBVOICE_SERVER_INFO = new WebvoiceServerInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WebvoiceServerInfoRecord> getRecordType() {
        return WebvoiceServerInfoRecord.class;
    }

    /**
     * The column <code>eicn.webvoice_server_info.seq</code>.
     */
    public final TableField<WebvoiceServerInfoRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.webvoice_server_info.webvoice_host</code>.
     */
    public final TableField<WebvoiceServerInfoRecord, String> WEBVOICE_HOST = createField(DSL.name("webvoice_host"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.webvoice_server_info.webvoice_port</code>.
     */
    public final TableField<WebvoiceServerInfoRecord, Integer> WEBVOICE_PORT = createField(DSL.name("webvoice_port"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.webvoice_server_info.SVC_CODE</code>.
     */
    public final TableField<WebvoiceServerInfoRecord, String> SVC_CODE = createField(DSL.name("SVC_CODE"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.webvoice_server_info.CUSTOMER_SERVICE_ID</code>.
     */
    public final TableField<WebvoiceServerInfoRecord, String> CUSTOMER_SERVICE_ID = createField(DSL.name("CUSTOMER_SERVICE_ID"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.webvoice_server_info.AUTH_KEY</code>.
     */
    public final TableField<WebvoiceServerInfoRecord, String> AUTH_KEY = createField(DSL.name("AUTH_KEY"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.webvoice_server_info.SVC_DETAIL_CODE</code>.
     */
    public final TableField<WebvoiceServerInfoRecord, String> SVC_DETAIL_CODE = createField(DSL.name("SVC_DETAIL_CODE"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.webvoice_server_info.ENCRYPTION_KEY</code>.
     */
    public final TableField<WebvoiceServerInfoRecord, String> ENCRYPTION_KEY = createField(DSL.name("ENCRYPTION_KEY"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.webvoice_server_info</code> table reference
     */
    public WebvoiceServerInfo() {
        this(DSL.name("webvoice_server_info"), null);
    }

    /**
     * Create an aliased <code>eicn.webvoice_server_info</code> table reference
     */
    public WebvoiceServerInfo(String alias) {
        this(DSL.name(alias), WEBVOICE_SERVER_INFO);
    }

    /**
     * Create an aliased <code>eicn.webvoice_server_info</code> table reference
     */
    public WebvoiceServerInfo(Name alias) {
        this(alias, WEBVOICE_SERVER_INFO);
    }

    private WebvoiceServerInfo(Name alias, Table<WebvoiceServerInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private WebvoiceServerInfo(Name alias, Table<WebvoiceServerInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> WebvoiceServerInfo(Table<O> child, ForeignKey<O, WebvoiceServerInfoRecord> key) {
        super(child, key, WEBVOICE_SERVER_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<WebvoiceServerInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WEBVOICE_SERVER_INFO;
    }

    @Override
    public List<UniqueKey<WebvoiceServerInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<WebvoiceServerInfoRecord>>asList(Keys.KEY_WEBVOICE_SERVER_INFO_SEQ);
    }

    @Override
    public WebvoiceServerInfo as(String alias) {
        return new WebvoiceServerInfo(DSL.name(alias), this);
    }

    @Override
    public WebvoiceServerInfo as(Name alias) {
        return new WebvoiceServerInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WebvoiceServerInfo rename(String name) {
        return new WebvoiceServerInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WebvoiceServerInfo rename(Name name) {
        return new WebvoiceServerInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, Integer, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
