/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.TalkScheduleGroupListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 스케쥴유형 항목관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TalkScheduleGroupList extends TableImpl<TalkScheduleGroupListRecord> {

    private static final long serialVersionUID = -403783387;

    /**
     * The reference instance of <code>eicn.talk_schedule_group_list</code>
     */
    public static final TalkScheduleGroupList TALK_SCHEDULE_GROUP_LIST = new TalkScheduleGroupList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TalkScheduleGroupListRecord> getRecordType() {
        return TalkScheduleGroupListRecord.class;
    }

    /**
     * The column <code>eicn.talk_schedule_group_list.child</code>. SEQUENCE KEY
     */
    public final TableField<TalkScheduleGroupListRecord, Integer> CHILD = createField(DSL.name("child"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.talk_schedule_group_list.parent</code>. 유형 SEQUENCE 참조 키
     */
    public final TableField<TalkScheduleGroupListRecord, Integer> PARENT = createField(DSL.name("parent"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "유형 SEQUENCE 참조 키");

    /**
     * The column <code>eicn.talk_schedule_group_list.child_name</code>. 항목명
     */
    public final TableField<TalkScheduleGroupListRecord, String> CHILD_NAME = createField(DSL.name("child_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "항목명");

    /**
     * The column <code>eicn.talk_schedule_group_list.worktime_yn</code>.
     */
    public final TableField<TalkScheduleGroupListRecord, String> WORKTIME_YN = createField(DSL.name("worktime_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("Y", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.talk_schedule_group_list.stat_yn</code>.
     */
    public final TableField<TalkScheduleGroupListRecord, String> STAT_YN = createField(DSL.name("stat_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("Y", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.talk_schedule_group_list.fromhour</code>. 시작시간 분 (09:00 -&gt; 540)
     */
    public final TableField<TalkScheduleGroupListRecord, Integer> FROMHOUR = createField(DSL.name("fromhour"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "시작시간 분 (09:00 -> 540)");

    /**
     * The column <code>eicn.talk_schedule_group_list.tohour</code>. 종료시간 분 (18:00 -&gt; 1080)
     */
    public final TableField<TalkScheduleGroupListRecord, Integer> TOHOUR = createField(DSL.name("tohour"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "종료시간 분 (18:00 -> 1080)");

    /**
     * The column <code>eicn.talk_schedule_group_list.kind</code>. 유형구분
     */
    public final TableField<TalkScheduleGroupListRecord, String> KIND = createField(DSL.name("kind"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("D", org.jooq.impl.SQLDataType.CHAR)), this, "유형구분");

    /**
     * The column <code>eicn.talk_schedule_group_list.kind_data</code>. 유형별입력 데이터
     */
    public final TableField<TalkScheduleGroupListRecord, String> KIND_DATA = createField(DSL.name("kind_data"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "유형별입력 데이터");

    /**
     * The column <code>eicn.talk_schedule_group_list.company_id</code>. 고객사 아이디
     */
    public final TableField<TalkScheduleGroupListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * The column <code>eicn.talk_schedule_group_list.first_ment_id</code>. 첫번째 멘트아이디
     */
    public final TableField<TalkScheduleGroupListRecord, Integer> FIRST_MENT_ID = createField(DSL.name("first_ment_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "첫번째 멘트아이디");

    /**
     * The column <code>eicn.talk_schedule_group_list.limit_num</code>. 비접수 n개이상초과시 자동멘트송출(0개는 무한대)
     */
    public final TableField<TalkScheduleGroupListRecord, Integer> LIMIT_NUM = createField(DSL.name("limit_num"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "비접수 n개이상초과시 자동멘트송출(0개는 무한대)");

    /**
     * The column <code>eicn.talk_schedule_group_list.limit_ment_id</code>. 마지막 멘트아이디
     */
    public final TableField<TalkScheduleGroupListRecord, Integer> LIMIT_MENT_ID = createField(DSL.name("limit_ment_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "마지막 멘트아이디");

    /**
     * Create a <code>eicn.talk_schedule_group_list</code> table reference
     */
    public TalkScheduleGroupList() {
        this(DSL.name("talk_schedule_group_list"), null);
    }

    /**
     * Create an aliased <code>eicn.talk_schedule_group_list</code> table reference
     */
    public TalkScheduleGroupList(String alias) {
        this(DSL.name(alias), TALK_SCHEDULE_GROUP_LIST);
    }

    /**
     * Create an aliased <code>eicn.talk_schedule_group_list</code> table reference
     */
    public TalkScheduleGroupList(Name alias) {
        this(alias, TALK_SCHEDULE_GROUP_LIST);
    }

    private TalkScheduleGroupList(Name alias, Table<TalkScheduleGroupListRecord> aliased) {
        this(alias, aliased, null);
    }

    private TalkScheduleGroupList(Name alias, Table<TalkScheduleGroupListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("스케쥴유형 항목관리 테이블"), TableOptions.table());
    }

    public <O extends Record> TalkScheduleGroupList(Table<O> child, ForeignKey<O, TalkScheduleGroupListRecord> key) {
        super(child, key, TALK_SCHEDULE_GROUP_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<TalkScheduleGroupListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TALK_SCHEDULE_GROUP_LIST;
    }

    @Override
    public List<UniqueKey<TalkScheduleGroupListRecord>> getKeys() {
        return Arrays.<UniqueKey<TalkScheduleGroupListRecord>>asList(Keys.KEY_TALK_SCHEDULE_GROUP_LIST_CHILD);
    }

    @Override
    public TalkScheduleGroupList as(String alias) {
        return new TalkScheduleGroupList(DSL.name(alias), this);
    }

    @Override
    public TalkScheduleGroupList as(Name alias) {
        return new TalkScheduleGroupList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TalkScheduleGroupList rename(String name) {
        return new TalkScheduleGroupList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TalkScheduleGroupList rename(Name name) {
        return new TalkScheduleGroupList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, String, String, String, Integer, Integer, String, String, String, Integer, Integer, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
