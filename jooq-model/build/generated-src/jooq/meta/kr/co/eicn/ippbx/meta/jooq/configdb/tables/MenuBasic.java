/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.configdb.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.configdb.Configdb;
import kr.co.eicn.ippbx.meta.jooq.configdb.Indexes;
import kr.co.eicn.ippbx.meta.jooq.configdb.Keys;
import kr.co.eicn.ippbx.meta.jooq.configdb.tables.records.MenuBasicRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 메뉴 설정 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MenuBasic extends TableImpl<MenuBasicRecord> {

    private static final long serialVersionUID = -1233928365;

    /**
     * The reference instance of <code>CONFIGDB.menu_basic</code>
     */
    public static final MenuBasic MENU_BASIC = new MenuBasic();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MenuBasicRecord> getRecordType() {
        return MenuBasicRecord.class;
    }

    /**
     * The column <code>CONFIGDB.menu_basic.seq</code>.
     */
    public final TableField<MenuBasicRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>CONFIGDB.menu_basic.userid</code>. 사용자 아이디
     */
    public final TableField<MenuBasicRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "사용자 아이디");

    /**
     * The column <code>CONFIGDB.menu_basic.menu_code</code>. 메뉴코드
     */
    public final TableField<MenuBasicRecord, String> MENU_CODE = createField(DSL.name("menu_code"), org.jooq.impl.SQLDataType.CHAR(4).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "메뉴코드");

    /**
     * The column <code>CONFIGDB.menu_basic.menu_name</code>. 메뉴명
     */
    public final TableField<MenuBasicRecord, String> MENU_NAME = createField(DSL.name("menu_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "메뉴명");

    /**
     * The column <code>CONFIGDB.menu_basic.menu_tree_name</code>.
     */
    public final TableField<MenuBasicRecord, String> MENU_TREE_NAME = createField(DSL.name("menu_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CONFIGDB.menu_basic.menu_level</code>.
     */
    public final TableField<MenuBasicRecord, Integer> MENU_LEVEL = createField(DSL.name("menu_level"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>CONFIGDB.menu_basic.parent_menu_code</code>.
     */
    public final TableField<MenuBasicRecord, String> PARENT_MENU_CODE = createField(DSL.name("parent_menu_code"), org.jooq.impl.SQLDataType.CHAR(4).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>CONFIGDB.menu_basic.parent_tree_name</code>.
     */
    public final TableField<MenuBasicRecord, String> PARENT_TREE_NAME = createField(DSL.name("parent_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CONFIGDB.menu_basic.menu_action_exe_id</code>.
     */
    public final TableField<MenuBasicRecord, String> MENU_ACTION_EXE_ID = createField(DSL.name("menu_action_exe_id"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CONFIGDB.menu_basic.sequence</code>. 정렬순서
     */
    public final TableField<MenuBasicRecord, Integer> SEQUENCE = createField(DSL.name("sequence"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "정렬순서");

    /**
     * The column <code>CONFIGDB.menu_basic.view_yn</code>. 보임여부
     */
    public final TableField<MenuBasicRecord, String> VIEW_YN = createField(DSL.name("view_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "보임여부");

    /**
     * The column <code>CONFIGDB.menu_basic.icon</code>.
     */
    public final TableField<MenuBasicRecord, String> ICON = createField(DSL.name("icon"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CONFIGDB.menu_basic.action_type</code>. 연결액션
     */
    public final TableField<MenuBasicRecord, String> ACTION_TYPE = createField(DSL.name("action_type"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "연결액션");

    /**
     * The column <code>CONFIGDB.menu_basic.auth_type</code>. 권한타입
     */
    public final TableField<MenuBasicRecord, String> AUTH_TYPE = createField(DSL.name("auth_type"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "권한타입");

    /**
     * The column <code>CONFIGDB.menu_basic.group_level_auth_yn</code>. 조직권한부여여부
     */
    public final TableField<MenuBasicRecord, String> GROUP_LEVEL_AUTH_YN = createField(DSL.name("group_level_auth_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "조직권한부여여부");

    /**
     * The column <code>CONFIGDB.menu_basic.group_code</code>. 조직코드
     */
    public final TableField<MenuBasicRecord, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "조직코드");

    /**
     * The column <code>CONFIGDB.menu_basic.group_level</code>. 조직레벨
     */
    public final TableField<MenuBasicRecord, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "조직레벨");

    /**
     * The column <code>CONFIGDB.menu_basic.service_kind</code>.
     */
    public final TableField<MenuBasicRecord, String> SERVICE_KIND = createField(DSL.name("service_kind"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CONFIGDB.menu_basic.service</code>.
     */
    public final TableField<MenuBasicRecord, String> SERVICE = createField(DSL.name("service"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>CONFIGDB.menu_basic</code> table reference
     */
    public MenuBasic() {
        this(DSL.name("menu_basic"), null);
    }

    /**
     * Create an aliased <code>CONFIGDB.menu_basic</code> table reference
     */
    public MenuBasic(String alias) {
        this(DSL.name(alias), MENU_BASIC);
    }

    /**
     * Create an aliased <code>CONFIGDB.menu_basic</code> table reference
     */
    public MenuBasic(Name alias) {
        this(alias, MENU_BASIC);
    }

    private MenuBasic(Name alias, Table<MenuBasicRecord> aliased) {
        this(alias, aliased, null);
    }

    private MenuBasic(Name alias, Table<MenuBasicRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("메뉴 설정 테이블"), TableOptions.table());
    }

    public <O extends Record> MenuBasic(Table<O> child, ForeignKey<O, MenuBasicRecord> key) {
        super(child, key, MENU_BASIC);
    }

    @Override
    public Schema getSchema() {
        return Configdb.CONFIGDB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MENU_BASIC_SEQUENCE, Indexes.MENU_BASIC_USERID);
    }

    @Override
    public Identity<MenuBasicRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MENU_BASIC;
    }

    @Override
    public UniqueKey<MenuBasicRecord> getPrimaryKey() {
        return Keys.KEY_MENU_BASIC_PRIMARY;
    }

    @Override
    public List<UniqueKey<MenuBasicRecord>> getKeys() {
        return Arrays.<UniqueKey<MenuBasicRecord>>asList(Keys.KEY_MENU_BASIC_PRIMARY);
    }

    @Override
    public MenuBasic as(String alias) {
        return new MenuBasic(DSL.name(alias), this);
    }

    @Override
    public MenuBasic as(Name alias) {
        return new MenuBasic(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MenuBasic rename(String name) {
        return new MenuBasic(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MenuBasic rename(Name name) {
        return new MenuBasic(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<Integer, String, String, String, String, Integer, String, String, String, Integer, String, String, String, String, String, String, Integer, String, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
