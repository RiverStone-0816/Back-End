/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.RecordDownRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 일괄녹취다운관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecordDown extends TableImpl<RecordDownRecord> {

    private static final long serialVersionUID = -1274155257;

    /**
     * The reference instance of <code>eicn.record_down</code>
     */
    public static final RecordDown RECORD_DOWN = new RecordDown();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RecordDownRecord> getRecordType() {
        return RecordDownRecord.class;
    }

    /**
     * The column <code>eicn.record_down.seq</code>. SEQUENCE KEY
     */
    public final TableField<RecordDownRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.record_down.requestdate</code>.
     */
    public final TableField<RecordDownRecord, Timestamp> REQUESTDATE = createField(DSL.name("requestdate"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2016-01-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.record_down.status</code>. 상태
     */
    public final TableField<RecordDownRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("A", org.jooq.impl.SQLDataType.CHAR)), this, "상태");

    /**
     * The column <code>eicn.record_down.down_name</code>. 다운로드명
     */
    public final TableField<RecordDownRecord, String> DOWN_NAME = createField(DSL.name("down_name"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "다운로드명");

    /**
     * The column <code>eicn.record_down.user_name</code>. 실행자
     */
    public final TableField<RecordDownRecord, String> USER_NAME = createField(DSL.name("user_name"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "실행자");

    /**
     * The column <code>eicn.record_down.userid</code>. 실행자ID
     */
    public final TableField<RecordDownRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "실행자ID");

    /**
     * The column <code>eicn.record_down.down_folder</code>. 다운로드 파일명
     */
    public final TableField<RecordDownRecord, String> DOWN_FOLDER = createField(DSL.name("down_folder"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "다운로드 파일명");

    /**
     * The column <code>eicn.record_down.company_id</code>.
     */
    public final TableField<RecordDownRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.record_down</code> table reference
     */
    public RecordDown() {
        this(DSL.name("record_down"), null);
    }

    /**
     * Create an aliased <code>eicn.record_down</code> table reference
     */
    public RecordDown(String alias) {
        this(DSL.name(alias), RECORD_DOWN);
    }

    /**
     * Create an aliased <code>eicn.record_down</code> table reference
     */
    public RecordDown(Name alias) {
        this(alias, RECORD_DOWN);
    }

    private RecordDown(Name alias, Table<RecordDownRecord> aliased) {
        this(alias, aliased, null);
    }

    private RecordDown(Name alias, Table<RecordDownRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("일괄녹취다운관리 테이블"), TableOptions.table());
    }

    public <O extends Record> RecordDown(Table<O> child, ForeignKey<O, RecordDownRecord> key) {
        super(child, key, RECORD_DOWN);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RECORD_DOWN_DOWN_FOLDER, Indexes.RECORD_DOWN_REQUESTDATE, Indexes.RECORD_DOWN_STATUS);
    }

    @Override
    public Identity<RecordDownRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RECORD_DOWN;
    }

    @Override
    public List<UniqueKey<RecordDownRecord>> getKeys() {
        return Arrays.<UniqueKey<RecordDownRecord>>asList(Keys.KEY_RECORD_DOWN_SEQ);
    }

    @Override
    public RecordDown as(String alias) {
        return new RecordDown(DSL.name(alias), this);
    }

    @Override
    public RecordDown as(Name alias) {
        return new RecordDown(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RecordDown rename(String name) {
        return new RecordDown(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RecordDown rename(Name name) {
        return new RecordDown(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Timestamp, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
