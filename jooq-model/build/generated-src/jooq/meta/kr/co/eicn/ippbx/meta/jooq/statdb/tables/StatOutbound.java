/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.statdb.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.statdb.Indexes;
import kr.co.eicn.ippbx.meta.jooq.statdb.Keys;
import kr.co.eicn.ippbx.meta.jooq.statdb.Statdb;
import kr.co.eicn.ippbx.meta.jooq.statdb.tables.records.StatOutboundRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * OUTBOUND 통계 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatOutbound extends TableImpl<StatOutboundRecord> {

    private static final long serialVersionUID = 1018253445;

    /**
     * The reference instance of <code>STATDB.stat_outbound</code>
     */
    public static final StatOutbound STAT_OUTBOUND = new StatOutbound();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatOutboundRecord> getRecordType() {
        return StatOutboundRecord.class;
    }

    /**
     * The column <code>STATDB.stat_outbound.seq</code>. 고유키
     */
    public final TableField<StatOutboundRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "고유키");

    /**
     * The column <code>STATDB.stat_outbound.company_id</code>. 회사아이디
     */
    public final TableField<StatOutboundRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아이디");

    /**
     * The column <code>STATDB.stat_outbound.group_code</code>. 조직코드
     */
    public final TableField<StatOutboundRecord, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4), this, "조직코드");

    /**
     * The column <code>STATDB.stat_outbound.group_tree_name</code>. 조직트리명
     */
    public final TableField<StatOutboundRecord, String> GROUP_TREE_NAME = createField(DSL.name("group_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "조직트리명");

    /**
     * The column <code>STATDB.stat_outbound.group_level</code>. 조직레벨
     */
    public final TableField<StatOutboundRecord, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "조직레벨");

    /**
     * The column <code>STATDB.stat_outbound.from_org</code>. 일반콜-NOR, 콜백콜-CALLBACK,예약콜-RESERVE, PDS콜-PDS, 고객DB-MAINDB
     */
    public final TableField<StatOutboundRecord, String> FROM_ORG = createField(DSL.name("from_org"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "일반콜-NOR, 콜백콜-CALLBACK,예약콜-RESERVE, PDS콜-PDS, 고객DB-MAINDB");

    /**
     * The column <code>STATDB.stat_outbound.worktime_yn</code>.
     */
    public final TableField<StatOutboundRecord, String> WORKTIME_YN = createField(DSL.name("worktime_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("Y", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>STATDB.stat_outbound.dcontext</code>. 다이얼플랜컨텍스트
     */
    public final TableField<StatOutboundRecord, String> DCONTEXT = createField(DSL.name("dcontext"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "다이얼플랜컨텍스트");

    /**
     * The column <code>STATDB.stat_outbound.stat_date</code>. 생성일
     */
    public final TableField<StatOutboundRecord, Date> STAT_DATE = createField(DSL.name("stat_date"), org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.inline("2009-01-01", org.jooq.impl.SQLDataType.DATE)), this, "생성일");

    /**
     * The column <code>STATDB.stat_outbound.stat_hour</code>. 생성시간
     */
    public final TableField<StatOutboundRecord, Byte> STAT_HOUR = createField(DSL.name("stat_hour"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "생성시간");

    /**
     * The column <code>STATDB.stat_outbound.total</code>. 총계
     */
    public final TableField<StatOutboundRecord, Integer> TOTAL = createField(DSL.name("total"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "총계");

    /**
     * The column <code>STATDB.stat_outbound.success</code>. 응답
     */
    public final TableField<StatOutboundRecord, Integer> SUCCESS = createField(DSL.name("success"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "응답");

    /**
     * The column <code>STATDB.stat_outbound.billsec_sum</code>. 통화시간
     */
    public final TableField<StatOutboundRecord, Integer> BILLSEC_SUM = createField(DSL.name("billsec_sum"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "통화시간");

    /**
     * The column <code>STATDB.stat_outbound.wait_sum</code>. 통화전대기시간
     */
    public final TableField<StatOutboundRecord, Integer> WAIT_SUM = createField(DSL.name("wait_sum"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "통화전대기시간");

    /**
     * Create a <code>STATDB.stat_outbound</code> table reference
     */
    public StatOutbound() {
        this(DSL.name("stat_outbound"), null);
    }

    /**
     * Create an aliased <code>STATDB.stat_outbound</code> table reference
     */
    public StatOutbound(String alias) {
        this(DSL.name(alias), STAT_OUTBOUND);
    }

    /**
     * Create an aliased <code>STATDB.stat_outbound</code> table reference
     */
    public StatOutbound(Name alias) {
        this(alias, STAT_OUTBOUND);
    }

    private StatOutbound(Name alias, Table<StatOutboundRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatOutbound(Name alias, Table<StatOutboundRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("OUTBOUND 통계 테이블"), TableOptions.table());
    }

    public <O extends Record> StatOutbound(Table<O> child, ForeignKey<O, StatOutboundRecord> key) {
        super(child, key, STAT_OUTBOUND);
    }

    @Override
    public Schema getSchema() {
        return Statdb.STATDB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STAT_OUTBOUND_COMPANY_ID, Indexes.STAT_OUTBOUND_DCONTEXT, Indexes.STAT_OUTBOUND_FROM_ORG, Indexes.STAT_OUTBOUND_GROUP_CODE, Indexes.STAT_OUTBOUND_GROUP_LEVEL, Indexes.STAT_OUTBOUND_GROUP_TREE_NAME, Indexes.STAT_OUTBOUND_STAT_DATE, Indexes.STAT_OUTBOUND_STAT_HOUR, Indexes.STAT_OUTBOUND_WORKTIME_YN);
    }

    @Override
    public Identity<StatOutboundRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STAT_OUTBOUND;
    }

    @Override
    public UniqueKey<StatOutboundRecord> getPrimaryKey() {
        return Keys.KEY_STAT_OUTBOUND_PRIMARY;
    }

    @Override
    public List<UniqueKey<StatOutboundRecord>> getKeys() {
        return Arrays.<UniqueKey<StatOutboundRecord>>asList(Keys.KEY_STAT_OUTBOUND_PRIMARY);
    }

    @Override
    public StatOutbound as(String alias) {
        return new StatOutbound(DSL.name(alias), this);
    }

    @Override
    public StatOutbound as(Name alias) {
        return new StatOutbound(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatOutbound rename(String name) {
        return new StatOutbound(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatOutbound rename(Name name) {
        return new StatOutbound(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, String, String, Integer, String, String, String, Date, Byte, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
