/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.statdb.tables;


import kr.co.eicn.ippbx.meta.jooq.statdb.Statdb;
import kr.co.eicn.ippbx.meta.jooq.statdb.tables.records.HourTmpRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HourTmp extends TableImpl<HourTmpRecord> {

    private static final long serialVersionUID = -1938549206;

    /**
     * The reference instance of <code>STATDB.hour_tmp</code>
     */
    public static final HourTmp HOUR_TMP = new HourTmp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HourTmpRecord> getRecordType() {
        return HourTmpRecord.class;
    }

    /**
     * The column <code>STATDB.hour_tmp.stat_hour</code>.
     */
    public final TableField<HourTmpRecord, Byte> STAT_HOUR = createField(DSL.name("stat_hour"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>STATDB.hour_tmp.in_total</code>.
     */
    public final TableField<HourTmpRecord, Integer> IN_TOTAL = createField(DSL.name("in_total"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>STATDB.hour_tmp.out_total</code>.
     */
    public final TableField<HourTmpRecord, Integer> OUT_TOTAL = createField(DSL.name("out_total"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>STATDB.hour_tmp</code> table reference
     */
    public HourTmp() {
        this(DSL.name("hour_tmp"), null);
    }

    /**
     * Create an aliased <code>STATDB.hour_tmp</code> table reference
     */
    public HourTmp(String alias) {
        this(DSL.name(alias), HOUR_TMP);
    }

    /**
     * Create an aliased <code>STATDB.hour_tmp</code> table reference
     */
    public HourTmp(Name alias) {
        this(alias, HOUR_TMP);
    }

    private HourTmp(Name alias, Table<HourTmpRecord> aliased) {
        this(alias, aliased, null);
    }

    private HourTmp(Name alias, Table<HourTmpRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> HourTmp(Table<O> child, ForeignKey<O, HourTmpRecord> key) {
        super(child, key, HOUR_TMP);
    }

    @Override
    public Schema getSchema() {
        return Statdb.STATDB;
    }

    @Override
    public HourTmp as(String alias) {
        return new HourTmp(DSL.name(alias), this);
    }

    @Override
    public HourTmp as(Name alias) {
        return new HourTmp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HourTmp rename(String name) {
        return new HourTmp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HourTmp rename(Name name) {
        return new HourTmp(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Byte, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
