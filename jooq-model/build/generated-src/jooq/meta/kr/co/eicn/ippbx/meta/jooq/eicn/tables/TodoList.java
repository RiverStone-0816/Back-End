/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.enums.TodoListTodoKind;
import kr.co.eicn.ippbx.meta.jooq.eicn.enums.TodoListTodoStatus;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.TodoListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TodoList extends TableImpl<TodoListRecord> {

    private static final long serialVersionUID = 1564478068;

    /**
     * The reference instance of <code>eicn.todo_list</code>
     */
    public static final TodoList TODO_LIST = new TodoList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TodoListRecord> getRecordType() {
        return TodoListRecord.class;
    }

    /**
     * The column <code>eicn.todo_list.seq</code>.
     */
    public final TableField<TodoListRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.todo_list.regdate</code>. todo등록시간
     */
    public final TableField<TodoListRecord, Timestamp> REGDATE = createField(DSL.name("regdate"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2015-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "todo등록시간");

    /**
     * The column <code>eicn.todo_list.updatedate</code>. todo업데이트시간
     */
    public final TableField<TodoListRecord, Timestamp> UPDATEDATE = createField(DSL.name("updatedate"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2015-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "todo업데이트시간");

    /**
     * The column <code>eicn.todo_list.userid</code>. 상담원아이디
     */
    public final TableField<TodoListRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담원아이디");

    /**
     * The column <code>eicn.todo_list.todo_kind</code>. 일감종류 PREVIEW,TALK(상담톡),EMAIL(이메일),CALLBACK(콜백),RESERVE(예약콜)
     */
    public final TableField<TodoListRecord, TodoListTodoKind> TODO_KIND = createField(DSL.name("todo_kind"), org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false).asEnumDataType(kr.co.eicn.ippbx.meta.jooq.eicn.enums.TodoListTodoKind.class), this, "일감종류 PREVIEW,TALK(상담톡),EMAIL(이메일),CALLBACK(콜백),RESERVE(예약콜)");

    /**
     * The column <code>eicn.todo_list.todo_info</code>. 고객정보등
     */
    public final TableField<TodoListRecord, String> TODO_INFO = createField(DSL.name("todo_info"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객정보등");

    /**
     * The column <code>eicn.todo_list.todo_status</code>. 상태 ING(진행중), HOLD(보류중), DELETE(삭제됨), DONE(처리됨)
     */
    public final TableField<TodoListRecord, TodoListTodoStatus> TODO_STATUS = createField(DSL.name("todo_status"), org.jooq.impl.SQLDataType.VARCHAR(6).nullable(false).asEnumDataType(kr.co.eicn.ippbx.meta.jooq.eicn.enums.TodoListTodoStatus.class), this, "상태 ING(진행중), HOLD(보류중), DELETE(삭제됨), DONE(처리됨)");

    /**
     * The column <code>eicn.todo_list.detail_connect_info</code>. 해당상세 정보를 가져올 정보저장 화면에서 상세정보보기 할때 참조 참조 방법은 나중에...
     */
    public final TableField<TodoListRecord, String> DETAIL_CONNECT_INFO = createField(DSL.name("detail_connect_info"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "해당상세 정보를 가져올 정보저장 화면에서 상세정보보기 할때 참조 참조 방법은 나중에...");

    /**
     * The column <code>eicn.todo_list.company_id</code>. 컴퍼니아이디
     */
    public final TableField<TodoListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "컴퍼니아이디");

    /**
     * Create a <code>eicn.todo_list</code> table reference
     */
    public TodoList() {
        this(DSL.name("todo_list"), null);
    }

    /**
     * Create an aliased <code>eicn.todo_list</code> table reference
     */
    public TodoList(String alias) {
        this(DSL.name(alias), TODO_LIST);
    }

    /**
     * Create an aliased <code>eicn.todo_list</code> table reference
     */
    public TodoList(Name alias) {
        this(alias, TODO_LIST);
    }

    private TodoList(Name alias, Table<TodoListRecord> aliased) {
        this(alias, aliased, null);
    }

    private TodoList(Name alias, Table<TodoListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TodoList(Table<O> child, ForeignKey<O, TodoListRecord> key) {
        super(child, key, TODO_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TODO_LIST_COMPANY_ID, Indexes.TODO_LIST_USERID);
    }

    @Override
    public Identity<TodoListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TODO_LIST;
    }

    @Override
    public List<UniqueKey<TodoListRecord>> getKeys() {
        return Arrays.<UniqueKey<TodoListRecord>>asList(Keys.KEY_TODO_LIST_SEQ);
    }

    @Override
    public TodoList as(String alias) {
        return new TodoList(DSL.name(alias), this);
    }

    @Override
    public TodoList as(Name alias) {
        return new TodoList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TodoList rename(String name) {
        return new TodoList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TodoList rename(Name name) {
        return new TodoList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Timestamp, Timestamp, String, TodoListTodoKind, String, TodoListTodoStatus, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
