/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PersonLinkRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 사용자별 외부 링크
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonLink extends TableImpl<PersonLinkRecord> {

    private static final long serialVersionUID = -381857862;

    /**
     * The reference instance of <code>eicn.person_link</code>
     */
    public static final PersonLink PERSON_LINK = new PersonLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonLinkRecord> getRecordType() {
        return PersonLinkRecord.class;
    }

    /**
     * The column <code>eicn.person_link.seq</code>.
     */
    public final TableField<PersonLinkRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.person_link.name</code>. 링크 이름
     */
    public final TableField<PersonLinkRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "링크 이름");

    /**
     * The column <code>eicn.person_link.reference</code>. 링크
     */
    public final TableField<PersonLinkRecord, String> REFERENCE = createField(DSL.name("reference"), org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "링크");

    /**
     * The column <code>eicn.person_link.person_id</code>. 사용자 ID, refer: person_list.id
     */
    public final TableField<PersonLinkRecord, String> PERSON_ID = createField(DSL.name("person_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "사용자 ID, refer: person_list.id");

    /**
     * The column <code>eicn.person_link.company_id</code>. refer: company_info.company_id
     */
    public final TableField<PersonLinkRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "refer: company_info.company_id");

    /**
     * Create a <code>eicn.person_link</code> table reference
     */
    public PersonLink() {
        this(DSL.name("person_link"), null);
    }

    /**
     * Create an aliased <code>eicn.person_link</code> table reference
     */
    public PersonLink(String alias) {
        this(DSL.name(alias), PERSON_LINK);
    }

    /**
     * Create an aliased <code>eicn.person_link</code> table reference
     */
    public PersonLink(Name alias) {
        this(alias, PERSON_LINK);
    }

    private PersonLink(Name alias, Table<PersonLinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonLink(Name alias, Table<PersonLinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("사용자별 외부 링크"), TableOptions.table());
    }

    public <O extends Record> PersonLink(Table<O> child, ForeignKey<O, PersonLinkRecord> key) {
        super(child, key, PERSON_LINK);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<PersonLinkRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PERSON_LINK;
    }

    @Override
    public UniqueKey<PersonLinkRecord> getPrimaryKey() {
        return Keys.KEY_PERSON_LINK_PRIMARY;
    }

    @Override
    public List<UniqueKey<PersonLinkRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonLinkRecord>>asList(Keys.KEY_PERSON_LINK_PRIMARY);
    }

    @Override
    public PersonLink as(String alias) {
        return new PersonLink(DSL.name(alias), this);
    }

    @Override
    public PersonLink as(Name alias) {
        return new PersonLink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonLink rename(String name) {
        return new PersonLink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonLink rename(Name name) {
        return new PersonLink(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
