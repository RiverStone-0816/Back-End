/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.HistoryUploadInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistoryUploadInfo extends TableImpl<HistoryUploadInfoRecord> {

    private static final long serialVersionUID = 583873720;

    /**
     * The reference instance of <code>eicn.history_upload_info</code>
     */
    public static final HistoryUploadInfo HISTORY_UPLOAD_INFO = new HistoryUploadInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HistoryUploadInfoRecord> getRecordType() {
        return HistoryUploadInfoRecord.class;
    }

    /**
     * The column <code>eicn.history_upload_info.upload_id</code>. 업로드 아이디
     */
    public final TableField<HistoryUploadInfoRecord, String> UPLOAD_ID = createField(DSL.name("upload_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "업로드 아이디");

    /**
     * The column <code>eicn.history_upload_info.kind</code>.
     */
    public final TableField<HistoryUploadInfoRecord, String> KIND = createField(DSL.name("kind"), org.jooq.impl.SQLDataType.CHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.history_upload_info.group_id</code>. 그룹아이디
     */
    public final TableField<HistoryUploadInfoRecord, Integer> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "그룹아이디");

    /**
     * The column <code>eicn.history_upload_info.try_cnt</code>. 업로드 순서
     */
    public final TableField<HistoryUploadInfoRecord, Integer> TRY_CNT = createField(DSL.name("try_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "업로드 순서");

    /**
     * The column <code>eicn.history_upload_info.upload_cnt</code>. 업로드 데이터수
     */
    public final TableField<HistoryUploadInfoRecord, Integer> UPLOAD_CNT = createField(DSL.name("upload_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "업로드 데이터수");

    /**
     * The column <code>eicn.history_upload_info.upload_name</code>. 업로드파일명
     */
    public final TableField<HistoryUploadInfoRecord, String> UPLOAD_NAME = createField(DSL.name("upload_name"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "업로드파일명");

    /**
     * The column <code>eicn.history_upload_info.upload_date</code>. 업로드일
     */
    public final TableField<HistoryUploadInfoRecord, Timestamp> UPLOAD_DATE = createField(DSL.name("upload_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2010-01-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "업로드일");

    /**
     * The column <code>eicn.history_upload_info.upload_status</code>. 업로드 상태
     */
    public final TableField<HistoryUploadInfoRecord, String> UPLOAD_STATUS = createField(DSL.name("upload_status"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "업로드 상태");

    /**
     * The column <code>eicn.history_upload_info.company_id</code>. 회사 아이디
     */
    public final TableField<HistoryUploadInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사 아이디");

    /**
     * Create a <code>eicn.history_upload_info</code> table reference
     */
    public HistoryUploadInfo() {
        this(DSL.name("history_upload_info"), null);
    }

    /**
     * Create an aliased <code>eicn.history_upload_info</code> table reference
     */
    public HistoryUploadInfo(String alias) {
        this(DSL.name(alias), HISTORY_UPLOAD_INFO);
    }

    /**
     * Create an aliased <code>eicn.history_upload_info</code> table reference
     */
    public HistoryUploadInfo(Name alias) {
        this(alias, HISTORY_UPLOAD_INFO);
    }

    private HistoryUploadInfo(Name alias, Table<HistoryUploadInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private HistoryUploadInfo(Name alias, Table<HistoryUploadInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> HistoryUploadInfo(Table<O> child, ForeignKey<O, HistoryUploadInfoRecord> key) {
        super(child, key, HISTORY_UPLOAD_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HISTORY_UPLOAD_INFO_COMPANY_ID, Indexes.HISTORY_UPLOAD_INFO_GROUP_ID, Indexes.HISTORY_UPLOAD_INFO_KIND, Indexes.HISTORY_UPLOAD_INFO_UPLOAD_DATE);
    }

    @Override
    public UniqueKey<HistoryUploadInfoRecord> getPrimaryKey() {
        return Keys.KEY_HISTORY_UPLOAD_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<HistoryUploadInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<HistoryUploadInfoRecord>>asList(Keys.KEY_HISTORY_UPLOAD_INFO_PRIMARY);
    }

    @Override
    public HistoryUploadInfo as(String alias) {
        return new HistoryUploadInfo(DSL.name(alias), this);
    }

    @Override
    public HistoryUploadInfo as(Name alias) {
        return new HistoryUploadInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HistoryUploadInfo rename(String name) {
        return new HistoryUploadInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HistoryUploadInfo rename(Name name) {
        return new HistoryUploadInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, Integer, Integer, Integer, String, Timestamp, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
