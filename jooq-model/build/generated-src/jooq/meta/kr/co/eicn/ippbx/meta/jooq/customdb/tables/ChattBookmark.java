/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.customdb.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.customdb.Customdb;
import kr.co.eicn.ippbx.meta.jooq.customdb.Keys;
import kr.co.eicn.ippbx.meta.jooq.customdb.tables.records.ChattBookmarkRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChattBookmark extends TableImpl<ChattBookmarkRecord> {

    private static final long serialVersionUID = -181202262;

    /**
     * The reference instance of <code>CUSTOMDB.chatt_bookmark</code>
     */
    public static final ChattBookmark CHATT_BOOKMARK = new ChattBookmark();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChattBookmarkRecord> getRecordType() {
        return ChattBookmarkRecord.class;
    }

    /**
     * The column <code>CUSTOMDB.chatt_bookmark.seq</code>.
     */
    public final TableField<ChattBookmarkRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_bookmark.userid</code>.
     */
    public final TableField<ChattBookmarkRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_bookmark.memberid</code>.
     */
    public final TableField<ChattBookmarkRecord, String> MEMBERID = createField(DSL.name("memberid"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>CUSTOMDB.chatt_bookmark</code> table reference
     */
    public ChattBookmark() {
        this(DSL.name("chatt_bookmark"), null);
    }

    /**
     * Create an aliased <code>CUSTOMDB.chatt_bookmark</code> table reference
     */
    public ChattBookmark(String alias) {
        this(DSL.name(alias), CHATT_BOOKMARK);
    }

    /**
     * Create an aliased <code>CUSTOMDB.chatt_bookmark</code> table reference
     */
    public ChattBookmark(Name alias) {
        this(alias, CHATT_BOOKMARK);
    }

    private ChattBookmark(Name alias, Table<ChattBookmarkRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChattBookmark(Name alias, Table<ChattBookmarkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ChattBookmark(Table<O> child, ForeignKey<O, ChattBookmarkRecord> key) {
        super(child, key, CHATT_BOOKMARK);
    }

    @Override
    public Schema getSchema() {
        return Customdb.CUSTOMDB;
    }

    @Override
    public Identity<ChattBookmarkRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CHATT_BOOKMARK;
    }

    @Override
    public List<UniqueKey<ChattBookmarkRecord>> getKeys() {
        return Arrays.<UniqueKey<ChattBookmarkRecord>>asList(Keys.KEY_CHATT_BOOKMARK_SEQ);
    }

    @Override
    public ChattBookmark as(String alias) {
        return new ChattBookmark(DSL.name(alias), this);
    }

    @Override
    public ChattBookmark as(Name alias) {
        return new ChattBookmark(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ChattBookmark rename(String name) {
        return new ChattBookmark(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ChattBookmark rename(Name name) {
        return new ChattBookmark(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
