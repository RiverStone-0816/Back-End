/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.TrunkInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrunkInfo extends TableImpl<TrunkInfoRecord> {

    private static final long serialVersionUID = -2086396815;

    /**
     * The reference instance of <code>eicn.trunk_info</code>
     */
    public static final TrunkInfo TRUNK_INFO = new TrunkInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrunkInfoRecord> getRecordType() {
        return TrunkInfoRecord.class;
    }

    /**
     * The column <code>eicn.trunk_info.trunk_id</code>.
     */
    public final TableField<TrunkInfoRecord, String> TRUNK_ID = createField(DSL.name("trunk_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.trunk_info.telecom</code>.
     */
    public final TableField<TrunkInfoRecord, String> TELECOM = createField(DSL.name("telecom"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.trunk_info.ssw_name</code>.
     */
    public final TableField<TrunkInfoRecord, String> SSW_NAME = createField(DSL.name("ssw_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.trunk_info.ssw_ip</code>.
     */
    public final TableField<TrunkInfoRecord, String> SSW_IP = createField(DSL.name("ssw_ip"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.trunk_info.trunk_type</code>.
     */
    public final TableField<TrunkInfoRecord, String> TRUNK_TYPE = createField(DSL.name("trunk_type"), org.jooq.impl.SQLDataType.CHAR(3).defaultValue(org.jooq.impl.DSL.inline("NOR", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.trunk_info.voip_line_number</code>.
     */
    public final TableField<TrunkInfoRecord, String> VOIP_LINE_NUMBER = createField(DSL.name("voip_line_number"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.trunk_info.number_band</code>.
     */
    public final TableField<TrunkInfoRecord, String> NUMBER_BAND = createField(DSL.name("number_band"), org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.trunk_info.number_cnt</code>.
     */
    public final TableField<TrunkInfoRecord, Integer> NUMBER_CNT = createField(DSL.name("number_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.trunk_info.in_channel_cnt</code>.
     */
    public final TableField<TrunkInfoRecord, Integer> IN_CHANNEL_CNT = createField(DSL.name("in_channel_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.trunk_info.out_channel_cnt</code>.
     */
    public final TableField<TrunkInfoRecord, Integer> OUT_CHANNEL_CNT = createField(DSL.name("out_channel_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.trunk_info.etc</code>.
     */
    public final TableField<TrunkInfoRecord, String> ETC = createField(DSL.name("etc"), org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.trunk_info</code> table reference
     */
    public TrunkInfo() {
        this(DSL.name("trunk_info"), null);
    }

    /**
     * Create an aliased <code>eicn.trunk_info</code> table reference
     */
    public TrunkInfo(String alias) {
        this(DSL.name(alias), TRUNK_INFO);
    }

    /**
     * Create an aliased <code>eicn.trunk_info</code> table reference
     */
    public TrunkInfo(Name alias) {
        this(alias, TRUNK_INFO);
    }

    private TrunkInfo(Name alias, Table<TrunkInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TrunkInfo(Name alias, Table<TrunkInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TrunkInfo(Table<O> child, ForeignKey<O, TrunkInfoRecord> key) {
        super(child, key, TRUNK_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<UniqueKey<TrunkInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<TrunkInfoRecord>>asList(Keys.KEY_TRUNK_INFO_TRUNK_ID);
    }

    @Override
    public TrunkInfo as(String alias) {
        return new TrunkInfo(DSL.name(alias), this);
    }

    @Override
    public TrunkInfo as(Name alias) {
        return new TrunkInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TrunkInfo rename(String name) {
        return new TrunkInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TrunkInfo rename(Name name) {
        return new TrunkInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, String, String, String, String, String, String, Integer, Integer, Integer, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
