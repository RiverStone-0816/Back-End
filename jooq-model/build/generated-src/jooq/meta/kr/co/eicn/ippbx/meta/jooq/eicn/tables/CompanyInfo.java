/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CompanyInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 고객사 정보
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyInfo extends TableImpl<CompanyInfoRecord> {

    private static final long serialVersionUID = -1227423007;

    /**
     * The reference instance of <code>eicn.company_info</code>
     */
    public static final CompanyInfo COMPANY_INFO = new CompanyInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompanyInfoRecord> getRecordType() {
        return CompanyInfoRecord.class;
    }

    /**
     * The column <code>eicn.company_info.company_id</code>. 고객사 아이디
     */
    public final TableField<CompanyInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * The column <code>eicn.company_info.company_name</code>. 고객사명
     */
    public final TableField<CompanyInfoRecord, String> COMPANY_NAME = createField(DSL.name("company_name"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "고객사명");

    /**
     * The column <code>eicn.company_info.status</code>. 상태 (C-사용중, S-정지, X-해지)
     */
    public final TableField<CompanyInfoRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("R", org.jooq.impl.SQLDataType.CHAR)), this, "상태 (C-사용중, S-정지, X-해지)");

    /**
     * The column <code>eicn.company_info.reg_date</code>. 등록일
     */
    public final TableField<CompanyInfoRecord, Date> REG_DATE = createField(DSL.name("reg_date"), org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.inline("2009-01-01", org.jooq.impl.SQLDataType.DATE)), this, "등록일");

    /**
     * The column <code>eicn.company_info.stop_date</code>. 해지일
     */
    public final TableField<CompanyInfoRecord, Date> STOP_DATE = createField(DSL.name("stop_date"), org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.inline("2009-01-01", org.jooq.impl.SQLDataType.DATE)), this, "해지일");

    /**
     * The column <code>eicn.company_info.remove_date</code>. 삭제일
     */
    public final TableField<CompanyInfoRecord, Date> REMOVE_DATE = createField(DSL.name("remove_date"), org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.inline("2009-01-01", org.jooq.impl.SQLDataType.DATE)), this, "삭제일");

    /**
     * The column <code>eicn.company_info.damdang</code>. 담당자
     */
    public final TableField<CompanyInfoRecord, String> DAMDANG = createField(DSL.name("damdang"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "담당자");

    /**
     * The column <code>eicn.company_info.contact</code>. 연락처
     */
    public final TableField<CompanyInfoRecord, String> CONTACT = createField(DSL.name("contact"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "연락처");

    /**
     * The column <code>eicn.company_info.extension_num</code>. 내선자리수(3 또는 4)
     */
    public final TableField<CompanyInfoRecord, Byte> EXTENSION_NUM = createField(DSL.name("extension_num"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("3", org.jooq.impl.SQLDataType.TINYINT)), this, "내선자리수(3 또는 4)");

    /**
     * The column <code>eicn.company_info.max_tree_level</code>. 추가 회사 조직도의 MAX 레벨결정
     */
    public final TableField<CompanyInfoRecord, Byte> MAX_TREE_LEVEL = createField(DSL.name("max_tree_level"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("3", org.jooq.impl.SQLDataType.TINYINT)), this, "추가 회사 조직도의 MAX 레벨결정");

    /**
     * The column <code>eicn.company_info.num_license</code>. 번호 회선 수
     */
    public final TableField<CompanyInfoRecord, Integer> NUM_LICENSE = createField(DSL.name("num_license"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("500", org.jooq.impl.SQLDataType.INTEGER)), this, "번호 회선 수");

    /**
     * The column <code>eicn.company_info.ivr_license</code>. ivr 회선 수
     */
    public final TableField<CompanyInfoRecord, Integer> IVR_LICENSE = createField(DSL.name("ivr_license"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("500", org.jooq.impl.SQLDataType.INTEGER)), this, "ivr 회선 수");

    /**
     * The column <code>eicn.company_info.record_license</code>. 녹취 회선 수
     */
    public final TableField<CompanyInfoRecord, Integer> RECORD_LICENSE = createField(DSL.name("record_license"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("500", org.jooq.impl.SQLDataType.INTEGER)), this, "녹취 회선 수");

    /**
     * The column <code>eicn.company_info.pds_license</code>. pds 가능 상담원 수
     */
    public final TableField<CompanyInfoRecord, Integer> PDS_LICENSE = createField(DSL.name("pds_license"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("500", org.jooq.impl.SQLDataType.INTEGER)), this, "pds 가능 상담원 수");

    /**
     * The column <code>eicn.company_info.stat_license</code>. 통계, 모니터링, 상담원연결 , 가능 상담원 수
     */
    public final TableField<CompanyInfoRecord, Integer> STAT_LICENSE = createField(DSL.name("stat_license"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("500", org.jooq.impl.SQLDataType.INTEGER)), this, "통계, 모니터링, 상담원연결 , 가능 상담원 수");

    /**
     * The column <code>eicn.company_info.talk_license</code>.
     */
    public final TableField<CompanyInfoRecord, Integer> TALK_LICENSE = createField(DSL.name("talk_license"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("500", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.company_info.email_license</code>.
     */
    public final TableField<CompanyInfoRecord, Integer> EMAIL_LICENSE = createField(DSL.name("email_license"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("500", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.company_info.chatt_license</code>.
     */
    public final TableField<CompanyInfoRecord, Integer> CHATT_LICENSE = createField(DSL.name("chatt_license"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("100", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.company_info.ui_type</code>. 디자인 색상
     */
    public final TableField<CompanyInfoRecord, String> UI_TYPE = createField(DSL.name("ui_type"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "디자인 색상");

    /**
     * The column <code>eicn.company_info.app_dir</code>. context 디렉터리
     */
    public final TableField<CompanyInfoRecord, String> APP_DIR = createField(DSL.name("app_dir"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "context 디렉터리");

    /**
     * The column <code>eicn.company_info.language</code>. 사용 언어
     */
    public final TableField<CompanyInfoRecord, String> LANGUAGE = createField(DSL.name("language"), org.jooq.impl.SQLDataType.CHAR(2).defaultValue(org.jooq.impl.DSL.inline("ko", org.jooq.impl.SQLDataType.CHAR)), this, "사용 언어");

    /**
     * The column <code>eicn.company_info.service</code>. 사용 서비스
     */
    public final TableField<CompanyInfoRecord, String> SERVICE = createField(DSL.name("service"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "사용 서비스");

    /**
     * The column <code>eicn.company_info.information</code>. 비고
     */
    public final TableField<CompanyInfoRecord, String> INFORMATION = createField(DSL.name("information"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "비고");

    /**
     * The column <code>eicn.company_info.etc1</code>. 웹보이스 키
     */
    public final TableField<CompanyInfoRecord, String> ETC1 = createField(DSL.name("etc1"), org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "웹보이스 키");

    /**
     * The column <code>eicn.company_info.etc2</code>. 웹보이스 정보
     */
    public final TableField<CompanyInfoRecord, String> ETC2 = createField(DSL.name("etc2"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "웹보이스 정보");

    /**
     * The column <code>eicn.company_info.etc3</code>. 웹보이스 정보
     */
    public final TableField<CompanyInfoRecord, String> ETC3 = createField(DSL.name("etc3"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "웹보이스 정보");

    /**
     * Create a <code>eicn.company_info</code> table reference
     */
    public CompanyInfo() {
        this(DSL.name("company_info"), null);
    }

    /**
     * Create an aliased <code>eicn.company_info</code> table reference
     */
    public CompanyInfo(String alias) {
        this(DSL.name(alias), COMPANY_INFO);
    }

    /**
     * Create an aliased <code>eicn.company_info</code> table reference
     */
    public CompanyInfo(Name alias) {
        this(alias, COMPANY_INFO);
    }

    private CompanyInfo(Name alias, Table<CompanyInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CompanyInfo(Name alias, Table<CompanyInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("고객사 정보"), TableOptions.table());
    }

    public <O extends Record> CompanyInfo(Table<O> child, ForeignKey<O, CompanyInfoRecord> key) {
        super(child, key, COMPANY_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<UniqueKey<CompanyInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<CompanyInfoRecord>>asList(Keys.KEY_COMPANY_INFO_COMPANY_ID);
    }

    @Override
    public CompanyInfo as(String alias) {
        return new CompanyInfo(DSL.name(alias), this);
    }

    @Override
    public CompanyInfo as(Name alias) {
        return new CompanyInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyInfo rename(String name) {
        return new CompanyInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyInfo rename(Name name) {
        return new CompanyInfo(name, null);
    }
}
