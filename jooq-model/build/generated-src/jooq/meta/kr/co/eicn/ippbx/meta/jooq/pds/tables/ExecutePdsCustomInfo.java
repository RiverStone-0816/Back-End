/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.pds.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.pds.Indexes;
import kr.co.eicn.ippbx.meta.jooq.pds.Keys;
import kr.co.eicn.ippbx.meta.jooq.pds.Pds;
import kr.co.eicn.ippbx.meta.jooq.pds.tables.records.ExecutePdsCustomInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExecutePdsCustomInfo extends TableImpl<ExecutePdsCustomInfoRecord> {

    private static final long serialVersionUID = 189205957;

    /**
     * The reference instance of <code>PDS.execute_pds_custom_info</code>
     */
    public static final ExecutePdsCustomInfo EXECUTE_PDS_CUSTOM_INFO = new ExecutePdsCustomInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExecutePdsCustomInfoRecord> getRecordType() {
        return ExecutePdsCustomInfoRecord.class;
    }

    /**
     * The column <code>PDS.execute_pds_custom_info.seq</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.custom_id</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> CUSTOM_ID = createField(DSL.name("custom_id"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.execute_id</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> EXECUTE_ID = createField(DSL.name("execute_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.pds_group_id</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, Integer> PDS_GROUP_ID = createField(DSL.name("pds_group_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.number_field</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> NUMBER_FIELD = createField(DSL.name("number_field"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.field_seq</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, Byte> FIELD_SEQ = createField(DSL.name("field_seq"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.custom_number</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> CUSTOM_NUMBER = createField(DSL.name("custom_number"), org.jooq.impl.SQLDataType.VARCHAR(15).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.rid</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> RID = createField(DSL.name("rid"), org.jooq.impl.SQLDataType.VARCHAR(15).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.status</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.tts_data</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> TTS_DATA = createField(DSL.name("tts_data"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.click_key</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> CLICK_KEY = createField(DSL.name("click_key"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.hangup_cause</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> HANGUP_CAUSE = createField(DSL.name("hangup_cause"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.hangup_msg</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> HANGUP_MSG = createField(DSL.name("hangup_msg"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.hangup_time</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, Timestamp> HANGUP_TIME = createField(DSL.name("hangup_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2010-01-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.read_status</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> READ_STATUS = createField(DSL.name("read_status"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.company_id</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.user_data1</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> USER_DATA1 = createField(DSL.name("user_data1"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.user_data2</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> USER_DATA2 = createField(DSL.name("user_data2"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>PDS.execute_pds_custom_info.user_data3</code>.
     */
    public final TableField<ExecutePdsCustomInfoRecord, String> USER_DATA3 = createField(DSL.name("user_data3"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>PDS.execute_pds_custom_info</code> table reference
     */
    public ExecutePdsCustomInfo() {
        this(DSL.name("execute_pds_custom_info"), null);
    }

    /**
     * Create an aliased <code>PDS.execute_pds_custom_info</code> table reference
     */
    public ExecutePdsCustomInfo(String alias) {
        this(DSL.name(alias), EXECUTE_PDS_CUSTOM_INFO);
    }

    /**
     * Create an aliased <code>PDS.execute_pds_custom_info</code> table reference
     */
    public ExecutePdsCustomInfo(Name alias) {
        this(alias, EXECUTE_PDS_CUSTOM_INFO);
    }

    private ExecutePdsCustomInfo(Name alias, Table<ExecutePdsCustomInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExecutePdsCustomInfo(Name alias, Table<ExecutePdsCustomInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ExecutePdsCustomInfo(Table<O> child, ForeignKey<O, ExecutePdsCustomInfoRecord> key) {
        super(child, key, EXECUTE_PDS_CUSTOM_INFO);
    }

    @Override
    public Schema getSchema() {
        return Pds.PDS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EXECUTE_PDS_CUSTOM_INFO_CLICK_KEY, Indexes.EXECUTE_PDS_CUSTOM_INFO_COMPANY_ID, Indexes.EXECUTE_PDS_CUSTOM_INFO_CUSTOM_ID, Indexes.EXECUTE_PDS_CUSTOM_INFO_FIELD_SEQ, Indexes.EXECUTE_PDS_CUSTOM_INFO_PDS_GROUP_ID);
    }

    @Override
    public Identity<ExecutePdsCustomInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EXECUTE_PDS_CUSTOM_INFO;
    }

    @Override
    public UniqueKey<ExecutePdsCustomInfoRecord> getPrimaryKey() {
        return Keys.KEY_EXECUTE_PDS_CUSTOM_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<ExecutePdsCustomInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<ExecutePdsCustomInfoRecord>>asList(Keys.KEY_EXECUTE_PDS_CUSTOM_INFO_PRIMARY);
    }

    @Override
    public ExecutePdsCustomInfo as(String alias) {
        return new ExecutePdsCustomInfo(DSL.name(alias), this);
    }

    @Override
    public ExecutePdsCustomInfo as(Name alias) {
        return new ExecutePdsCustomInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ExecutePdsCustomInfo rename(String name) {
        return new ExecutePdsCustomInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ExecutePdsCustomInfo rename(Name name) {
        return new ExecutePdsCustomInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<Integer, String, String, Integer, String, Byte, String, String, String, String, String, String, String, Timestamp, String, String, String, String, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
