/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.MohListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 관리자 페이지 내에 컬러링 정보가 저장된 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MohList extends TableImpl<MohListRecord> {

    private static final long serialVersionUID = -1694459649;

    /**
     * The reference instance of <code>eicn.moh_list</code>
     */
    public static final MohList MOH_LIST = new MohList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MohListRecord> getRecordType() {
        return MohListRecord.class;
    }

    /**
     * The column <code>eicn.moh_list.category</code>. 컬러링 정보의 유니크 값
     */
    public final TableField<MohListRecord, String> CATEGORY = createField(DSL.name("category"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "컬러링 정보의 유니크 값");

    /**
     * The column <code>eicn.moh_list.moh_name</code>. 음원명
     */
    public final TableField<MohListRecord, String> MOH_NAME = createField(DSL.name("moh_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "음원명");

    /**
     * The column <code>eicn.moh_list.company_id</code>. 고객사 아이디
     */
    public final TableField<MohListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * The column <code>eicn.moh_list.company_seq</code>. 컬러링 정보의 유니크값
     */
    public final TableField<MohListRecord, Integer> COMPANY_SEQ = createField(DSL.name("company_seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "컬러링 정보의 유니크값");

    /**
     * The column <code>eicn.moh_list.directory</code>. 컬러링 파일이 저장된 경로
     */
    public final TableField<MohListRecord, String> DIRECTORY = createField(DSL.name("directory"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "컬러링 파일이 저장된 경로");

    /**
     * The column <code>eicn.moh_list.file_name</code>. 컬러링 파일명
     */
    public final TableField<MohListRecord, String> FILE_NAME = createField(DSL.name("file_name"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "컬러링 파일명");

    /**
     * Create a <code>eicn.moh_list</code> table reference
     */
    public MohList() {
        this(DSL.name("moh_list"), null);
    }

    /**
     * Create an aliased <code>eicn.moh_list</code> table reference
     */
    public MohList(String alias) {
        this(DSL.name(alias), MOH_LIST);
    }

    /**
     * Create an aliased <code>eicn.moh_list</code> table reference
     */
    public MohList(Name alias) {
        this(alias, MOH_LIST);
    }

    private MohList(Name alias, Table<MohListRecord> aliased) {
        this(alias, aliased, null);
    }

    private MohList(Name alias, Table<MohListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("관리자 페이지 내에 컬러링 정보가 저장된 테이블"), TableOptions.table());
    }

    public <O extends Record> MohList(Table<O> child, ForeignKey<O, MohListRecord> key) {
        super(child, key, MOH_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public UniqueKey<MohListRecord> getPrimaryKey() {
        return Keys.KEY_MOH_LIST_PRIMARY;
    }

    @Override
    public List<UniqueKey<MohListRecord>> getKeys() {
        return Arrays.<UniqueKey<MohListRecord>>asList(Keys.KEY_MOH_LIST_PRIMARY);
    }

    @Override
    public MohList as(String alias) {
        return new MohList(DSL.name(alias), this);
    }

    @Override
    public MohList as(Name alias) {
        return new MohList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MohList rename(String name) {
        return new MohList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MohList rename(Name name) {
        return new MohList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, Integer, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
