/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.TalkMemberGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 상담톡수신그룹관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TalkMemberGroup extends TableImpl<TalkMemberGroupRecord> {

    private static final long serialVersionUID = -774450855;

    /**
     * The reference instance of <code>eicn.talk_member_group</code>
     */
    public static final TalkMemberGroup TALK_MEMBER_GROUP = new TalkMemberGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TalkMemberGroupRecord> getRecordType() {
        return TalkMemberGroupRecord.class;
    }

    /**
     * The column <code>eicn.talk_member_group.group_id</code>. 상담톡 그룹 아이디
     */
    public final TableField<TalkMemberGroupRecord, Integer> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "상담톡 그룹 아이디");

    /**
     * The column <code>eicn.talk_member_group.group_name</code>. 상담톡 그룹명
     */
    public final TableField<TalkMemberGroupRecord, String> GROUP_NAME = createField(DSL.name("group_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담톡 그룹명");

    /**
     * The column <code>eicn.talk_member_group.company_id</code>. 고객사 아이디
     */
    public final TableField<TalkMemberGroupRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * The column <code>eicn.talk_member_group.sender_key</code>. 상담톡키
     */
    public final TableField<TalkMemberGroupRecord, String> SENDER_KEY = createField(DSL.name("sender_key"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담톡키");

    /**
     * Create a <code>eicn.talk_member_group</code> table reference
     */
    public TalkMemberGroup() {
        this(DSL.name("talk_member_group"), null);
    }

    /**
     * Create an aliased <code>eicn.talk_member_group</code> table reference
     */
    public TalkMemberGroup(String alias) {
        this(DSL.name(alias), TALK_MEMBER_GROUP);
    }

    /**
     * Create an aliased <code>eicn.talk_member_group</code> table reference
     */
    public TalkMemberGroup(Name alias) {
        this(alias, TALK_MEMBER_GROUP);
    }

    private TalkMemberGroup(Name alias, Table<TalkMemberGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private TalkMemberGroup(Name alias, Table<TalkMemberGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("상담톡수신그룹관리 테이블"), TableOptions.table());
    }

    public <O extends Record> TalkMemberGroup(Table<O> child, ForeignKey<O, TalkMemberGroupRecord> key) {
        super(child, key, TALK_MEMBER_GROUP);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<TalkMemberGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TALK_MEMBER_GROUP;
    }

    @Override
    public List<UniqueKey<TalkMemberGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<TalkMemberGroupRecord>>asList(Keys.KEY_TALK_MEMBER_GROUP_GROUP_ID);
    }

    @Override
    public TalkMemberGroup as(String alias) {
        return new TalkMemberGroup(DSL.name(alias), this);
    }

    @Override
    public TalkMemberGroup as(Name alias) {
        return new TalkMemberGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TalkMemberGroup rename(String name) {
        return new TalkMemberGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TalkMemberGroup rename(Name name) {
        return new TalkMemberGroup(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
