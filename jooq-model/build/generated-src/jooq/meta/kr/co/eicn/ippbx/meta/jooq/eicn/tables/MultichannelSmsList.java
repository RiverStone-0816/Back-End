/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.MultichannelSmsListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MultichannelSmsList extends TableImpl<MultichannelSmsListRecord> {

    private static final long serialVersionUID = 875085370;

    /**
     * The reference instance of <code>eicn.multichannel_sms_list</code>
     */
    public static final MultichannelSmsList MULTICHANNEL_SMS_LIST = new MultichannelSmsList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MultichannelSmsListRecord> getRecordType() {
        return MultichannelSmsListRecord.class;
    }

    /**
     * The column <code>eicn.multichannel_sms_list.seq</code>.
     */
    public final TableField<MultichannelSmsListRecord, UInteger> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.config_seq</code>.
     */
    public final TableField<MultichannelSmsListRecord, UInteger> CONFIG_SEQ = createField(DSL.name("config_seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.info_seq</code>.
     */
    public final TableField<MultichannelSmsListRecord, UInteger> INFO_SEQ = createField(DSL.name("info_seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.campaign_seq</code>.
     */
    public final TableField<MultichannelSmsListRecord, UInteger> CAMPAIGN_SEQ = createField(DSL.name("campaign_seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.custom_id</code>.
     */
    public final TableField<MultichannelSmsListRecord, UInteger> CUSTOM_ID = createField(DSL.name("custom_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.status</code>.
     */
    public final TableField<MultichannelSmsListRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.recv_date</code>.
     */
    public final TableField<MultichannelSmsListRecord, Timestamp> RECV_DATE = createField(DSL.name("recv_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.recv_userid</code>.
     */
    public final TableField<MultichannelSmsListRecord, String> RECV_USERID = createField(DSL.name("recv_userid"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.recv_username</code>.
     */
    public final TableField<MultichannelSmsListRecord, String> RECV_USERNAME = createField(DSL.name("recv_username"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.userid</code>.
     */
    public final TableField<MultichannelSmsListRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.username</code>.
     */
    public final TableField<MultichannelSmsListRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.custom_name</code>.
     */
    public final TableField<MultichannelSmsListRecord, String> CUSTOM_NAME = createField(DSL.name("custom_name"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.custom_comp</code>.
     */
    public final TableField<MultichannelSmsListRecord, String> CUSTOM_COMP = createField(DSL.name("custom_comp"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.insert_date</code>.
     */
    public final TableField<MultichannelSmsListRecord, Timestamp> INSERT_DATE = createField(DSL.name("insert_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.update_date</code>.
     */
    public final TableField<MultichannelSmsListRecord, Timestamp> UPDATE_DATE = createField(DSL.name("update_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.update_userid</code>.
     */
    public final TableField<MultichannelSmsListRecord, String> UPDATE_USERID = createField(DSL.name("update_userid"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.multichannel_sms_list.company_id</code>.
     */
    public final TableField<MultichannelSmsListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * Create a <code>eicn.multichannel_sms_list</code> table reference
     */
    public MultichannelSmsList() {
        this(DSL.name("multichannel_sms_list"), null);
    }

    /**
     * Create an aliased <code>eicn.multichannel_sms_list</code> table reference
     */
    public MultichannelSmsList(String alias) {
        this(DSL.name(alias), MULTICHANNEL_SMS_LIST);
    }

    /**
     * Create an aliased <code>eicn.multichannel_sms_list</code> table reference
     */
    public MultichannelSmsList(Name alias) {
        this(alias, MULTICHANNEL_SMS_LIST);
    }

    private MultichannelSmsList(Name alias, Table<MultichannelSmsListRecord> aliased) {
        this(alias, aliased, null);
    }

    private MultichannelSmsList(Name alias, Table<MultichannelSmsListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> MultichannelSmsList(Table<O> child, ForeignKey<O, MultichannelSmsListRecord> key) {
        super(child, key, MULTICHANNEL_SMS_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<MultichannelSmsListRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_MULTICHANNEL_SMS_LIST;
    }

    @Override
    public UniqueKey<MultichannelSmsListRecord> getPrimaryKey() {
        return Keys.KEY_MULTICHANNEL_SMS_LIST_PRIMARY;
    }

    @Override
    public List<UniqueKey<MultichannelSmsListRecord>> getKeys() {
        return Arrays.<UniqueKey<MultichannelSmsListRecord>>asList(Keys.KEY_MULTICHANNEL_SMS_LIST_PRIMARY);
    }

    @Override
    public MultichannelSmsList as(String alias) {
        return new MultichannelSmsList(DSL.name(alias), this);
    }

    @Override
    public MultichannelSmsList as(Name alias) {
        return new MultichannelSmsList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MultichannelSmsList rename(String name) {
        return new MultichannelSmsList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MultichannelSmsList rename(Name name) {
        return new MultichannelSmsList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<UInteger, UInteger, UInteger, UInteger, UInteger, String, Timestamp, String, String, String, String, String, String, Timestamp, Timestamp, String, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
