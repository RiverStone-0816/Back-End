/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.MemberStatusCodeRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberStatusCode extends TableImpl<MemberStatusCodeRecord> {

    private static final long serialVersionUID = -210143493;

    /**
     * The reference instance of <code>eicn.member_status_code</code>
     */
    public static final MemberStatusCode MEMBER_STATUS_CODE = new MemberStatusCode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemberStatusCodeRecord> getRecordType() {
        return MemberStatusCodeRecord.class;
    }

    /**
     * The column <code>eicn.member_status_code.seq</code>.
     */
    public final TableField<MemberStatusCodeRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.member_status_code.status_name</code>.
     */
    public final TableField<MemberStatusCodeRecord, String> STATUS_NAME = createField(DSL.name("status_name"), org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.member_status_code.status_number</code>.
     */
    public final TableField<MemberStatusCodeRecord, Integer> STATUS_NUMBER = createField(DSL.name("status_number"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.member_status_code.info</code>.
     */
    public final TableField<MemberStatusCodeRecord, String> INFO = createField(DSL.name("info"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.member_status_code.service_kind</code>.
     */
    public final TableField<MemberStatusCodeRecord, String> SERVICE_KIND = createField(DSL.name("service_kind"), org.jooq.impl.SQLDataType.CHAR(2).defaultValue(org.jooq.impl.DSL.inline("SC", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.member_status_code.icon</code>.
     */
    public final TableField<MemberStatusCodeRecord, String> ICON = createField(DSL.name("icon"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.member_status_code</code> table reference
     */
    public MemberStatusCode() {
        this(DSL.name("member_status_code"), null);
    }

    /**
     * Create an aliased <code>eicn.member_status_code</code> table reference
     */
    public MemberStatusCode(String alias) {
        this(DSL.name(alias), MEMBER_STATUS_CODE);
    }

    /**
     * Create an aliased <code>eicn.member_status_code</code> table reference
     */
    public MemberStatusCode(Name alias) {
        this(alias, MEMBER_STATUS_CODE);
    }

    private MemberStatusCode(Name alias, Table<MemberStatusCodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private MemberStatusCode(Name alias, Table<MemberStatusCodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> MemberStatusCode(Table<O> child, ForeignKey<O, MemberStatusCodeRecord> key) {
        super(child, key, MEMBER_STATUS_CODE);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<MemberStatusCodeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MEMBER_STATUS_CODE;
    }

    @Override
    public List<UniqueKey<MemberStatusCodeRecord>> getKeys() {
        return Arrays.<UniqueKey<MemberStatusCodeRecord>>asList(Keys.KEY_MEMBER_STATUS_CODE_SEQ);
    }

    @Override
    public MemberStatusCode as(String alias) {
        return new MemberStatusCode(DSL.name(alias), this);
    }

    @Override
    public MemberStatusCode as(Name alias) {
        return new MemberStatusCode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberStatusCode rename(String name) {
        return new MemberStatusCode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberStatusCode rename(Name name) {
        return new MemberStatusCode(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Integer, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
