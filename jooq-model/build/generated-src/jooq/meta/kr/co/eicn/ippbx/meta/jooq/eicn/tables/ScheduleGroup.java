/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.ScheduleGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 스케쥴 유형 관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduleGroup extends TableImpl<ScheduleGroupRecord> {

    private static final long serialVersionUID = -1740063676;

    /**
     * The reference instance of <code>eicn.schedule_group</code>
     */
    public static final ScheduleGroup SCHEDULE_GROUP = new ScheduleGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScheduleGroupRecord> getRecordType() {
        return ScheduleGroupRecord.class;
    }

    /**
     * The column <code>eicn.schedule_group.parent</code>. 고유키
     */
    public final TableField<ScheduleGroupRecord, Integer> PARENT = createField(DSL.name("parent"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "고유키");

    /**
     * The column <code>eicn.schedule_group.name</code>. 스케쥴 그룹명
     */
    public final TableField<ScheduleGroupRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "스케쥴 그룹명");

    /**
     * The column <code>eicn.schedule_group.company_id</code>. 회사 아이디
     */
    public final TableField<ScheduleGroupRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사 아이디");

    /**
     * Create a <code>eicn.schedule_group</code> table reference
     */
    public ScheduleGroup() {
        this(DSL.name("schedule_group"), null);
    }

    /**
     * Create an aliased <code>eicn.schedule_group</code> table reference
     */
    public ScheduleGroup(String alias) {
        this(DSL.name(alias), SCHEDULE_GROUP);
    }

    /**
     * Create an aliased <code>eicn.schedule_group</code> table reference
     */
    public ScheduleGroup(Name alias) {
        this(alias, SCHEDULE_GROUP);
    }

    private ScheduleGroup(Name alias, Table<ScheduleGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScheduleGroup(Name alias, Table<ScheduleGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("스케쥴 유형 관리 테이블"), TableOptions.table());
    }

    public <O extends Record> ScheduleGroup(Table<O> child, ForeignKey<O, ScheduleGroupRecord> key) {
        super(child, key, SCHEDULE_GROUP);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<ScheduleGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SCHEDULE_GROUP;
    }

    @Override
    public List<UniqueKey<ScheduleGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<ScheduleGroupRecord>>asList(Keys.KEY_SCHEDULE_GROUP_PARENT);
    }

    @Override
    public ScheduleGroup as(String alias) {
        return new ScheduleGroup(DSL.name(alias), this);
    }

    @Override
    public ScheduleGroup as(Name alias) {
        return new ScheduleGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduleGroup rename(String name) {
        return new ScheduleGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduleGroup rename(Name name) {
        return new ScheduleGroup(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
