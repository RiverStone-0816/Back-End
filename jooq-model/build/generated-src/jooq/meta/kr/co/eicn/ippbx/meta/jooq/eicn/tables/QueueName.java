/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.QueueNameRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 헌트관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueueName extends TableImpl<QueueNameRecord> {

    private static final long serialVersionUID = 358118477;

    /**
     * The reference instance of <code>eicn.queue_name</code>
     */
    public static final QueueName QUEUE_NAME = new QueueName();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QueueNameRecord> getRecordType() {
        return QueueNameRecord.class;
    }

    /**
     * The column <code>eicn.queue_name.seq</code>. SEQ (데이터입력시자동증가)
     */
    public final TableField<QueueNameRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER, this, "SEQ (데이터입력시자동증가)");

    /**
     * The column <code>eicn.queue_name.name</code>. QUEUE 이름
     */
    public final TableField<QueueNameRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "QUEUE 이름");

    /**
     * The column <code>eicn.queue_name.han_name</code>. QUEUE 한글이름
     */
    public final TableField<QueueNameRecord, String> HAN_NAME = createField(DSL.name("han_name"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "QUEUE 한글이름");

    /**
     * The column <code>eicn.queue_name.number</code>. QUEUE 11자리번호
     */
    public final TableField<QueueNameRecord, String> NUMBER = createField(DSL.name("number"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "QUEUE 11자리번호");

    /**
     * The column <code>eicn.queue_name.queue_timeout</code>. QUEUE 대기타임아웃시간
     */
    public final TableField<QueueNameRecord, Integer> QUEUE_TIMEOUT = createField(DSL.name("queue_timeout"), org.jooq.impl.SQLDataType.INTEGER, this, "QUEUE 대기타임아웃시간");

    /**
     * The column <code>eicn.queue_name.strategy</code>. QUEUE 분배방식
     */
    public final TableField<QueueNameRecord, String> STRATEGY = createField(DSL.name("strategy"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "QUEUE 분배방식");

    /**
     * The column <code>eicn.queue_name.cnt</code>.
     */
    public final TableField<QueueNameRecord, Integer> CNT = createField(DSL.name("cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.queue_name.svc_number</code>. 인입번호
     */
    public final TableField<QueueNameRecord, String> SVC_NUMBER = createField(DSL.name("svc_number"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "인입번호");

    /**
     * The column <code>eicn.queue_name.host</code>. 해당 QUEUE 사용IP
     */
    public final TableField<QueueNameRecord, String> HOST = createField(DSL.name("host"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "해당 QUEUE 사용IP");

    /**
     * The column <code>eicn.queue_name.retry_max_cnt</code>.
     */
    public final TableField<QueueNameRecord, Integer> RETRY_MAX_CNT = createField(DSL.name("retry_max_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.queue_name.retry_sound</code>. 재시도시멘트
     */
    public final TableField<QueueNameRecord, String> RETRY_SOUND = createField(DSL.name("retry_sound"), org.jooq.impl.SQLDataType.VARCHAR(300).defaultValue(org.jooq.impl.DSL.inline("CONTEXT", org.jooq.impl.SQLDataType.VARCHAR)), this, "재시도시멘트");

    /**
     * The column <code>eicn.queue_name.retry_action</code>. 재시도액션KEY나머지는다음액션없으면맨트만하고자동재시도
     */
    public final TableField<QueueNameRecord, String> RETRY_ACTION = createField(DSL.name("retry_action"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("CONTEXT", org.jooq.impl.SQLDataType.VARCHAR)), this, "재시도액션KEY나머지는다음액션없으면맨트만하고자동재시도");

    /**
     * The column <code>eicn.queue_name.no_connect_kind</code>. 상담원비연결시종류CONTEXT:컨텍스트RESERVE_HUNT:예비헌트
     */
    public final TableField<QueueNameRecord, String> NO_CONNECT_KIND = createField(DSL.name("no_connect_kind"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("CONTEXT", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담원비연결시종류CONTEXT:컨텍스트RESERVE_HUNT:예비헌트");

    /**
     * The column <code>eicn.queue_name.no_connect_data</code>. 컨텍스트명예비헌트명
     */
    public final TableField<QueueNameRecord, String> NO_CONNECT_DATA = createField(DSL.name("no_connect_data"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("CONTEXT", org.jooq.impl.SQLDataType.VARCHAR)), this, "컨텍스트명예비헌트명");

    /**
     * The column <code>eicn.queue_name.is_forwarding</code>. 포워딩여부
     */
    public final TableField<QueueNameRecord, String> IS_FORWARDING = createField(DSL.name("is_forwarding"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "포워딩여부");

    /**
     * The column <code>eicn.queue_name.hunt_forwarding</code>. 포워딩번호
     */
    public final TableField<QueueNameRecord, String> HUNT_FORWARDING = createField(DSL.name("hunt_forwarding"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "포워딩번호");

    /**
     * The column <code>eicn.queue_name.blending_mode</code>. 콜블랜딩정책여부
     */
    public final TableField<QueueNameRecord, String> BLENDING_MODE = createField(DSL.name("blending_mode"), org.jooq.impl.SQLDataType.CHAR(5).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "콜블랜딩정책여부");

    /**
     * The column <code>eicn.queue_name.blending_wait_exe_yn</code>. Y,N
     */
    public final TableField<QueueNameRecord, String> BLENDING_WAIT_EXE_YN = createField(DSL.name("blending_wait_exe_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "Y,N");

    /**
     * The column <code>eicn.queue_name.blending_wait_cnt</code>. 대기명수
     */
    public final TableField<QueueNameRecord, Integer> BLENDING_WAIT_CNT = createField(DSL.name("blending_wait_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "대기명수");

    /**
     * The column <code>eicn.queue_name.blending_wait_lasttime</code>. 기준대기자명수
     */
    public final TableField<QueueNameRecord, Timestamp> BLENDING_WAIT_LASTTIME = createField(DSL.name("blending_wait_lasttime"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2016-01-01 01:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "기준대기자명수");

    /**
     * The column <code>eicn.queue_name.blending_wait_keeptime</code>. 기준명수초과대기시간
     */
    public final TableField<QueueNameRecord, Integer> BLENDING_WAIT_KEEPTIME = createField(DSL.name("blending_wait_keeptime"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "기준명수초과대기시간");

    /**
     * The column <code>eicn.queue_name.blending_time_exe_yn</code>. 시간설정여부
     */
    public final TableField<QueueNameRecord, String> BLENDING_TIME_EXE_YN = createField(DSL.name("blending_time_exe_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "시간설정여부");

    /**
     * The column <code>eicn.queue_name.blending_time_fromtime</code>. 시작시간	
     */
    public final TableField<QueueNameRecord, Integer> BLENDING_TIME_FROMTIME = createField(DSL.name("blending_time_fromtime"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "시작시간	");

    /**
     * The column <code>eicn.queue_name.blending_time_totime</code>. 끝시간
     */
    public final TableField<QueueNameRecord, Integer> BLENDING_TIME_TOTIME = createField(DSL.name("blending_time_totime"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "끝시간");

    /**
     * The column <code>eicn.queue_name.group_code</code>. 같은 group_level 에서 unique한 코드 4자리 ex&gt;0001
     */
    public final TableField<QueueNameRecord, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000", org.jooq.impl.SQLDataType.CHAR)), this, "같은 group_level 에서 unique한 코드 4자리 ex>0001");

    /**
     * The column <code>eicn.queue_name.group_tree_name</code>. 윗레벨의 코드를 포함한 코드의 나열
     */
    public final TableField<QueueNameRecord, String> GROUP_TREE_NAME = createField(DSL.name("group_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "윗레벨의 코드를 포함한 코드의 나열");

    /**
     * The column <code>eicn.queue_name.group_level</code>. 해당조직의 레벨 MAX 보다 같거나 작을것
     */
    public final TableField<QueueNameRecord, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "해당조직의 레벨 MAX 보다 같거나 작을것");

    /**
     * The column <code>eicn.queue_name.company_id</code>. 회사아이디
     */
    public final TableField<QueueNameRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아이디");

    /**
     * Create a <code>eicn.queue_name</code> table reference
     */
    public QueueName() {
        this(DSL.name("queue_name"), null);
    }

    /**
     * Create an aliased <code>eicn.queue_name</code> table reference
     */
    public QueueName(String alias) {
        this(DSL.name(alias), QUEUE_NAME);
    }

    /**
     * Create an aliased <code>eicn.queue_name</code> table reference
     */
    public QueueName(Name alias) {
        this(alias, QUEUE_NAME);
    }

    private QueueName(Name alias, Table<QueueNameRecord> aliased) {
        this(alias, aliased, null);
    }

    private QueueName(Name alias, Table<QueueNameRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("헌트관리 테이블"), TableOptions.table());
    }

    public <O extends Record> QueueName(Table<O> child, ForeignKey<O, QueueNameRecord> key) {
        super(child, key, QUEUE_NAME);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<UniqueKey<QueueNameRecord>> getKeys() {
        return Arrays.<UniqueKey<QueueNameRecord>>asList(Keys.KEY_QUEUE_NAME_NAME, Keys.KEY_QUEUE_NAME_QUEUE_NAME_PK);
    }

    @Override
    public QueueName as(String alias) {
        return new QueueName(DSL.name(alias), this);
    }

    @Override
    public QueueName as(Name alias) {
        return new QueueName(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QueueName rename(String name) {
        return new QueueName(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QueueName rename(Name name) {
        return new QueueName(name, null);
    }
}
