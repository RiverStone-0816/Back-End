/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PhoneAgentRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 폰 agent 네임관리
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhoneAgent extends TableImpl<PhoneAgentRecord> {

    private static final long serialVersionUID = 592797796;

    /**
     * The reference instance of <code>eicn.phone_agent</code>
     */
    public static final PhoneAgent PHONE_AGENT = new PhoneAgent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PhoneAgentRecord> getRecordType() {
        return PhoneAgentRecord.class;
    }

    /**
     * The column <code>eicn.phone_agent.agent</code>.
     */
    public final TableField<PhoneAgentRecord, String> AGENT = createField(DSL.name("agent"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("Asterisk", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.phone_agent.agent_info</code>.
     */
    public final TableField<PhoneAgentRecord, String> AGENT_INFO = createField(DSL.name("agent_info"), org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.phone_agent</code> table reference
     */
    public PhoneAgent() {
        this(DSL.name("phone_agent"), null);
    }

    /**
     * Create an aliased <code>eicn.phone_agent</code> table reference
     */
    public PhoneAgent(String alias) {
        this(DSL.name(alias), PHONE_AGENT);
    }

    /**
     * Create an aliased <code>eicn.phone_agent</code> table reference
     */
    public PhoneAgent(Name alias) {
        this(alias, PHONE_AGENT);
    }

    private PhoneAgent(Name alias, Table<PhoneAgentRecord> aliased) {
        this(alias, aliased, null);
    }

    private PhoneAgent(Name alias, Table<PhoneAgentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("폰 agent 네임관리"), TableOptions.table());
    }

    public <O extends Record> PhoneAgent(Table<O> child, ForeignKey<O, PhoneAgentRecord> key) {
        super(child, key, PHONE_AGENT);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<UniqueKey<PhoneAgentRecord>> getKeys() {
        return Arrays.<UniqueKey<PhoneAgentRecord>>asList(Keys.KEY_PHONE_AGENT_AGENT);
    }

    @Override
    public PhoneAgent as(String alias) {
        return new PhoneAgent(DSL.name(alias), this);
    }

    @Override
    public PhoneAgent as(Name alias) {
        return new PhoneAgent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PhoneAgent rename(String name) {
        return new PhoneAgent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PhoneAgent rename(Name name) {
        return new PhoneAgent(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
