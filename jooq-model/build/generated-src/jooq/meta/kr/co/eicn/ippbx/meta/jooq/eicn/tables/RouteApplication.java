/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.enums.RouteApplicationResult;
import kr.co.eicn.ippbx.meta.jooq.eicn.enums.RouteApplicationType;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.RouteApplicationRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RouteApplication extends TableImpl<RouteApplicationRecord> {

    private static final long serialVersionUID = -50596873;

    /**
     * The reference instance of <code>eicn.route_application</code>
     */
    public static final RouteApplication ROUTE_APPLICATION = new RouteApplication();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RouteApplicationRecord> getRecordType() {
        return RouteApplicationRecord.class;
    }

    /**
     * The column <code>eicn.route_application.seq</code>.
     */
    public final TableField<RouteApplicationRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.route_application.input_date</code>.
     */
    public final TableField<RouteApplicationRecord, Timestamp> INPUT_DATE = createField(DSL.name("input_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2020-01-01 01:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.route_application.result_date</code>.
     */
    public final TableField<RouteApplicationRecord, Timestamp> RESULT_DATE = createField(DSL.name("result_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2020-01-01 01:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.route_application.type</code>.
     */
    public final TableField<RouteApplicationRecord, RouteApplicationType> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(5).nullable(false).defaultValue(org.jooq.impl.DSL.inline("BLACK", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(kr.co.eicn.ippbx.meta.jooq.eicn.enums.RouteApplicationType.class), this, "");

    /**
     * The column <code>eicn.route_application.number</code>.
     */
    public final TableField<RouteApplicationRecord, String> NUMBER = createField(DSL.name("number"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.route_application.app_userid</code>.
     */
    public final TableField<RouteApplicationRecord, String> APP_USERID = createField(DSL.name("app_userid"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.route_application.rst_userid</code>.
     */
    public final TableField<RouteApplicationRecord, String> RST_USERID = createField(DSL.name("rst_userid"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>eicn.route_application.memo</code>.
     */
    public final TableField<RouteApplicationRecord, String> MEMO = createField(DSL.name("memo"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.route_application.result</code>. NONE: 미처리, ACCEPT: 승인, REJECT: 반려
     */
    public final TableField<RouteApplicationRecord, RouteApplicationResult> RESULT = createField(DSL.name("result"), org.jooq.impl.SQLDataType.VARCHAR(6).nullable(false).defaultValue(org.jooq.impl.DSL.inline("NONE", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(kr.co.eicn.ippbx.meta.jooq.eicn.enums.RouteApplicationResult.class), this, "NONE: 미처리, ACCEPT: 승인, REJECT: 반려");

    /**
     * The column <code>eicn.route_application.uniqueid</code>.
     */
    public final TableField<RouteApplicationRecord, String> UNIQUEID = createField(DSL.name("uniqueid"), org.jooq.impl.SQLDataType.VARCHAR(32).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.route_application.record_file</code>.
     */
    public final TableField<RouteApplicationRecord, String> RECORD_FILE = createField(DSL.name("record_file"), org.jooq.impl.SQLDataType.VARCHAR(300).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.route_application.company_id</code>.
     */
    public final TableField<RouteApplicationRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.route_application</code> table reference
     */
    public RouteApplication() {
        this(DSL.name("route_application"), null);
    }

    /**
     * Create an aliased <code>eicn.route_application</code> table reference
     */
    public RouteApplication(String alias) {
        this(DSL.name(alias), ROUTE_APPLICATION);
    }

    /**
     * Create an aliased <code>eicn.route_application</code> table reference
     */
    public RouteApplication(Name alias) {
        this(alias, ROUTE_APPLICATION);
    }

    private RouteApplication(Name alias, Table<RouteApplicationRecord> aliased) {
        this(alias, aliased, null);
    }

    private RouteApplication(Name alias, Table<RouteApplicationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> RouteApplication(Table<O> child, ForeignKey<O, RouteApplicationRecord> key) {
        super(child, key, ROUTE_APPLICATION);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<RouteApplicationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ROUTE_APPLICATION;
    }

    @Override
    public UniqueKey<RouteApplicationRecord> getPrimaryKey() {
        return Keys.KEY_ROUTE_APPLICATION_PRIMARY;
    }

    @Override
    public List<UniqueKey<RouteApplicationRecord>> getKeys() {
        return Arrays.<UniqueKey<RouteApplicationRecord>>asList(Keys.KEY_ROUTE_APPLICATION_PRIMARY);
    }

    @Override
    public RouteApplication as(String alias) {
        return new RouteApplication(DSL.name(alias), this);
    }

    @Override
    public RouteApplication as(Name alias) {
        return new RouteApplication(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RouteApplication rename(String name) {
        return new RouteApplication(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RouteApplication rename(Name name) {
        return new RouteApplication(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Timestamp, Timestamp, RouteApplicationType, String, String, String, String, RouteApplicationResult, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
