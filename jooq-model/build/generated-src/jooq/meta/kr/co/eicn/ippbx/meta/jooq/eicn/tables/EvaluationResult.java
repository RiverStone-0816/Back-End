/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.enums.EvaluationResultProcessStatus;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.EvaluationResultRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 상담원평가 결과 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EvaluationResult extends TableImpl<EvaluationResultRecord> {

    private static final long serialVersionUID = 1890914542;

    /**
     * The reference instance of <code>eicn.evaluation_result</code>
     */
    public static final EvaluationResult EVALUATION_RESULT = new EvaluationResult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EvaluationResultRecord> getRecordType() {
        return EvaluationResultRecord.class;
    }

    /**
     * The column <code>eicn.evaluation_result.id</code>. SEQUENCE KEY
     */
    public final TableField<EvaluationResultRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.evaluation_result.evaluation_id</code>. 평가지 아이디
     */
    public final TableField<EvaluationResultRecord, Long> EVALUATION_ID = createField(DSL.name("evaluation_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "평가지 아이디");

    /**
     * The column <code>eicn.evaluation_result.cdr_id</code>. 녹취 아이디
     */
    public final TableField<EvaluationResultRecord, Integer> CDR_ID = createField(DSL.name("cdr_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "녹취 아이디");

    /**
     * The column <code>eicn.evaluation_result.evaluation_userid</code>. 평가자 아이디
     */
    public final TableField<EvaluationResultRecord, String> EVALUATION_USERID = createField(DSL.name("evaluation_userid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "평가자 아이디");

    /**
     * The column <code>eicn.evaluation_result.target_userid</code>. 평가대상 아이디
     */
    public final TableField<EvaluationResultRecord, String> TARGET_USERID = createField(DSL.name("target_userid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "평가대상 아이디");

    /**
     * The column <code>eicn.evaluation_result.evaluation_date</code>. 평가일시
     */
    public final TableField<EvaluationResultRecord, Timestamp> EVALUATION_DATE = createField(DSL.name("evaluation_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "평가일시");

    /**
     * The column <code>eicn.evaluation_result.memo</code>. 메모
     */
    public final TableField<EvaluationResultRecord, String> MEMO = createField(DSL.name("memo"), org.jooq.impl.SQLDataType.VARCHAR(3000), this, "메모");

    /**
     * The column <code>eicn.evaluation_result.challenge_memo</code>. 이의제기 내용
     */
    public final TableField<EvaluationResultRecord, String> CHALLENGE_MEMO = createField(DSL.name("challenge_memo"), org.jooq.impl.SQLDataType.VARCHAR(3000), this, "이의제기 내용");

    /**
     * The column <code>eicn.evaluation_result.result_transfer</code>. 결과 전송 유무
     */
    public final TableField<EvaluationResultRecord, Boolean> RESULT_TRANSFER = createField(DSL.name("result_transfer"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "결과 전송 유무");

    /**
     * The column <code>eicn.evaluation_result.update_userid</code>. 수정 아이디
     */
    public final TableField<EvaluationResultRecord, String> UPDATE_USERID = createField(DSL.name("update_userid"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "수정 아이디");

    /**
     * The column <code>eicn.evaluation_result.update_date</code>. 수정일시
     */
    public final TableField<EvaluationResultRecord, Timestamp> UPDATE_DATE = createField(DSL.name("update_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "수정일시");

    /**
     * The column <code>eicn.evaluation_result.process_status</code>. 진행상태(평가중, 이의제기, 평가완료)
     */
    public final TableField<EvaluationResultRecord, EvaluationResultProcessStatus> PROCESS_STATUS = createField(DSL.name("process_status"), org.jooq.impl.SQLDataType.VARCHAR(14).nullable(false).asEnumDataType(kr.co.eicn.ippbx.meta.jooq.eicn.enums.EvaluationResultProcessStatus.class), this, "진행상태(평가중, 이의제기, 평가완료)");

    /**
     * The column <code>eicn.evaluation_result.company_id</code>. 고객사 아이디
     */
    public final TableField<EvaluationResultRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "고객사 아이디");

    /**
     * Create a <code>eicn.evaluation_result</code> table reference
     */
    public EvaluationResult() {
        this(DSL.name("evaluation_result"), null);
    }

    /**
     * Create an aliased <code>eicn.evaluation_result</code> table reference
     */
    public EvaluationResult(String alias) {
        this(DSL.name(alias), EVALUATION_RESULT);
    }

    /**
     * Create an aliased <code>eicn.evaluation_result</code> table reference
     */
    public EvaluationResult(Name alias) {
        this(alias, EVALUATION_RESULT);
    }

    private EvaluationResult(Name alias, Table<EvaluationResultRecord> aliased) {
        this(alias, aliased, null);
    }

    private EvaluationResult(Name alias, Table<EvaluationResultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("상담원평가 결과 테이블"), TableOptions.table());
    }

    public <O extends Record> EvaluationResult(Table<O> child, ForeignKey<O, EvaluationResultRecord> key) {
        super(child, key, EVALUATION_RESULT);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EVALUATION_RESULT_CDR_ID, Indexes.EVALUATION_RESULT_FK_EVALUATION_RESULT_EVALUATION_FORM, Indexes.EVALUATION_RESULT_INSERT_DATE);
    }

    @Override
    public Identity<EvaluationResultRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EVALUATION_RESULT;
    }

    @Override
    public UniqueKey<EvaluationResultRecord> getPrimaryKey() {
        return Keys.KEY_EVALUATION_RESULT_PRIMARY;
    }

    @Override
    public List<UniqueKey<EvaluationResultRecord>> getKeys() {
        return Arrays.<UniqueKey<EvaluationResultRecord>>asList(Keys.KEY_EVALUATION_RESULT_PRIMARY);
    }

    @Override
    public EvaluationResult as(String alias) {
        return new EvaluationResult(DSL.name(alias), this);
    }

    @Override
    public EvaluationResult as(Name alias) {
        return new EvaluationResult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EvaluationResult rename(String name) {
        return new EvaluationResult(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EvaluationResult rename(Name name) {
        return new EvaluationResult(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Long, Integer, String, String, Timestamp, String, String, Boolean, String, Timestamp, EvaluationResultProcessStatus, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
