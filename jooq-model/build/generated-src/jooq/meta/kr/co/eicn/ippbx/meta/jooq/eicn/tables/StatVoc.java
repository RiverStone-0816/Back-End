/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.StatVocRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatVoc extends TableImpl<StatVocRecord> {

    private static final long serialVersionUID = 1467061284;

    /**
     * The reference instance of <code>eicn.stat_voc</code>
     */
    public static final StatVoc STAT_VOC = new StatVoc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatVocRecord> getRecordType() {
        return StatVocRecord.class;
    }

    /**
     * The column <code>eicn.stat_voc.seq</code>.
     */
    public final TableField<StatVocRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.stat_voc.stat_date</code>.
     */
    public final TableField<StatVocRecord, Date> STAT_DATE = createField(DSL.name("stat_date"), org.jooq.impl.SQLDataType.DATE.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-01-01", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>eicn.stat_voc.stat_hour</code>.
     */
    public final TableField<StatVocRecord, Byte> STAT_HOUR = createField(DSL.name("stat_hour"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>eicn.stat_voc.company_id</code>.
     */
    public final TableField<StatVocRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.stat_voc.userid</code>.
     */
    public final TableField<StatVocRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.stat_voc.group_id</code>.
     */
    public final TableField<StatVocRecord, Integer> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_voc.voc_id</code>.
     */
    public final TableField<StatVocRecord, Integer> VOC_ID = createField(DSL.name("voc_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_voc.button</code>.
     */
    public final TableField<StatVocRecord, String> BUTTON = createField(DSL.name("button"), org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.stat_voc.total</code>.
     */
    public final TableField<StatVocRecord, Integer> TOTAL = createField(DSL.name("total"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>eicn.stat_voc</code> table reference
     */
    public StatVoc() {
        this(DSL.name("stat_voc"), null);
    }

    /**
     * Create an aliased <code>eicn.stat_voc</code> table reference
     */
    public StatVoc(String alias) {
        this(DSL.name(alias), STAT_VOC);
    }

    /**
     * Create an aliased <code>eicn.stat_voc</code> table reference
     */
    public StatVoc(Name alias) {
        this(alias, STAT_VOC);
    }

    private StatVoc(Name alias, Table<StatVocRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatVoc(Name alias, Table<StatVocRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> StatVoc(Table<O> child, ForeignKey<O, StatVocRecord> key) {
        super(child, key, STAT_VOC);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STAT_VOC_BUTTON, Indexes.STAT_VOC_COMPANY_ID, Indexes.STAT_VOC_GROUP_ID, Indexes.STAT_VOC_STAT_DATE, Indexes.STAT_VOC_STAT_HOUR, Indexes.STAT_VOC_USERID, Indexes.STAT_VOC_VOC_ID);
    }

    @Override
    public Identity<StatVocRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STAT_VOC;
    }

    @Override
    public UniqueKey<StatVocRecord> getPrimaryKey() {
        return Keys.KEY_STAT_VOC_PRIMARY;
    }

    @Override
    public List<UniqueKey<StatVocRecord>> getKeys() {
        return Arrays.<UniqueKey<StatVocRecord>>asList(Keys.KEY_STAT_VOC_PRIMARY);
    }

    @Override
    public StatVoc as(String alias) {
        return new StatVoc(DSL.name(alias), this);
    }

    @Override
    public StatVoc as(Name alias) {
        return new StatVoc(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatVoc rename(String name) {
        return new StatVoc(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatVoc rename(Name name) {
        return new StatVoc(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Date, Byte, String, String, Integer, Integer, String, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
