/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables.records;


import kr.co.eicn.ippbx.meta.jooq.eicn.tables.RecordEnc;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 고객사의 암호화방식 정보테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecordEncRecord extends UpdatableRecordImpl<RecordEncRecord> implements Record4<String, String, Integer, String> {

    private static final long serialVersionUID = 670622963;

    /**
     * Setter for <code>eicn.record_enc.company_id</code>. 고객사 아이디
     */
    public RecordEncRecord setCompanyId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>eicn.record_enc.company_id</code>. 고객사 아이디
     */
    public String getCompanyId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>eicn.record_enc.enable</code>. 암호화방식 구분(N:사용안함, B:AES_256, Y:ZIP)
     */
    public RecordEncRecord setEnable(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>eicn.record_enc.enable</code>. 암호화방식 구분(N:사용안함, B:AES_256, Y:ZIP)
     */
    public String getEnable() {
        return (String) get(1);
    }

    /**
     * Setter for <code>eicn.record_enc.key_id</code>.
     */
    public RecordEncRecord setKeyId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>eicn.record_enc.key_id</code>.
     */
    public Integer getKeyId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>eicn.record_enc.extern_player</code>. 전용플레어 사용유무
     */
    public RecordEncRecord setExternPlayer(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>eicn.record_enc.extern_player</code>. 전용플레어 사용유무
     */
    public String getExternPlayer() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RecordEnc.RECORD_ENC.COMPANY_ID;
    }

    @Override
    public Field<String> field2() {
        return RecordEnc.RECORD_ENC.ENABLE;
    }

    @Override
    public Field<Integer> field3() {
        return RecordEnc.RECORD_ENC.KEY_ID;
    }

    @Override
    public Field<String> field4() {
        return RecordEnc.RECORD_ENC.EXTERN_PLAYER;
    }

    @Override
    public String component1() {
        return getCompanyId();
    }

    @Override
    public String component2() {
        return getEnable();
    }

    @Override
    public Integer component3() {
        return getKeyId();
    }

    @Override
    public String component4() {
        return getExternPlayer();
    }

    @Override
    public String value1() {
        return getCompanyId();
    }

    @Override
    public String value2() {
        return getEnable();
    }

    @Override
    public Integer value3() {
        return getKeyId();
    }

    @Override
    public String value4() {
        return getExternPlayer();
    }

    @Override
    public RecordEncRecord value1(String value) {
        setCompanyId(value);
        return this;
    }

    @Override
    public RecordEncRecord value2(String value) {
        setEnable(value);
        return this;
    }

    @Override
    public RecordEncRecord value3(Integer value) {
        setKeyId(value);
        return this;
    }

    @Override
    public RecordEncRecord value4(String value) {
        setExternPlayer(value);
        return this;
    }

    @Override
    public RecordEncRecord values(String value1, String value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecordEncRecord
     */
    public RecordEncRecord() {
        super(RecordEnc.RECORD_ENC);
    }

    /**
     * Create a detached, initialised RecordEncRecord
     */
    public RecordEncRecord(String companyId, String enable, Integer keyId, String externPlayer) {
        super(RecordEnc.RECORD_ENC);

        set(0, companyId);
        set(1, enable);
        set(2, keyId);
        set(3, externPlayer);
    }
}
