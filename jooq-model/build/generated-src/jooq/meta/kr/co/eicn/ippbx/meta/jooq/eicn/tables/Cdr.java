/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CdrRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cdr extends TableImpl<CdrRecord> {

    private static final long serialVersionUID = 885325508;

    /**
     * The reference instance of <code>eicn.cdr</code>
     */
    public static final Cdr CDR = new Cdr();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CdrRecord> getRecordType() {
        return CdrRecord.class;
    }

    /**
     * The column <code>eicn.cdr.recid</code>. Record ID
     */
    public final TableField<CdrRecord, UInteger> RECID = createField(DSL.name("recid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "Record ID");

    /**
     * The column <code>eicn.cdr.calldate</code>.
     */
    public final TableField<CdrRecord, Timestamp> CALLDATE = createField(DSL.name("calldate"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.cdr.clid</code>.
     */
    public final TableField<CdrRecord, String> CLID = createField(DSL.name("clid"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.src</code>.
     */
    public final TableField<CdrRecord, String> SRC = createField(DSL.name("src"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.dst</code>.
     */
    public final TableField<CdrRecord, String> DST = createField(DSL.name("dst"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.dcontext</code>.
     */
    public final TableField<CdrRecord, String> DCONTEXT = createField(DSL.name("dcontext"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.channel</code>.
     */
    public final TableField<CdrRecord, String> CHANNEL = createField(DSL.name("channel"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.dstchannel</code>.
     */
    public final TableField<CdrRecord, String> DSTCHANNEL = createField(DSL.name("dstchannel"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.lastapp</code>.
     */
    public final TableField<CdrRecord, String> LASTAPP = createField(DSL.name("lastapp"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.lastdata</code>.
     */
    public final TableField<CdrRecord, String> LASTDATA = createField(DSL.name("lastdata"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.duration</code>.
     */
    public final TableField<CdrRecord, Integer> DURATION = createField(DSL.name("duration"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.cdr.billsec</code>.
     */
    public final TableField<CdrRecord, Integer> BILLSEC = createField(DSL.name("billsec"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.cdr.disposition</code>.
     */
    public final TableField<CdrRecord, String> DISPOSITION = createField(DSL.name("disposition"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.amaflags</code>.
     */
    public final TableField<CdrRecord, Integer> AMAFLAGS = createField(DSL.name("amaflags"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.cdr.accountcode</code>.
     */
    public final TableField<CdrRecord, String> ACCOUNTCODE = createField(DSL.name("accountcode"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.uniqueid</code>.
     */
    public final TableField<CdrRecord, String> UNIQUEID = createField(DSL.name("uniqueid"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cdr.userfield</code>.
     */
    public final TableField<CdrRecord, String> USERFIELD = createField(DSL.name("userfield"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.cdr</code> table reference
     */
    public Cdr() {
        this(DSL.name("cdr"), null);
    }

    /**
     * Create an aliased <code>eicn.cdr</code> table reference
     */
    public Cdr(String alias) {
        this(DSL.name(alias), CDR);
    }

    /**
     * Create an aliased <code>eicn.cdr</code> table reference
     */
    public Cdr(Name alias) {
        this(alias, CDR);
    }

    private Cdr(Name alias, Table<CdrRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cdr(Name alias, Table<CdrRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Cdr(Table<O> child, ForeignKey<O, CdrRecord> key) {
        super(child, key, CDR);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CDR_ACCOUNTCODE, Indexes.CDR_CALLDATE, Indexes.CDR_DISPOSITION, Indexes.CDR_DST, Indexes.CDR_SRC, Indexes.CDR_UNIQUEID);
    }

    @Override
    public Identity<CdrRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_CDR;
    }

    @Override
    public UniqueKey<CdrRecord> getPrimaryKey() {
        return Keys.KEY_CDR_PRIMARY;
    }

    @Override
    public List<UniqueKey<CdrRecord>> getKeys() {
        return Arrays.<UniqueKey<CdrRecord>>asList(Keys.KEY_CDR_PRIMARY);
    }

    @Override
    public Cdr as(String alias) {
        return new Cdr(DSL.name(alias), this);
    }

    @Override
    public Cdr as(Name alias) {
        return new Cdr(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cdr rename(String name) {
        return new Cdr(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cdr rename(Name name) {
        return new Cdr(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<UInteger, Timestamp, String, String, String, String, String, String, String, String, Integer, Integer, String, Integer, String, String, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
