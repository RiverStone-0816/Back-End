/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CurrentConfMemberRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurrentConfMember extends TableImpl<CurrentConfMemberRecord> {

    private static final long serialVersionUID = -226554285;

    /**
     * The reference instance of <code>eicn.current_conf_member</code>
     */
    public static final CurrentConfMember CURRENT_CONF_MEMBER = new CurrentConfMember();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CurrentConfMemberRecord> getRecordType() {
        return CurrentConfMemberRecord.class;
    }

    /**
     * The column <code>eicn.current_conf_member.seq</code>.
     */
    public final TableField<CurrentConfMemberRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.current_conf_member.conf_key</code>.
     */
    public final TableField<CurrentConfMemberRecord, Integer> CONF_KEY = createField(DSL.name("conf_key"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.current_conf_member.room_number</code>.
     */
    public final TableField<CurrentConfMemberRecord, String> ROOM_NUMBER = createField(DSL.name("room_number"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_member.member_type</code>.
     */
    public final TableField<CurrentConfMemberRecord, String> MEMBER_TYPE = createField(DSL.name("member_type"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("I", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_member.member_name</code>.
     */
    public final TableField<CurrentConfMemberRecord, String> MEMBER_NAME = createField(DSL.name("member_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_member.member_number</code>.
     */
    public final TableField<CurrentConfMemberRecord, String> MEMBER_NUMBER = createField(DSL.name("member_number"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_member.is_chef</code>.
     */
    public final TableField<CurrentConfMemberRecord, String> IS_CHEF = createField(DSL.name("is_chef"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_member.is_attended</code>.
     */
    public final TableField<CurrentConfMemberRecord, String> IS_ATTENDED = createField(DSL.name("is_attended"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_member.company_id</code>.
     */
    public final TableField<CurrentConfMemberRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.current_conf_member</code> table reference
     */
    public CurrentConfMember() {
        this(DSL.name("current_conf_member"), null);
    }

    /**
     * Create an aliased <code>eicn.current_conf_member</code> table reference
     */
    public CurrentConfMember(String alias) {
        this(DSL.name(alias), CURRENT_CONF_MEMBER);
    }

    /**
     * Create an aliased <code>eicn.current_conf_member</code> table reference
     */
    public CurrentConfMember(Name alias) {
        this(alias, CURRENT_CONF_MEMBER);
    }

    private CurrentConfMember(Name alias, Table<CurrentConfMemberRecord> aliased) {
        this(alias, aliased, null);
    }

    private CurrentConfMember(Name alias, Table<CurrentConfMemberRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> CurrentConfMember(Table<O> child, ForeignKey<O, CurrentConfMemberRecord> key) {
        super(child, key, CURRENT_CONF_MEMBER);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CURRENT_CONF_MEMBER_COMPANY_ID, Indexes.CURRENT_CONF_MEMBER_CONF_KEY);
    }

    @Override
    public List<UniqueKey<CurrentConfMemberRecord>> getKeys() {
        return Arrays.<UniqueKey<CurrentConfMemberRecord>>asList(Keys.KEY_CURRENT_CONF_MEMBER_SEQ);
    }

    @Override
    public CurrentConfMember as(String alias) {
        return new CurrentConfMember(DSL.name(alias), this);
    }

    @Override
    public CurrentConfMember as(Name alias) {
        return new CurrentConfMember(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CurrentConfMember rename(String name) {
        return new CurrentConfMember(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CurrentConfMember rename(Name name) {
        return new CurrentConfMember(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, String, String, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
