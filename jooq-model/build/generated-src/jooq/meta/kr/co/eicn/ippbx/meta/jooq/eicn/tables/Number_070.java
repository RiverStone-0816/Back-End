/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.Number_070Record;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 070 번호관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Number_070 extends TableImpl<Number_070Record> {

    private static final long serialVersionUID = 1604743535;

    /**
     * The reference instance of <code>eicn.number_070</code>
     */
    public static final Number_070 NUMBER_070 = new Number_070();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Number_070Record> getRecordType() {
        return Number_070Record.class;
    }

    /**
     * The column <code>eicn.number_070.number</code>. 070번호
     */
    public final TableField<Number_070Record, String> NUMBER = createField(DSL.name("number"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "070번호");

    /**
     * The column <code>eicn.number_070.type</code>. 번호타입(0:헌트, 1:개인, 2:대표, 3:회의)
     */
    public final TableField<Number_070Record, Byte> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "번호타입(0:헌트, 1:개인, 2:대표, 3:회의)");

    /**
     * The column <code>eicn.number_070.status</code>. 상태(0:비사용, 1:사용)
     */
    public final TableField<Number_070Record, Byte> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "상태(0:비사용, 1:사용)");

    /**
     * The column <code>eicn.number_070.host</code>. 번호사용ip
     */
    public final TableField<Number_070Record, String> HOST = createField(DSL.name("host"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "번호사용ip");

    /**
     * The column <code>eicn.number_070.company_id</code>. 회사아아디
     */
    public final TableField<Number_070Record, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아아디");

    /**
     * The column <code>eicn.number_070.group_code</code>. 조직코드
     */
    public final TableField<Number_070Record, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000", org.jooq.impl.SQLDataType.CHAR)), this, "조직코드");

    /**
     * The column <code>eicn.number_070.group_tree_name</code>.
     */
    public final TableField<Number_070Record, String> GROUP_TREE_NAME = createField(DSL.name("group_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.number_070.group_level</code>.
     */
    public final TableField<Number_070Record, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.number_070.kind</code>. 070번호종류
     */
    public final TableField<Number_070Record, String> KIND = createField(DSL.name("kind"), org.jooq.impl.SQLDataType.CHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "070번호종류");

    /**
     * Create a <code>eicn.number_070</code> table reference
     */
    public Number_070() {
        this(DSL.name("number_070"), null);
    }

    /**
     * Create an aliased <code>eicn.number_070</code> table reference
     */
    public Number_070(String alias) {
        this(DSL.name(alias), NUMBER_070);
    }

    /**
     * Create an aliased <code>eicn.number_070</code> table reference
     */
    public Number_070(Name alias) {
        this(alias, NUMBER_070);
    }

    private Number_070(Name alias, Table<Number_070Record> aliased) {
        this(alias, aliased, null);
    }

    private Number_070(Name alias, Table<Number_070Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("070 번호관리 테이블"), TableOptions.table());
    }

    public <O extends Record> Number_070(Table<O> child, ForeignKey<O, Number_070Record> key) {
        super(child, key, NUMBER_070);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NUMBER_070_COMPANY_ID);
    }

    @Override
    public List<UniqueKey<Number_070Record>> getKeys() {
        return Arrays.<UniqueKey<Number_070Record>>asList(Keys.KEY_NUMBER_070_NUMBER);
    }

    @Override
    public Number_070 as(String alias) {
        return new Number_070(DSL.name(alias), this);
    }

    @Override
    public Number_070 as(Name alias) {
        return new Number_070(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Number_070 rename(String name) {
        return new Number_070(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Number_070 rename(Name name) {
        return new Number_070(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, Byte, Byte, String, String, String, String, Integer, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
