/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.SendCategoryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 발송 문구 유형 관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SendCategory extends TableImpl<SendCategoryRecord> {

    private static final long serialVersionUID = -2131136797;

    /**
     * The reference instance of <code>eicn.send_category</code>
     */
    public static final SendCategory SEND_CATEGORY = new SendCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SendCategoryRecord> getRecordType() {
        return SendCategoryRecord.class;
    }

    /**
     * The column <code>eicn.send_category.category_code</code>. 카테고리 코드
     */
    public final TableField<SendCategoryRecord, String> CATEGORY_CODE = createField(DSL.name("category_code"), org.jooq.impl.SQLDataType.CHAR(4).nullable(false), this, "카테고리 코드");

    /**
     * The column <code>eicn.send_category.category_type</code>. 카테고리 분류(S:SMS, F:FAX, E:EMAIL)
     */
    public final TableField<SendCategoryRecord, String> CATEGORY_TYPE = createField(DSL.name("category_type"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "카테고리 분류(S:SMS, F:FAX, E:EMAIL)");

    /**
     * The column <code>eicn.send_category.category_name</code>. 카테고리 명
     */
    public final TableField<SendCategoryRecord, String> CATEGORY_NAME = createField(DSL.name("category_name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "카테고리 명");

    /**
     * The column <code>eicn.send_category.company_id</code>. 고객사 아이디
     */
    public final TableField<SendCategoryRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "고객사 아이디");

    /**
     * The column <code>eicn.send_category.created_at</code>. 등록일
     */
    public final TableField<SendCategoryRecord, Timestamp> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "등록일");

    /**
     * Create a <code>eicn.send_category</code> table reference
     */
    public SendCategory() {
        this(DSL.name("send_category"), null);
    }

    /**
     * Create an aliased <code>eicn.send_category</code> table reference
     */
    public SendCategory(String alias) {
        this(DSL.name(alias), SEND_CATEGORY);
    }

    /**
     * Create an aliased <code>eicn.send_category</code> table reference
     */
    public SendCategory(Name alias) {
        this(alias, SEND_CATEGORY);
    }

    private SendCategory(Name alias, Table<SendCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private SendCategory(Name alias, Table<SendCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("발송 문구 유형 관리 테이블"), TableOptions.table());
    }

    public <O extends Record> SendCategory(Table<O> child, ForeignKey<O, SendCategoryRecord> key) {
        super(child, key, SEND_CATEGORY);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public UniqueKey<SendCategoryRecord> getPrimaryKey() {
        return Keys.KEY_SEND_CATEGORY_PRIMARY;
    }

    @Override
    public List<UniqueKey<SendCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<SendCategoryRecord>>asList(Keys.KEY_SEND_CATEGORY_PRIMARY);
    }

    @Override
    public SendCategory as(String alias) {
        return new SendCategory(DSL.name(alias), this);
    }

    @Override
    public SendCategory as(Name alias) {
        return new SendCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SendCategory rename(String name) {
        return new SendCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SendCategory rename(Name name) {
        return new SendCategory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
