/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.WebLoginHistoryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WebLoginHistory extends TableImpl<WebLoginHistoryRecord> {

    private static final long serialVersionUID = 158901946;

    /**
     * The reference instance of <code>eicn.web_login_history</code>
     */
    public static final WebLoginHistory WEB_LOGIN_HISTORY = new WebLoginHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WebLoginHistoryRecord> getRecordType() {
        return WebLoginHistoryRecord.class;
    }

    /**
     * The column <code>eicn.web_login_history.seq</code>.
     */
    public final TableField<WebLoginHistoryRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.web_login_history.login_date</code>.
     */
    public final TableField<WebLoginHistoryRecord, Timestamp> LOGIN_DATE = createField(DSL.name("login_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.web_login_history.logout_date</code>.
     */
    public final TableField<WebLoginHistoryRecord, Timestamp> LOGOUT_DATE = createField(DSL.name("logout_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.web_login_history.userid</code>.
     */
    public final TableField<WebLoginHistoryRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.web_login_history.user_name</code>.
     */
    public final TableField<WebLoginHistoryRecord, String> USER_NAME = createField(DSL.name("user_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.web_login_history.id_type</code>.
     */
    public final TableField<WebLoginHistoryRecord, String> ID_TYPE = createField(DSL.name("id_type"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.web_login_history.extension</code>.
     */
    public final TableField<WebLoginHistoryRecord, String> EXTENSION = createField(DSL.name("extension"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.web_login_history.part_group</code>.
     */
    public final TableField<WebLoginHistoryRecord, Integer> PART_GROUP = createField(DSL.name("part_group"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.web_login_history.login_result</code>.
     */
    public final TableField<WebLoginHistoryRecord, String> LOGIN_RESULT = createField(DSL.name("login_result"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.web_login_history.login_ip</code>.
     */
    public final TableField<WebLoginHistoryRecord, String> LOGIN_IP = createField(DSL.name("login_ip"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.web_login_history.company_id</code>.
     */
    public final TableField<WebLoginHistoryRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.web_login_history</code> table reference
     */
    public WebLoginHistory() {
        this(DSL.name("web_login_history"), null);
    }

    /**
     * Create an aliased <code>eicn.web_login_history</code> table reference
     */
    public WebLoginHistory(String alias) {
        this(DSL.name(alias), WEB_LOGIN_HISTORY);
    }

    /**
     * Create an aliased <code>eicn.web_login_history</code> table reference
     */
    public WebLoginHistory(Name alias) {
        this(alias, WEB_LOGIN_HISTORY);
    }

    private WebLoginHistory(Name alias, Table<WebLoginHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private WebLoginHistory(Name alias, Table<WebLoginHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> WebLoginHistory(Table<O> child, ForeignKey<O, WebLoginHistoryRecord> key) {
        super(child, key, WEB_LOGIN_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WEB_LOGIN_HISTORY_LOGIN_DATE, Indexes.WEB_LOGIN_HISTORY_USERID);
    }

    @Override
    public Identity<WebLoginHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WEB_LOGIN_HISTORY;
    }

    @Override
    public List<UniqueKey<WebLoginHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<WebLoginHistoryRecord>>asList(Keys.KEY_WEB_LOGIN_HISTORY_SEQ);
    }

    @Override
    public WebLoginHistory as(String alias) {
        return new WebLoginHistory(DSL.name(alias), this);
    }

    @Override
    public WebLoginHistory as(Name alias) {
        return new WebLoginHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WebLoginHistory rename(String name) {
        return new WebLoginHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WebLoginHistory rename(Name name) {
        return new WebLoginHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Timestamp, Timestamp, String, String, String, String, Integer, String, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
