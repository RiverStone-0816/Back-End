/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.VocListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VocList extends TableImpl<VocListRecord> {

    private static final long serialVersionUID = 133137056;

    /**
     * The reference instance of <code>eicn.voc_list</code>
     */
    public static final VocList VOC_LIST = new VocList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VocListRecord> getRecordType() {
        return VocListRecord.class;
    }

    /**
     * The column <code>eicn.voc_list.seq</code>.
     */
    public final TableField<VocListRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.voc_list.voc_name</code>.
     */
    public final TableField<VocListRecord, String> VOC_NAME = createField(DSL.name("voc_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.voc_list.sound_id</code>.
     */
    public final TableField<VocListRecord, Integer> SOUND_ID = createField(DSL.name("sound_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.voc_list.company_id</code>.
     */
    public final TableField<VocListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.voc_list.group_id</code>.
     */
    public final TableField<VocListRecord, Integer> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.voc_list.is_first</code>.
     */
    public final TableField<VocListRecord, String> IS_FIRST = createField(DSL.name("is_first"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * Create a <code>eicn.voc_list</code> table reference
     */
    public VocList() {
        this(DSL.name("voc_list"), null);
    }

    /**
     * Create an aliased <code>eicn.voc_list</code> table reference
     */
    public VocList(String alias) {
        this(DSL.name(alias), VOC_LIST);
    }

    /**
     * Create an aliased <code>eicn.voc_list</code> table reference
     */
    public VocList(Name alias) {
        this(alias, VOC_LIST);
    }

    private VocList(Name alias, Table<VocListRecord> aliased) {
        this(alias, aliased, null);
    }

    private VocList(Name alias, Table<VocListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> VocList(Table<O> child, ForeignKey<O, VocListRecord> key) {
        super(child, key, VOC_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<VocListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VOC_LIST;
    }

    @Override
    public List<UniqueKey<VocListRecord>> getKeys() {
        return Arrays.<UniqueKey<VocListRecord>>asList(Keys.KEY_VOC_LIST_SEQ);
    }

    @Override
    public VocList as(String alias) {
        return new VocList(DSL.name(alias), this);
    }

    @Override
    public VocList as(Name alias) {
        return new VocList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VocList rename(String name) {
        return new VocList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VocList rename(Name name) {
        return new VocList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Integer, String, Integer, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
