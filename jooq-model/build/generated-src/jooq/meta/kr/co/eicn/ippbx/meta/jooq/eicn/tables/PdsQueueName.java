/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PdsQueueNameRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * PDS 헌트관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PdsQueueName extends TableImpl<PdsQueueNameRecord> {

    private static final long serialVersionUID = -949237395;

    /**
     * The reference instance of <code>eicn.pds_queue_name</code>
     */
    public static final PdsQueueName PDS_QUEUE_NAME = new PdsQueueName();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PdsQueueNameRecord> getRecordType() {
        return PdsQueueNameRecord.class;
    }

    /**
     * The column <code>eicn.pds_queue_name.seq</code>. SEQ (데이터입력시자동증가)
     */
    public final TableField<PdsQueueNameRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER, this, "SEQ (데이터입력시자동증가)");

    /**
     * The column <code>eicn.pds_queue_name.name</code>. QUEUE 이름
     */
    public final TableField<PdsQueueNameRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "QUEUE 이름");

    /**
     * The column <code>eicn.pds_queue_name.han_name</code>. QUEUE 한글이름
     */
    public final TableField<PdsQueueNameRecord, String> HAN_NAME = createField(DSL.name("han_name"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "QUEUE 한글이름");

    /**
     * The column <code>eicn.pds_queue_name.sub_group</code>. 예비 QUEUE이름
     */
    public final TableField<PdsQueueNameRecord, String> SUB_GROUP = createField(DSL.name("sub_group"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "예비 QUEUE이름");

    /**
     * The column <code>eicn.pds_queue_name.queue_timeout</code>. QUEUE 대기타임아웃시간
     */
    public final TableField<PdsQueueNameRecord, Integer> QUEUE_TIMEOUT = createField(DSL.name("queue_timeout"), org.jooq.impl.SQLDataType.INTEGER, this, "QUEUE 대기타임아웃시간");

    /**
     * The column <code>eicn.pds_queue_name.strategy</code>. QUEUE 분배방식
     */
    public final TableField<PdsQueueNameRecord, String> STRATEGY = createField(DSL.name("strategy"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "QUEUE 분배방식");

    /**
     * The column <code>eicn.pds_queue_name.cnt</code>.
     */
    public final TableField<PdsQueueNameRecord, Integer> CNT = createField(DSL.name("cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.pds_queue_name.busy_context</code>. 콜백여부 사용시 해당컨텍스트명
     */
    public final TableField<PdsQueueNameRecord, String> BUSY_CONTEXT = createField(DSL.name("busy_context"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "콜백여부 사용시 해당컨텍스트명");

    /**
     * The column <code>eicn.pds_queue_name.host</code>. 해당 QUEUE 사용IP
     */
    public final TableField<PdsQueueNameRecord, String> HOST = createField(DSL.name("host"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "해당 QUEUE 사용IP");

    /**
     * The column <code>eicn.pds_queue_name.company_id</code>. 고객사 아이디
     */
    public final TableField<PdsQueueNameRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * Create a <code>eicn.pds_queue_name</code> table reference
     */
    public PdsQueueName() {
        this(DSL.name("pds_queue_name"), null);
    }

    /**
     * Create an aliased <code>eicn.pds_queue_name</code> table reference
     */
    public PdsQueueName(String alias) {
        this(DSL.name(alias), PDS_QUEUE_NAME);
    }

    /**
     * Create an aliased <code>eicn.pds_queue_name</code> table reference
     */
    public PdsQueueName(Name alias) {
        this(alias, PDS_QUEUE_NAME);
    }

    private PdsQueueName(Name alias, Table<PdsQueueNameRecord> aliased) {
        this(alias, aliased, null);
    }

    private PdsQueueName(Name alias, Table<PdsQueueNameRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("PDS 헌트관리 테이블"), TableOptions.table());
    }

    public <O extends Record> PdsQueueName(Table<O> child, ForeignKey<O, PdsQueueNameRecord> key) {
        super(child, key, PDS_QUEUE_NAME);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<UniqueKey<PdsQueueNameRecord>> getKeys() {
        return Arrays.<UniqueKey<PdsQueueNameRecord>>asList(Keys.KEY_PDS_QUEUE_NAME_NAME);
    }

    @Override
    public PdsQueueName as(String alias) {
        return new PdsQueueName(DSL.name(alias), this);
    }

    @Override
    public PdsQueueName as(Name alias) {
        return new PdsQueueName(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsQueueName rename(String name) {
        return new PdsQueueName(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsQueueName rename(Name name) {
        return new PdsQueueName(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, String, Integer, String, Integer, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
