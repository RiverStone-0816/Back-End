/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.TalkMemberListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 상담톡수신그룹 멤버정보 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TalkMemberList extends TableImpl<TalkMemberListRecord> {

    private static final long serialVersionUID = -493977737;

    /**
     * The reference instance of <code>eicn.talk_member_list</code>
     */
    public static final TalkMemberList TALK_MEMBER_LIST = new TalkMemberList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TalkMemberListRecord> getRecordType() {
        return TalkMemberListRecord.class;
    }

    /**
     * The column <code>eicn.talk_member_list.seq</code>. SEQUENCE KEY
     */
    public final TableField<TalkMemberListRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.talk_member_list.userid</code>. 상담원 아이디
     */
    public final TableField<TalkMemberListRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담원 아이디");

    /**
     * The column <code>eicn.talk_member_list.group_id</code>. 상담톡그룹 아이디
     */
    public final TableField<TalkMemberListRecord, Integer> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "상담톡그룹 아이디");

    /**
     * The column <code>eicn.talk_member_list.status</code>.
     */
    public final TableField<TalkMemberListRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.talk_member_list.company_id</code>. 고객사 아이디
     */
    public final TableField<TalkMemberListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * The column <code>eicn.talk_member_list.sender_key</code>. 상담톡키
     */
    public final TableField<TalkMemberListRecord, String> SENDER_KEY = createField(DSL.name("sender_key"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담톡키");

    /**
     * Create a <code>eicn.talk_member_list</code> table reference
     */
    public TalkMemberList() {
        this(DSL.name("talk_member_list"), null);
    }

    /**
     * Create an aliased <code>eicn.talk_member_list</code> table reference
     */
    public TalkMemberList(String alias) {
        this(DSL.name(alias), TALK_MEMBER_LIST);
    }

    /**
     * Create an aliased <code>eicn.talk_member_list</code> table reference
     */
    public TalkMemberList(Name alias) {
        this(alias, TALK_MEMBER_LIST);
    }

    private TalkMemberList(Name alias, Table<TalkMemberListRecord> aliased) {
        this(alias, aliased, null);
    }

    private TalkMemberList(Name alias, Table<TalkMemberListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("상담톡수신그룹 멤버정보 테이블"), TableOptions.table());
    }

    public <O extends Record> TalkMemberList(Table<O> child, ForeignKey<O, TalkMemberListRecord> key) {
        super(child, key, TALK_MEMBER_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<TalkMemberListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TALK_MEMBER_LIST;
    }

    @Override
    public List<UniqueKey<TalkMemberListRecord>> getKeys() {
        return Arrays.<UniqueKey<TalkMemberListRecord>>asList(Keys.KEY_TALK_MEMBER_LIST_SEQ);
    }

    @Override
    public TalkMemberList as(String alias) {
        return new TalkMemberList(DSL.name(alias), this);
    }

    @Override
    public TalkMemberList as(Name alias) {
        return new TalkMemberList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TalkMemberList rename(String name) {
        return new TalkMemberList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TalkMemberList rename(Name name) {
        return new TalkMemberList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Integer, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
