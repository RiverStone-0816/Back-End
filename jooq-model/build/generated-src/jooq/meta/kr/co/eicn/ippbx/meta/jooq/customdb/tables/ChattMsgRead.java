/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.customdb.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.customdb.Customdb;
import kr.co.eicn.ippbx.meta.jooq.customdb.Indexes;
import kr.co.eicn.ippbx.meta.jooq.customdb.tables.records.ChattMsgReadRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChattMsgRead extends TableImpl<ChattMsgReadRecord> {

    private static final long serialVersionUID = -1886254624;

    /**
     * The reference instance of <code>CUSTOMDB.chatt_msg_read</code>
     */
    public static final ChattMsgRead CHATT_MSG_READ = new ChattMsgRead();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChattMsgReadRecord> getRecordType() {
        return ChattMsgReadRecord.class;
    }

    /**
     * The column <code>CUSTOMDB.chatt_msg_read.message_id</code>.
     */
    public final TableField<ChattMsgReadRecord, String> MESSAGE_ID = createField(DSL.name("message_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_msg_read.room_id</code>.
     */
    public final TableField<ChattMsgReadRecord, String> ROOM_ID = createField(DSL.name("room_id"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_msg_read.userid</code>.
     */
    public final TableField<ChattMsgReadRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>CUSTOMDB.chatt_msg_read</code> table reference
     */
    public ChattMsgRead() {
        this(DSL.name("chatt_msg_read"), null);
    }

    /**
     * Create an aliased <code>CUSTOMDB.chatt_msg_read</code> table reference
     */
    public ChattMsgRead(String alias) {
        this(DSL.name(alias), CHATT_MSG_READ);
    }

    /**
     * Create an aliased <code>CUSTOMDB.chatt_msg_read</code> table reference
     */
    public ChattMsgRead(Name alias) {
        this(alias, CHATT_MSG_READ);
    }

    private ChattMsgRead(Name alias, Table<ChattMsgReadRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChattMsgRead(Name alias, Table<ChattMsgReadRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ChattMsgRead(Table<O> child, ForeignKey<O, ChattMsgReadRecord> key) {
        super(child, key, CHATT_MSG_READ);
    }

    @Override
    public Schema getSchema() {
        return Customdb.CUSTOMDB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CHATT_MSG_READ_MESSAGE_ID, Indexes.CHATT_MSG_READ_ROOM_ID, Indexes.CHATT_MSG_READ_USERID);
    }

    @Override
    public ChattMsgRead as(String alias) {
        return new ChattMsgRead(DSL.name(alias), this);
    }

    @Override
    public ChattMsgRead as(Name alias) {
        return new ChattMsgRead(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ChattMsgRead rename(String name) {
        return new ChattMsgRead(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ChattMsgRead rename(Name name) {
        return new ChattMsgRead(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
