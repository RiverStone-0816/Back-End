/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PdsMentRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PdsMent extends TableImpl<PdsMentRecord> {

    private static final long serialVersionUID = 1939397286;

    /**
     * The reference instance of <code>eicn.pds_ment</code>
     */
    public static final PdsMent PDS_MENT = new PdsMent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PdsMentRecord> getRecordType() {
        return PdsMentRecord.class;
    }

    /**
     * The column <code>eicn.pds_ment.seq</code>.
     */
    public final TableField<PdsMentRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.pds_ment.pds_seq</code>.
     */
    public final TableField<PdsMentRecord, Integer> PDS_SEQ = createField(DSL.name("pds_seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.pds_ment.ment_title</code>.
     */
    public final TableField<PdsMentRecord, String> MENT_TITLE = createField(DSL.name("ment_title"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.pds_ment.ment_text</code>.
     */
    public final TableField<PdsMentRecord, String> MENT_TEXT = createField(DSL.name("ment_text"), org.jooq.impl.SQLDataType.VARCHAR(5000).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.pds_ment</code> table reference
     */
    public PdsMent() {
        this(DSL.name("pds_ment"), null);
    }

    /**
     * Create an aliased <code>eicn.pds_ment</code> table reference
     */
    public PdsMent(String alias) {
        this(DSL.name(alias), PDS_MENT);
    }

    /**
     * Create an aliased <code>eicn.pds_ment</code> table reference
     */
    public PdsMent(Name alias) {
        this(alias, PDS_MENT);
    }

    private PdsMent(Name alias, Table<PdsMentRecord> aliased) {
        this(alias, aliased, null);
    }

    private PdsMent(Name alias, Table<PdsMentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PdsMent(Table<O> child, ForeignKey<O, PdsMentRecord> key) {
        super(child, key, PDS_MENT);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<PdsMentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PDS_MENT;
    }

    @Override
    public UniqueKey<PdsMentRecord> getPrimaryKey() {
        return Keys.KEY_PDS_MENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<PdsMentRecord>> getKeys() {
        return Arrays.<UniqueKey<PdsMentRecord>>asList(Keys.KEY_PDS_MENT_PRIMARY);
    }

    @Override
    public PdsMent as(String alias) {
        return new PdsMent(DSL.name(alias), this);
    }

    @Override
    public PdsMent as(Name alias) {
        return new PdsMent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsMent rename(String name) {
        return new PdsMent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsMent rename(Name name) {
        return new PdsMent(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
