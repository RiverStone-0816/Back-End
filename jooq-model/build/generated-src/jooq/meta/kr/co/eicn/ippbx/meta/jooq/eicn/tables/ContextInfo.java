/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.ContextInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * context 정보-asterisk dial plan 에서 사용하는 정보, 헌트/스케쥴 설정 등에서 사용
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContextInfo extends TableImpl<ContextInfoRecord> {

    private static final long serialVersionUID = 580270691;

    /**
     * The reference instance of <code>eicn.context_info</code>
     */
    public static final ContextInfo CONTEXT_INFO = new ContextInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContextInfoRecord> getRecordType() {
        return ContextInfoRecord.class;
    }

    /**
     * The column <code>eicn.context_info.seq</code>. AUTO_INCREMENT
     */
    public final TableField<ContextInfoRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "AUTO_INCREMENT");

    /**
     * The column <code>eicn.context_info.context</code>. context
     */
    public final TableField<ContextInfoRecord, String> CONTEXT = createField(DSL.name("context"), org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "context");

    /**
     * The column <code>eicn.context_info.name</code>. context명
     */
    public final TableField<ContextInfoRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "context명");

    /**
     * The column <code>eicn.context_info.company_id</code>. 고객사 아이디
     */
    public final TableField<ContextInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * The column <code>eicn.context_info.is_web_voice</code>. 웹보이스여부
     */
    public final TableField<ContextInfoRecord, String> IS_WEB_VOICE = createField(DSL.name("is_web_voice"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "웹보이스여부");

    /**
     * Create a <code>eicn.context_info</code> table reference
     */
    public ContextInfo() {
        this(DSL.name("context_info"), null);
    }

    /**
     * Create an aliased <code>eicn.context_info</code> table reference
     */
    public ContextInfo(String alias) {
        this(DSL.name(alias), CONTEXT_INFO);
    }

    /**
     * Create an aliased <code>eicn.context_info</code> table reference
     */
    public ContextInfo(Name alias) {
        this(alias, CONTEXT_INFO);
    }

    private ContextInfo(Name alias, Table<ContextInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContextInfo(Name alias, Table<ContextInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("context 정보-asterisk dial plan 에서 사용하는 정보, 헌트/스케쥴 설정 등에서 사용"), TableOptions.table());
    }

    public <O extends Record> ContextInfo(Table<O> child, ForeignKey<O, ContextInfoRecord> key) {
        super(child, key, CONTEXT_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<ContextInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONTEXT_INFO;
    }

    @Override
    public List<UniqueKey<ContextInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<ContextInfoRecord>>asList(Keys.KEY_CONTEXT_INFO_SEQ, Keys.KEY_CONTEXT_INFO_CONTEXT_INFO_PK);
    }

    @Override
    public ContextInfo as(String alias) {
        return new ContextInfo(DSL.name(alias), this);
    }

    @Override
    public ContextInfo as(Name alias) {
        return new ContextInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContextInfo rename(String name) {
        return new ContextInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ContextInfo rename(Name name) {
        return new ContextInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
