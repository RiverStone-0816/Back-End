/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.MaindbGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row21;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MaindbGroup extends TableImpl<MaindbGroupRecord> {

    private static final long serialVersionUID = -776335659;

    /**
     * The reference instance of <code>eicn.maindb_group</code>
     */
    public static final MaindbGroup MAINDB_GROUP = new MaindbGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MaindbGroupRecord> getRecordType() {
        return MaindbGroupRecord.class;
    }

    /**
     * The column <code>eicn.maindb_group.seq</code>.
     */
    public final TableField<MaindbGroupRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.maindb_group.name</code>. 그룹명
     */
    public final TableField<MaindbGroupRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "그룹명");

    /**
     * The column <code>eicn.maindb_group.total_cnt</code>. 데이터수
     */
    public final TableField<MaindbGroupRecord, Integer> TOTAL_CNT = createField(DSL.name("total_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "데이터수");

    /**
     * The column <code>eicn.maindb_group.maindb_type</code>. 고객정보유형
     */
    public final TableField<MaindbGroupRecord, Integer> MAINDB_TYPE = createField(DSL.name("maindb_type"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "고객정보유형");

    /**
     * The column <code>eicn.maindb_group.result_type</code>. 상담결과유형
     */
    public final TableField<MaindbGroupRecord, Integer> RESULT_TYPE = createField(DSL.name("result_type"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "상담결과유형");

    /**
     * The column <code>eicn.maindb_group.info</code>. 추가정보
     */
    public final TableField<MaindbGroupRecord, String> INFO = createField(DSL.name("info"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "추가정보");

    /**
     * The column <code>eicn.maindb_group.group_code</code>.
     */
    public final TableField<MaindbGroupRecord, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.maindb_group.group_tree_name</code>.
     */
    public final TableField<MaindbGroupRecord, String> GROUP_TREE_NAME = createField(DSL.name("group_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.maindb_group.group_level</code>.
     */
    public final TableField<MaindbGroupRecord, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.maindb_group.company_id</code>. 회사 아이디
     */
    public final TableField<MaindbGroupRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사 아이디");

    /**
     * The column <code>eicn.maindb_group.inbound_service</code>.
     */
    public final TableField<MaindbGroupRecord, String> INBOUND_SERVICE = createField(DSL.name("inbound_service"), org.jooq.impl.SQLDataType.VARCHAR(400).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.maindb_group.make_date</code>. 그룹생성일
     */
    public final TableField<MaindbGroupRecord, Timestamp> MAKE_DATE = createField(DSL.name("make_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2010-01-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "그룹생성일");

    /**
     * The column <code>eicn.maindb_group.last_upload_date</code>. 마지막업로드 날짜
     */
    public final TableField<MaindbGroupRecord, Timestamp> LAST_UPLOAD_DATE = createField(DSL.name("last_upload_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2010-01-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "마지막업로드 날짜");

    /**
     * The column <code>eicn.maindb_group.last_upload_status</code>. 마지막업로드 상태
     */
    public final TableField<MaindbGroupRecord, String> LAST_UPLOAD_STATUS = createField(DSL.name("last_upload_status"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "마지막업로드 상태");

    /**
     * The column <code>eicn.maindb_group.upload_try_cnt</code>. 업로드 횟수
     */
    public final TableField<MaindbGroupRecord, Integer> UPLOAD_TRY_CNT = createField(DSL.name("upload_try_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "업로드 횟수");

    /**
     * The column <code>eicn.maindb_group.last_upload_id</code>. 마지막 업로드아이디
     */
    public final TableField<MaindbGroupRecord, String> LAST_UPLOAD_ID = createField(DSL.name("last_upload_id"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "마지막 업로드아이디");

    /**
     * The column <code>eicn.maindb_group.last_upload_name</code>. 마지막 업로드파일명
     */
    public final TableField<MaindbGroupRecord, String> LAST_UPLOAD_NAME = createField(DSL.name("last_upload_name"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "마지막 업로드파일명");

    /**
     * The column <code>eicn.maindb_group.is_dup_use</code>. 체크여부(Y: 체크함, N:체크안함)
     */
    public final TableField<MaindbGroupRecord, String> IS_DUP_USE = createField(DSL.name("is_dup_use"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "체크여부(Y: 체크함, N:체크안함)");

    /**
     * The column <code>eicn.maindb_group.dup_key_kind</code>. 체크항목(FN: 전화번호+필수항목, F: 필수항목, N: 전화번호)
     */
    public final TableField<MaindbGroupRecord, String> DUP_KEY_KIND = createField(DSL.name("dup_key_kind"), org.jooq.impl.SQLDataType.CHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "체크항목(FN: 전화번호+필수항목, F: 필수항목, N: 전화번호)");

    /**
     * The column <code>eicn.maindb_group.dup_is_update</code>. 업로드시 처리방법(Y: 업데이트, N: 처리안함)
     */
    public final TableField<MaindbGroupRecord, String> DUP_IS_UPDATE = createField(DSL.name("dup_is_update"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "업로드시 처리방법(Y: 업데이트, N: 처리안함)");

    /**
     * The column <code>eicn.maindb_group.dup_need_field</code>.
     */
    public final TableField<MaindbGroupRecord, String> DUP_NEED_FIELD = createField(DSL.name("dup_need_field"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.maindb_group</code> table reference
     */
    public MaindbGroup() {
        this(DSL.name("maindb_group"), null);
    }

    /**
     * Create an aliased <code>eicn.maindb_group</code> table reference
     */
    public MaindbGroup(String alias) {
        this(DSL.name(alias), MAINDB_GROUP);
    }

    /**
     * Create an aliased <code>eicn.maindb_group</code> table reference
     */
    public MaindbGroup(Name alias) {
        this(alias, MAINDB_GROUP);
    }

    private MaindbGroup(Name alias, Table<MaindbGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private MaindbGroup(Name alias, Table<MaindbGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> MaindbGroup(Table<O> child, ForeignKey<O, MaindbGroupRecord> key) {
        super(child, key, MAINDB_GROUP);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MAINDB_GROUP_COMPANY_ID, Indexes.MAINDB_GROUP_NAME);
    }

    @Override
    public Identity<MaindbGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MAINDB_GROUP;
    }

    @Override
    public UniqueKey<MaindbGroupRecord> getPrimaryKey() {
        return Keys.KEY_MAINDB_GROUP_PRIMARY;
    }

    @Override
    public List<UniqueKey<MaindbGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<MaindbGroupRecord>>asList(Keys.KEY_MAINDB_GROUP_PRIMARY);
    }

    @Override
    public MaindbGroup as(String alias) {
        return new MaindbGroup(DSL.name(alias), this);
    }

    @Override
    public MaindbGroup as(Name alias) {
        return new MaindbGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MaindbGroup rename(String name) {
        return new MaindbGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MaindbGroup rename(Name name) {
        return new MaindbGroup(name, null);
    }

    // -------------------------------------------------------------------------
    // Row21 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row21<Integer, String, Integer, Integer, Integer, String, String, String, Integer, String, String, Timestamp, Timestamp, String, Integer, String, String, String, String, String, String> fieldsRow() {
        return (Row21) super.fieldsRow();
    }
}
