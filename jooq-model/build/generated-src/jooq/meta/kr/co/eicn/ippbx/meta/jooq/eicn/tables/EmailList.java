/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.EmailListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * 이메일이력관리
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailList extends TableImpl<EmailListRecord> {

    private static final long serialVersionUID = -351847866;

    /**
     * The reference instance of <code>eicn.email_list</code>
     */
    public static final EmailList EMAIL_LIST = new EmailList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmailListRecord> getRecordType() {
        return EmailListRecord.class;
    }

    /**
     * The column <code>eicn.email_list.id</code>.
     */
    public final TableField<EmailListRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>eicn.email_list.inserted_date</code>.
     */
    public final TableField<EmailListRecord, Timestamp> INSERTED_DATE = createField(DSL.name("inserted_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>eicn.email_list.message_number</code>.
     */
    public final TableField<EmailListRecord, UInteger> MESSAGE_NUMBER = createField(DSL.name("message_number"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>eicn.email_list.message_id</code>.
     */
    public final TableField<EmailListRecord, String> MESSAGE_ID = createField(DSL.name("message_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eicn.email_list.subject</code>.
     */
    public final TableField<EmailListRecord, String> SUBJECT = createField(DSL.name("subject"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eicn.email_list.from_name</code>.
     */
    public final TableField<EmailListRecord, String> FROM_NAME = createField(DSL.name("from_name"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>eicn.email_list.from_email</code>.
     */
    public final TableField<EmailListRecord, String> FROM_EMAIL = createField(DSL.name("from_email"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eicn.email_list.to_emails</code>.
     */
    public final TableField<EmailListRecord, String> TO_EMAILS = createField(DSL.name("to_emails"), org.jooq.impl.SQLDataType.VARCHAR(2000), this, "");

    /**
     * The column <code>eicn.email_list.cc_emails</code>.
     */
    public final TableField<EmailListRecord, String> CC_EMAILS = createField(DSL.name("cc_emails"), org.jooq.impl.SQLDataType.VARCHAR(2000), this, "");

    /**
     * The column <code>eicn.email_list.sent_date</code>.
     */
    public final TableField<EmailListRecord, Timestamp> SENT_DATE = createField(DSL.name("sent_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>eicn.email_list.is_attach</code>.
     */
    public final TableField<EmailListRecord, UByte> IS_ATTACH = createField(DSL.name("is_attach"), org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>eicn.email_list.userid</code>.
     */
    public final TableField<EmailListRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_list.userid_tr</code>.
     */
    public final TableField<EmailListRecord, String> USERID_TR = createField(DSL.name("userid_tr"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_list.custom_id</code>.
     */
    public final TableField<EmailListRecord, String> CUSTOM_ID = createField(DSL.name("custom_id"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_list.custom_name</code>.
     */
    public final TableField<EmailListRecord, String> CUSTOM_NAME = createField(DSL.name("custom_name"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_list.custom_phone</code>.
     */
    public final TableField<EmailListRecord, String> CUSTOM_PHONE = createField(DSL.name("custom_phone"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_list.custom_company_id</code>.
     */
    public final TableField<EmailListRecord, String> CUSTOM_COMPANY_ID = createField(DSL.name("custom_company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_list.custom_company_name</code>.
     */
    public final TableField<EmailListRecord, String> CUSTOM_COMPANY_NAME = createField(DSL.name("custom_company_name"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_list.result_date</code>.
     */
    public final TableField<EmailListRecord, Timestamp> RESULT_DATE = createField(DSL.name("result_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2018-04-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.email_list.result_service</code>.
     */
    public final TableField<EmailListRecord, String> RESULT_SERVICE = createField(DSL.name("result_service"), org.jooq.impl.SQLDataType.CHAR(5).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.email_list.result_kind</code>.
     */
    public final TableField<EmailListRecord, String> RESULT_KIND = createField(DSL.name("result_kind"), org.jooq.impl.SQLDataType.CHAR(5).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.email_list.result_code</code>.
     */
    public final TableField<EmailListRecord, String> RESULT_CODE = createField(DSL.name("result_code"), org.jooq.impl.SQLDataType.CHAR(5).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.email_list.result_memo</code>.
     */
    public final TableField<EmailListRecord, String> RESULT_MEMO = createField(DSL.name("result_memo"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_list.company_id</code>.
     */
    public final TableField<EmailListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.email_list</code> table reference
     */
    public EmailList() {
        this(DSL.name("email_list"), null);
    }

    /**
     * Create an aliased <code>eicn.email_list</code> table reference
     */
    public EmailList(String alias) {
        this(DSL.name(alias), EMAIL_LIST);
    }

    /**
     * Create an aliased <code>eicn.email_list</code> table reference
     */
    public EmailList(Name alias) {
        this(alias, EMAIL_LIST);
    }

    private EmailList(Name alias, Table<EmailListRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmailList(Name alias, Table<EmailListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("이메일이력관리"), TableOptions.table());
    }

    public <O extends Record> EmailList(Table<O> child, ForeignKey<O, EmailListRecord> key) {
        super(child, key, EMAIL_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EMAIL_LIST_COMPANY_ID, Indexes.EMAIL_LIST_CUSTOM_COMPANY_ID, Indexes.EMAIL_LIST_CUSTOM_COMPANY_NAME, Indexes.EMAIL_LIST_CUSTOM_ID, Indexes.EMAIL_LIST_CUSTOM_NAME, Indexes.EMAIL_LIST_INSERTED_DATE, Indexes.EMAIL_LIST_RESULT_CODE, Indexes.EMAIL_LIST_USERID, Indexes.EMAIL_LIST_USERID_TR);
    }

    @Override
    public UniqueKey<EmailListRecord> getPrimaryKey() {
        return Keys.KEY_EMAIL_LIST_PRIMARY;
    }

    @Override
    public List<UniqueKey<EmailListRecord>> getKeys() {
        return Arrays.<UniqueKey<EmailListRecord>>asList(Keys.KEY_EMAIL_LIST_PRIMARY);
    }

    @Override
    public EmailList as(String alias) {
        return new EmailList(DSL.name(alias), this);
    }

    @Override
    public EmailList as(Name alias) {
        return new EmailList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmailList rename(String name) {
        return new EmailList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EmailList rename(Name name) {
        return new EmailList(name, null);
    }
}
