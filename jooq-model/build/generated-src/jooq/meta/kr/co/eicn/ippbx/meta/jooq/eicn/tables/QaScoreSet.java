/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.QaScoreSetRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaScoreSet extends TableImpl<QaScoreSetRecord> {

    private static final long serialVersionUID = -1761031714;

    /**
     * The reference instance of <code>eicn.qa_score_set</code>
     */
    public static final QaScoreSet QA_SCORE_SET = new QaScoreSet();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaScoreSetRecord> getRecordType() {
        return QaScoreSetRecord.class;
    }

    /**
     * The column <code>eicn.qa_score_set.seq</code>.
     */
    public final TableField<QaScoreSetRecord, UInteger> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.qa_score_set.title</code>.
     */
    public final TableField<QaScoreSetRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>eicn.qa_score_set.company_id</code>.
     */
    public final TableField<QaScoreSetRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>eicn.qa_score_set.insert_userid</code>.
     */
    public final TableField<QaScoreSetRecord, String> INSERT_USERID = createField(DSL.name("insert_userid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>eicn.qa_score_set.insert_date</code>.
     */
    public final TableField<QaScoreSetRecord, Timestamp> INSERT_DATE = createField(DSL.name("insert_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>eicn.qa_score_set.update_userid</code>.
     */
    public final TableField<QaScoreSetRecord, String> UPDATE_USERID = createField(DSL.name("update_userid"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.qa_score_set.update_date</code>.
     */
    public final TableField<QaScoreSetRecord, Timestamp> UPDATE_DATE = createField(DSL.name("update_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>eicn.qa_score_set.deleted</code>.
     */
    public final TableField<QaScoreSetRecord, String> DELETED = createField(DSL.name("deleted"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * Create a <code>eicn.qa_score_set</code> table reference
     */
    public QaScoreSet() {
        this(DSL.name("qa_score_set"), null);
    }

    /**
     * Create an aliased <code>eicn.qa_score_set</code> table reference
     */
    public QaScoreSet(String alias) {
        this(DSL.name(alias), QA_SCORE_SET);
    }

    /**
     * Create an aliased <code>eicn.qa_score_set</code> table reference
     */
    public QaScoreSet(Name alias) {
        this(alias, QA_SCORE_SET);
    }

    private QaScoreSet(Name alias, Table<QaScoreSetRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaScoreSet(Name alias, Table<QaScoreSetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> QaScoreSet(Table<O> child, ForeignKey<O, QaScoreSetRecord> key) {
        super(child, key, QA_SCORE_SET);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<QaScoreSetRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_QA_SCORE_SET;
    }

    @Override
    public UniqueKey<QaScoreSetRecord> getPrimaryKey() {
        return Keys.KEY_QA_SCORE_SET_PRIMARY;
    }

    @Override
    public List<UniqueKey<QaScoreSetRecord>> getKeys() {
        return Arrays.<UniqueKey<QaScoreSetRecord>>asList(Keys.KEY_QA_SCORE_SET_PRIMARY);
    }

    @Override
    public QaScoreSet as(String alias) {
        return new QaScoreSet(DSL.name(alias), this);
    }

    @Override
    public QaScoreSet as(Name alias) {
        return new QaScoreSet(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaScoreSet rename(String name) {
        return new QaScoreSet(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaScoreSet rename(Name name) {
        return new QaScoreSet(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<UInteger, String, String, String, Timestamp, String, Timestamp, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
