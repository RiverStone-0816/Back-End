/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.MultichannelHomepageInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MultichannelHomepageInfo extends TableImpl<MultichannelHomepageInfoRecord> {

    private static final long serialVersionUID = 865262300;

    /**
     * The reference instance of <code>eicn.multichannel_homepage_info</code>
     */
    public static final MultichannelHomepageInfo MULTICHANNEL_HOMEPAGE_INFO = new MultichannelHomepageInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MultichannelHomepageInfoRecord> getRecordType() {
        return MultichannelHomepageInfoRecord.class;
    }

    /**
     * The column <code>eicn.multichannel_homepage_info.seq</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, UInteger> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.multichannel_homepage_info.config_id</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, UInteger> CONFIG_ID = createField(DSL.name("config_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>eicn.multichannel_homepage_info.service_name</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, String> SERVICE_NAME = createField(DSL.name("service_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.multichannel_homepage_info.write_url</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, String> WRITE_URL = createField(DSL.name("write_url"), org.jooq.impl.SQLDataType.VARCHAR(300).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.multichannel_homepage_info.inserted_date</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, Timestamp> INSERTED_DATE = createField(DSL.name("inserted_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.multichannel_homepage_info.board_write_date</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, String> BOARD_WRITE_DATE = createField(DSL.name("board_write_date"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.multichannel_homepage_info.board_key</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, String> BOARD_KEY = createField(DSL.name("board_key"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eicn.multichannel_homepage_info.board_subject</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, String> BOARD_SUBJECT = createField(DSL.name("board_subject"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eicn.multichannel_homepage_info.board_writer</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, String> BOARD_WRITER = createField(DSL.name("board_writer"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.multichannel_homepage_info.board_contents</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, String> BOARD_CONTENTS = createField(DSL.name("board_contents"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>eicn.multichannel_homepage_info.company_id</code>.
     */
    public final TableField<MultichannelHomepageInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.multichannel_homepage_info</code> table reference
     */
    public MultichannelHomepageInfo() {
        this(DSL.name("multichannel_homepage_info"), null);
    }

    /**
     * Create an aliased <code>eicn.multichannel_homepage_info</code> table reference
     */
    public MultichannelHomepageInfo(String alias) {
        this(DSL.name(alias), MULTICHANNEL_HOMEPAGE_INFO);
    }

    /**
     * Create an aliased <code>eicn.multichannel_homepage_info</code> table reference
     */
    public MultichannelHomepageInfo(Name alias) {
        this(alias, MULTICHANNEL_HOMEPAGE_INFO);
    }

    private MultichannelHomepageInfo(Name alias, Table<MultichannelHomepageInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private MultichannelHomepageInfo(Name alias, Table<MultichannelHomepageInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> MultichannelHomepageInfo(Table<O> child, ForeignKey<O, MultichannelHomepageInfoRecord> key) {
        super(child, key, MULTICHANNEL_HOMEPAGE_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<MultichannelHomepageInfoRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_MULTICHANNEL_HOMEPAGE_INFO;
    }

    @Override
    public UniqueKey<MultichannelHomepageInfoRecord> getPrimaryKey() {
        return Keys.KEY_MULTICHANNEL_HOMEPAGE_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<MultichannelHomepageInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<MultichannelHomepageInfoRecord>>asList(Keys.KEY_MULTICHANNEL_HOMEPAGE_INFO_PRIMARY);
    }

    @Override
    public MultichannelHomepageInfo as(String alias) {
        return new MultichannelHomepageInfo(DSL.name(alias), this);
    }

    @Override
    public MultichannelHomepageInfo as(Name alias) {
        return new MultichannelHomepageInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MultichannelHomepageInfo rename(String name) {
        return new MultichannelHomepageInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MultichannelHomepageInfo rename(Name name) {
        return new MultichannelHomepageInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<UInteger, UInteger, String, String, Timestamp, String, String, String, String, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
