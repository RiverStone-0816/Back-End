/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.EvaluationCategoryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 평가항목분류
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EvaluationCategory extends TableImpl<EvaluationCategoryRecord> {

    private static final long serialVersionUID = -1370334832;

    /**
     * The reference instance of <code>eicn.evaluation_category</code>
     */
    public static final EvaluationCategory EVALUATION_CATEGORY = new EvaluationCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EvaluationCategoryRecord> getRecordType() {
        return EvaluationCategoryRecord.class;
    }

    /**
     * The column <code>eicn.evaluation_category.id</code>. SEQUENCE KEY
     */
    public final TableField<EvaluationCategoryRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.evaluation_category.evaluation_id</code>. 평가지 아이디
     */
    public final TableField<EvaluationCategoryRecord, Long> EVALUATION_ID = createField(DSL.name("evaluation_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "평가지 아이디");

    /**
     * The column <code>eicn.evaluation_category.name</code>. 분류명
     */
    public final TableField<EvaluationCategoryRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "분류명");

    /**
     * The column <code>eicn.evaluation_category.company_id</code>. 회사 아이디
     */
    public final TableField<EvaluationCategoryRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사 아이디");

    /**
     * Create a <code>eicn.evaluation_category</code> table reference
     */
    public EvaluationCategory() {
        this(DSL.name("evaluation_category"), null);
    }

    /**
     * Create an aliased <code>eicn.evaluation_category</code> table reference
     */
    public EvaluationCategory(String alias) {
        this(DSL.name(alias), EVALUATION_CATEGORY);
    }

    /**
     * Create an aliased <code>eicn.evaluation_category</code> table reference
     */
    public EvaluationCategory(Name alias) {
        this(alias, EVALUATION_CATEGORY);
    }

    private EvaluationCategory(Name alias, Table<EvaluationCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private EvaluationCategory(Name alias, Table<EvaluationCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("평가항목분류"), TableOptions.table());
    }

    public <O extends Record> EvaluationCategory(Table<O> child, ForeignKey<O, EvaluationCategoryRecord> key) {
        super(child, key, EVALUATION_CATEGORY);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EVALUATION_CATEGORY_FK_EVALUATION_CATEGORY_EVALUATION_FORM);
    }

    @Override
    public Identity<EvaluationCategoryRecord, Long> getIdentity() {
        return Keys.IDENTITY_EVALUATION_CATEGORY;
    }

    @Override
    public UniqueKey<EvaluationCategoryRecord> getPrimaryKey() {
        return Keys.KEY_EVALUATION_CATEGORY_PRIMARY;
    }

    @Override
    public List<UniqueKey<EvaluationCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<EvaluationCategoryRecord>>asList(Keys.KEY_EVALUATION_CATEGORY_PRIMARY);
    }

    @Override
    public EvaluationCategory as(String alias) {
        return new EvaluationCategory(DSL.name(alias), this);
    }

    @Override
    public EvaluationCategory as(Name alias) {
        return new EvaluationCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EvaluationCategory rename(String name) {
        return new EvaluationCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EvaluationCategory rename(Name name) {
        return new EvaluationCategory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
