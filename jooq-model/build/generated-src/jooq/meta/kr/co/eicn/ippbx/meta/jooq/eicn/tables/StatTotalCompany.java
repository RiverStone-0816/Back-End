/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.StatTotalCompanyRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatTotalCompany extends TableImpl<StatTotalCompanyRecord> {

    private static final long serialVersionUID = -1308188419;

    /**
     * The reference instance of <code>eicn.stat_total_company</code>
     */
    public static final StatTotalCompany STAT_TOTAL_COMPANY = new StatTotalCompany();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatTotalCompanyRecord> getRecordType() {
        return StatTotalCompanyRecord.class;
    }

    /**
     * The column <code>eicn.stat_total_company.seq</code>.
     */
    public final TableField<StatTotalCompanyRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.stat_total_company.company_id</code>.
     */
    public final TableField<StatTotalCompanyRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.stat_total_company.pbx_host</code>.
     */
    public final TableField<StatTotalCompanyRecord, String> PBX_HOST = createField(DSL.name("pbx_host"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.stat_total_company.stat_date</code>.
     */
    public final TableField<StatTotalCompanyRecord, Date> STAT_DATE = createField(DSL.name("stat_date"), org.jooq.impl.SQLDataType.DATE.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-01-01", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>eicn.stat_total_company.stat_hour</code>.
     */
    public final TableField<StatTotalCompanyRecord, Byte> STAT_HOUR = createField(DSL.name("stat_hour"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>eicn.stat_total_company.total_cnt</code>.
     */
    public final TableField<StatTotalCompanyRecord, Integer> TOTAL_CNT = createField(DSL.name("total_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_total_company.in_cnt</code>.
     */
    public final TableField<StatTotalCompanyRecord, Integer> IN_CNT = createField(DSL.name("in_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_total_company.in_success</code>.
     */
    public final TableField<StatTotalCompanyRecord, Integer> IN_SUCCESS = createField(DSL.name("in_success"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_total_company.out_cnt</code>.
     */
    public final TableField<StatTotalCompanyRecord, Integer> OUT_CNT = createField(DSL.name("out_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_total_company.out_success</code>.
     */
    public final TableField<StatTotalCompanyRecord, Integer> OUT_SUCCESS = createField(DSL.name("out_success"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>eicn.stat_total_company</code> table reference
     */
    public StatTotalCompany() {
        this(DSL.name("stat_total_company"), null);
    }

    /**
     * Create an aliased <code>eicn.stat_total_company</code> table reference
     */
    public StatTotalCompany(String alias) {
        this(DSL.name(alias), STAT_TOTAL_COMPANY);
    }

    /**
     * Create an aliased <code>eicn.stat_total_company</code> table reference
     */
    public StatTotalCompany(Name alias) {
        this(alias, STAT_TOTAL_COMPANY);
    }

    private StatTotalCompany(Name alias, Table<StatTotalCompanyRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatTotalCompany(Name alias, Table<StatTotalCompanyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> StatTotalCompany(Table<O> child, ForeignKey<O, StatTotalCompanyRecord> key) {
        super(child, key, STAT_TOTAL_COMPANY);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STAT_TOTAL_COMPANY_COMPANY_ID, Indexes.STAT_TOTAL_COMPANY_STAT_DATE, Indexes.STAT_TOTAL_COMPANY_STAT_HOUR);
    }

    @Override
    public Identity<StatTotalCompanyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STAT_TOTAL_COMPANY;
    }

    @Override
    public UniqueKey<StatTotalCompanyRecord> getPrimaryKey() {
        return Keys.KEY_STAT_TOTAL_COMPANY_PRIMARY;
    }

    @Override
    public List<UniqueKey<StatTotalCompanyRecord>> getKeys() {
        return Arrays.<UniqueKey<StatTotalCompanyRecord>>asList(Keys.KEY_STAT_TOTAL_COMPANY_PRIMARY);
    }

    @Override
    public StatTotalCompany as(String alias) {
        return new StatTotalCompany(DSL.name(alias), this);
    }

    @Override
    public StatTotalCompany as(Name alias) {
        return new StatTotalCompany(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatTotalCompany rename(String name) {
        return new StatTotalCompany(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatTotalCompany rename(Name name) {
        return new StatTotalCompany(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, Date, Byte, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
