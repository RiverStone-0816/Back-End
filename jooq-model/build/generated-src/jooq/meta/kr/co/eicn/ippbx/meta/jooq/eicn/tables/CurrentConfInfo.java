/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CurrentConfInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurrentConfInfo extends TableImpl<CurrentConfInfoRecord> {

    private static final long serialVersionUID = -1753867074;

    /**
     * The reference instance of <code>eicn.current_conf_info</code>
     */
    public static final CurrentConfInfo CURRENT_CONF_INFO = new CurrentConfInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CurrentConfInfoRecord> getRecordType() {
        return CurrentConfInfoRecord.class;
    }

    /**
     * The column <code>eicn.current_conf_info.conf_key</code>.
     */
    public final TableField<CurrentConfInfoRecord, Integer> CONF_KEY = createField(DSL.name("conf_key"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.current_conf_info.status</code>.
     */
    public final TableField<CurrentConfInfoRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("A", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_info.start_date</code>.
     */
    public final TableField<CurrentConfInfoRecord, Timestamp> START_DATE = createField(DSL.name("start_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.current_conf_info.end_date</code>.
     */
    public final TableField<CurrentConfInfoRecord, Timestamp> END_DATE = createField(DSL.name("end_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.current_conf_info.room_number</code>.
     */
    public final TableField<CurrentConfInfoRecord, String> ROOM_NUMBER = createField(DSL.name("room_number"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_info.conf_name</code>.
     */
    public final TableField<CurrentConfInfoRecord, String> CONF_NAME = createField(DSL.name("conf_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_info.conf_type</code>.
     */
    public final TableField<CurrentConfInfoRecord, String> CONF_TYPE = createField(DSL.name("conf_type"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_info.conf_passwd</code>.
     */
    public final TableField<CurrentConfInfoRecord, String> CONF_PASSWD = createField(DSL.name("conf_passwd"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_info.reserve_date</code>.
     */
    public final TableField<CurrentConfInfoRecord, Date> RESERVE_DATE = createField(DSL.name("reserve_date"), org.jooq.impl.SQLDataType.DATE.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-01-01", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>eicn.current_conf_info.reserve_fromtime</code>.
     */
    public final TableField<CurrentConfInfoRecord, Integer> RESERVE_FROMTIME = createField(DSL.name("reserve_fromtime"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.current_conf_info.reserve_totime</code>.
     */
    public final TableField<CurrentConfInfoRecord, Integer> RESERVE_TOTIME = createField(DSL.name("reserve_totime"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.current_conf_info.reserve_admin</code>.
     */
    public final TableField<CurrentConfInfoRecord, String> RESERVE_ADMIN = createField(DSL.name("reserve_admin"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_info.conf_sound</code>.
     */
    public final TableField<CurrentConfInfoRecord, Integer> CONF_SOUND = createField(DSL.name("conf_sound"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.current_conf_info.conf_cid</code>.
     */
    public final TableField<CurrentConfInfoRecord, String> CONF_CID = createField(DSL.name("conf_cid"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_info.is_record</code>.
     */
    public final TableField<CurrentConfInfoRecord, String> IS_RECORD = createField(DSL.name("is_record"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("S", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_info.is_machine_detect</code>.
     */
    public final TableField<CurrentConfInfoRecord, String> IS_MACHINE_DETECT = createField(DSL.name("is_machine_detect"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("Y", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.current_conf_info.company_id</code>.
     */
    public final TableField<CurrentConfInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.current_conf_info</code> table reference
     */
    public CurrentConfInfo() {
        this(DSL.name("current_conf_info"), null);
    }

    /**
     * Create an aliased <code>eicn.current_conf_info</code> table reference
     */
    public CurrentConfInfo(String alias) {
        this(DSL.name(alias), CURRENT_CONF_INFO);
    }

    /**
     * Create an aliased <code>eicn.current_conf_info</code> table reference
     */
    public CurrentConfInfo(Name alias) {
        this(alias, CURRENT_CONF_INFO);
    }

    private CurrentConfInfo(Name alias, Table<CurrentConfInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CurrentConfInfo(Name alias, Table<CurrentConfInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> CurrentConfInfo(Table<O> child, ForeignKey<O, CurrentConfInfoRecord> key) {
        super(child, key, CURRENT_CONF_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CURRENT_CONF_INFO_COMPANY_ID);
    }

    @Override
    public List<UniqueKey<CurrentConfInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<CurrentConfInfoRecord>>asList(Keys.KEY_CURRENT_CONF_INFO_CONF_KEY);
    }

    @Override
    public CurrentConfInfo as(String alias) {
        return new CurrentConfInfo(DSL.name(alias), this);
    }

    @Override
    public CurrentConfInfo as(Name alias) {
        return new CurrentConfInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CurrentConfInfo rename(String name) {
        return new CurrentConfInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CurrentConfInfo rename(Name name) {
        return new CurrentConfInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<Integer, String, Timestamp, Timestamp, String, String, String, String, Date, Integer, Integer, String, Integer, String, String, String, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
