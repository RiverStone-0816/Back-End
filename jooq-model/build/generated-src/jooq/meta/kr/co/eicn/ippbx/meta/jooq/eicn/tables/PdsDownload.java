/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PdsDownloadRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PdsDownload extends TableImpl<PdsDownloadRecord> {

    private static final long serialVersionUID = 1749995728;

    /**
     * The reference instance of <code>eicn.pds_download</code>
     */
    public static final PdsDownload PDS_DOWNLOAD = new PdsDownload();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PdsDownloadRecord> getRecordType() {
        return PdsDownloadRecord.class;
    }

    /**
     * The column <code>eicn.pds_download.seq</code>.
     */
    public final TableField<PdsDownloadRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.pds_download.request_date</code>.
     */
    public final TableField<PdsDownloadRecord, Timestamp> REQUEST_DATE = createField(DSL.name("request_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2010-01-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.pds_download.complete_date</code>.
     */
    public final TableField<PdsDownloadRecord, Timestamp> COMPLETE_DATE = createField(DSL.name("complete_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2010-01-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.pds_download.down_date</code>.
     */
    public final TableField<PdsDownloadRecord, Timestamp> DOWN_DATE = createField(DSL.name("down_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2010-01-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.pds_download.pds_seq</code>.
     */
    public final TableField<PdsDownloadRecord, Integer> PDS_SEQ = createField(DSL.name("pds_seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.pds_download.down_file_name</code>.
     */
    public final TableField<PdsDownloadRecord, String> DOWN_FILE_NAME = createField(DSL.name("down_file_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.pds_download.down_condition</code>.
     */
    public final TableField<PdsDownloadRecord, String> DOWN_CONDITION = createField(DSL.name("down_condition"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.pds_download.down_where</code>.
     */
    public final TableField<PdsDownloadRecord, String> DOWN_WHERE = createField(DSL.name("down_where"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.pds_download.status</code>.
     */
    public final TableField<PdsDownloadRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("R", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.pds_download.areacode</code>.
     */
    public final TableField<PdsDownloadRecord, Integer> AREACODE = createField(DSL.name("areacode"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.pds_download.branchcode</code>.
     */
    public final TableField<PdsDownloadRecord, Integer> BRANCHCODE = createField(DSL.name("branchcode"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.pds_download.company_id</code>.
     */
    public final TableField<PdsDownloadRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.pds_download</code> table reference
     */
    public PdsDownload() {
        this(DSL.name("pds_download"), null);
    }

    /**
     * Create an aliased <code>eicn.pds_download</code> table reference
     */
    public PdsDownload(String alias) {
        this(DSL.name(alias), PDS_DOWNLOAD);
    }

    /**
     * Create an aliased <code>eicn.pds_download</code> table reference
     */
    public PdsDownload(Name alias) {
        this(alias, PDS_DOWNLOAD);
    }

    private PdsDownload(Name alias, Table<PdsDownloadRecord> aliased) {
        this(alias, aliased, null);
    }

    private PdsDownload(Name alias, Table<PdsDownloadRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PdsDownload(Table<O> child, ForeignKey<O, PdsDownloadRecord> key) {
        super(child, key, PDS_DOWNLOAD);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<PdsDownloadRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PDS_DOWNLOAD;
    }

    @Override
    public UniqueKey<PdsDownloadRecord> getPrimaryKey() {
        return Keys.KEY_PDS_DOWNLOAD_PRIMARY;
    }

    @Override
    public List<UniqueKey<PdsDownloadRecord>> getKeys() {
        return Arrays.<UniqueKey<PdsDownloadRecord>>asList(Keys.KEY_PDS_DOWNLOAD_PRIMARY);
    }

    @Override
    public PdsDownload as(String alias) {
        return new PdsDownload(DSL.name(alias), this);
    }

    @Override
    public PdsDownload as(Name alias) {
        return new PdsDownload(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsDownload rename(String name) {
        return new PdsDownload(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsDownload rename(Name name) {
        return new PdsDownload(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Timestamp, Timestamp, Timestamp, Integer, String, String, String, String, Integer, Integer, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
