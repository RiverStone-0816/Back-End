/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables.records;


import kr.co.eicn.ippbx.meta.jooq.eicn.tables.DaemonInfo;

import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DaemonInfoRecord extends TableRecordImpl<DaemonInfoRecord> implements Record12<String, String, String, String, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 209328035;

    /**
     * Setter for <code>eicn.daemon_info.id</code>. 데몬아이디
     */
    public DaemonInfoRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.id</code>. 데몬아이디
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>eicn.daemon_info.type</code>. 데몬타입
     */
    public DaemonInfoRecord setType(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.type</code>. 데몬타입
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>eicn.daemon_info.name</code>. 데몬이름
     */
    public DaemonInfoRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.name</code>. 데몬이름
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>eicn.daemon_info.port</code>. Listening 데몬포트
     */
    public DaemonInfoRecord setPort(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.port</code>. Listening 데몬포트
     */
    public String getPort() {
        return (String) get(3);
    }

    /**
     * Setter for <code>eicn.daemon_info.protocol</code>. 프로토콜
     */
    public DaemonInfoRecord setProtocol(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.protocol</code>. 프로토콜
     */
    public String getProtocol() {
        return (String) get(4);
    }

    /**
     * Setter for <code>eicn.daemon_info.command1</code>. 데몬스타트SHELL
     */
    public DaemonInfoRecord setCommand1(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.command1</code>. 데몬스타트SHELL
     */
    public String getCommand1() {
        return (String) get(5);
    }

    /**
     * Setter for <code>eicn.daemon_info.command2</code>. 데몬스탑SHELL
     */
    public DaemonInfoRecord setCommand2(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.command2</code>. 데몬스탑SHELL
     */
    public String getCommand2() {
        return (String) get(6);
    }

    /**
     * Setter for <code>eicn.daemon_info.command3</code>. 데몬리스타트SHELL
     */
    public DaemonInfoRecord setCommand3(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.command3</code>. 데몬리스타트SHELL
     */
    public String getCommand3() {
        return (String) get(7);
    }

    /**
     * Setter for <code>eicn.daemon_info.is_use</code>. 사용유무
     */
    public DaemonInfoRecord setIsUse(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.is_use</code>. 사용유무
     */
    public String getIsUse() {
        return (String) get(8);
    }

    /**
     * Setter for <code>eicn.daemon_info.socket_url_in</code>. PC화면에서접속시 외부IP로 접근이 불가할경우 socket url
     */
    public DaemonInfoRecord setSocketUrlIn(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.socket_url_in</code>. PC화면에서접속시 외부IP로 접근이 불가할경우 socket url
     */
    public String getSocketUrlIn() {
        return (String) get(9);
    }

    /**
     * Setter for <code>eicn.daemon_info.socket_url_out</code>. PC화면에서접속시 외부IP로 접근이 가능할경우 socket url
     */
    public DaemonInfoRecord setSocketUrlOut(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.socket_url_out</code>. PC화면에서접속시 외부IP로 접근이 가능할경우 socket url
     */
    public String getSocketUrlOut() {
        return (String) get(10);
    }

    /**
     * Setter for <code>eicn.daemon_info.port_connector</code>. 다른데몬과 통신할경우 Listening 할 포트
     */
    public DaemonInfoRecord setPortConnector(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>eicn.daemon_info.port_connector</code>. 다른데몬과 통신할경우 Listening 할 포트
     */
    public String getPortConnector() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, String, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<String, String, String, String, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DaemonInfo.DAEMON_INFO.ID;
    }

    @Override
    public Field<String> field2() {
        return DaemonInfo.DAEMON_INFO.TYPE;
    }

    @Override
    public Field<String> field3() {
        return DaemonInfo.DAEMON_INFO.NAME;
    }

    @Override
    public Field<String> field4() {
        return DaemonInfo.DAEMON_INFO.PORT;
    }

    @Override
    public Field<String> field5() {
        return DaemonInfo.DAEMON_INFO.PROTOCOL;
    }

    @Override
    public Field<String> field6() {
        return DaemonInfo.DAEMON_INFO.COMMAND1;
    }

    @Override
    public Field<String> field7() {
        return DaemonInfo.DAEMON_INFO.COMMAND2;
    }

    @Override
    public Field<String> field8() {
        return DaemonInfo.DAEMON_INFO.COMMAND3;
    }

    @Override
    public Field<String> field9() {
        return DaemonInfo.DAEMON_INFO.IS_USE;
    }

    @Override
    public Field<String> field10() {
        return DaemonInfo.DAEMON_INFO.SOCKET_URL_IN;
    }

    @Override
    public Field<String> field11() {
        return DaemonInfo.DAEMON_INFO.SOCKET_URL_OUT;
    }

    @Override
    public Field<String> field12() {
        return DaemonInfo.DAEMON_INFO.PORT_CONNECTOR;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getPort();
    }

    @Override
    public String component5() {
        return getProtocol();
    }

    @Override
    public String component6() {
        return getCommand1();
    }

    @Override
    public String component7() {
        return getCommand2();
    }

    @Override
    public String component8() {
        return getCommand3();
    }

    @Override
    public String component9() {
        return getIsUse();
    }

    @Override
    public String component10() {
        return getSocketUrlIn();
    }

    @Override
    public String component11() {
        return getSocketUrlOut();
    }

    @Override
    public String component12() {
        return getPortConnector();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getPort();
    }

    @Override
    public String value5() {
        return getProtocol();
    }

    @Override
    public String value6() {
        return getCommand1();
    }

    @Override
    public String value7() {
        return getCommand2();
    }

    @Override
    public String value8() {
        return getCommand3();
    }

    @Override
    public String value9() {
        return getIsUse();
    }

    @Override
    public String value10() {
        return getSocketUrlIn();
    }

    @Override
    public String value11() {
        return getSocketUrlOut();
    }

    @Override
    public String value12() {
        return getPortConnector();
    }

    @Override
    public DaemonInfoRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value2(String value) {
        setType(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value4(String value) {
        setPort(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value5(String value) {
        setProtocol(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value6(String value) {
        setCommand1(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value7(String value) {
        setCommand2(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value8(String value) {
        setCommand3(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value9(String value) {
        setIsUse(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value10(String value) {
        setSocketUrlIn(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value11(String value) {
        setSocketUrlOut(value);
        return this;
    }

    @Override
    public DaemonInfoRecord value12(String value) {
        setPortConnector(value);
        return this;
    }

    @Override
    public DaemonInfoRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DaemonInfoRecord
     */
    public DaemonInfoRecord() {
        super(DaemonInfo.DAEMON_INFO);
    }

    /**
     * Create a detached, initialised DaemonInfoRecord
     */
    public DaemonInfoRecord(String id, String type, String name, String port, String protocol, String command1, String command2, String command3, String isUse, String socketUrlIn, String socketUrlOut, String portConnector) {
        super(DaemonInfo.DAEMON_INFO);

        set(0, id);
        set(1, type);
        set(2, name);
        set(3, port);
        set(4, protocol);
        set(5, command1);
        set(6, command2);
        set(7, command3);
        set(8, isUse);
        set(9, socketUrlIn);
        set(10, socketUrlOut);
        set(11, portConnector);
    }
}
