/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.SendMessageTemplateRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * SMS 발송 문구
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SendMessageTemplate extends TableImpl<SendMessageTemplateRecord> {

    private static final long serialVersionUID = -1036719271;

    /**
     * The reference instance of <code>eicn.send_message_template</code>
     */
    public static final SendMessageTemplate SEND_MESSAGE_TEMPLATE = new SendMessageTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SendMessageTemplateRecord> getRecordType() {
        return SendMessageTemplateRecord.class;
    }

    /**
     * The column <code>eicn.send_message_template.id</code>.
     */
    public final TableField<SendMessageTemplateRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.send_message_template.category_code</code>. 유형
     */
    public final TableField<SendMessageTemplateRecord, String> CATEGORY_CODE = createField(DSL.name("category_code"), org.jooq.impl.SQLDataType.CHAR(4).nullable(false), this, "유형");

    /**
     * The column <code>eicn.send_message_template.content</code>. 메세지
     */
    public final TableField<SendMessageTemplateRecord, String> CONTENT = createField(DSL.name("content"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "메세지");

    /**
     * The column <code>eicn.send_message_template.company_id</code>. 고객사 아이디
     */
    public final TableField<SendMessageTemplateRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "고객사 아이디");

    /**
     * The column <code>eicn.send_message_template.created_at</code>. 등록일
     */
    public final TableField<SendMessageTemplateRecord, Timestamp> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "등록일");

    /**
     * Create a <code>eicn.send_message_template</code> table reference
     */
    public SendMessageTemplate() {
        this(DSL.name("send_message_template"), null);
    }

    /**
     * Create an aliased <code>eicn.send_message_template</code> table reference
     */
    public SendMessageTemplate(String alias) {
        this(DSL.name(alias), SEND_MESSAGE_TEMPLATE);
    }

    /**
     * Create an aliased <code>eicn.send_message_template</code> table reference
     */
    public SendMessageTemplate(Name alias) {
        this(alias, SEND_MESSAGE_TEMPLATE);
    }

    private SendMessageTemplate(Name alias, Table<SendMessageTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private SendMessageTemplate(Name alias, Table<SendMessageTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("SMS 발송 문구"), TableOptions.table());
    }

    public <O extends Record> SendMessageTemplate(Table<O> child, ForeignKey<O, SendMessageTemplateRecord> key) {
        super(child, key, SEND_MESSAGE_TEMPLATE);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SEND_MESSAGE_TEMPLATE_FK_SEND_CATEGORY_CODE_SEND_MESSAGE_TEMPLATE_CATEGORY_CODE);
    }

    @Override
    public Identity<SendMessageTemplateRecord, Long> getIdentity() {
        return Keys.IDENTITY_SEND_MESSAGE_TEMPLATE;
    }

    @Override
    public UniqueKey<SendMessageTemplateRecord> getPrimaryKey() {
        return Keys.KEY_SEND_MESSAGE_TEMPLATE_PRIMARY;
    }

    @Override
    public List<UniqueKey<SendMessageTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<SendMessageTemplateRecord>>asList(Keys.KEY_SEND_MESSAGE_TEMPLATE_PRIMARY);
    }

    @Override
    public SendMessageTemplate as(String alias) {
        return new SendMessageTemplate(DSL.name(alias), this);
    }

    @Override
    public SendMessageTemplate as(Name alias) {
        return new SendMessageTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SendMessageTemplate rename(String name) {
        return new SendMessageTemplate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SendMessageTemplate rename(Name name) {
        return new SendMessageTemplate(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
