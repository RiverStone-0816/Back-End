/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.statdb.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.statdb.Indexes;
import kr.co.eicn.ippbx.meta.jooq.statdb.Keys;
import kr.co.eicn.ippbx.meta.jooq.statdb.Statdb;
import kr.co.eicn.ippbx.meta.jooq.statdb.tables.records.StatQueueWaitRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 헌트대기자수통계 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatQueueWait extends TableImpl<StatQueueWaitRecord> {

    private static final long serialVersionUID = 45148229;

    /**
     * The reference instance of <code>STATDB.stat_queue_wait</code>
     */
    public static final StatQueueWait STAT_QUEUE_WAIT = new StatQueueWait();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatQueueWaitRecord> getRecordType() {
        return StatQueueWaitRecord.class;
    }

    /**
     * The column <code>STATDB.stat_queue_wait.seq</code>. 고유키
     */
    public final TableField<StatQueueWaitRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "고유키");

    /**
     * The column <code>STATDB.stat_queue_wait.company_id</code>. 회사 ID
     */
    public final TableField<StatQueueWaitRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사 ID");

    /**
     * The column <code>STATDB.stat_queue_wait.group_code</code>. 조직코드
     */
    public final TableField<StatQueueWaitRecord, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4), this, "조직코드");

    /**
     * The column <code>STATDB.stat_queue_wait.group_tree_name</code>. 조직트리명
     */
    public final TableField<StatQueueWaitRecord, String> GROUP_TREE_NAME = createField(DSL.name("group_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "조직트리명");

    /**
     * The column <code>STATDB.stat_queue_wait.group_level</code>. 조직레벨
     */
    public final TableField<StatQueueWaitRecord, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "조직레벨");

    /**
     * The column <code>STATDB.stat_queue_wait.queue_name</code>. QUEUE 이름
     */
    public final TableField<StatQueueWaitRecord, String> QUEUE_NAME = createField(DSL.name("queue_name"), org.jooq.impl.SQLDataType.VARCHAR(128).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "QUEUE 이름");

    /**
     * The column <code>STATDB.stat_queue_wait.stat_date</code>. 생성일
     */
    public final TableField<StatQueueWaitRecord, Date> STAT_DATE = createField(DSL.name("stat_date"), org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.inline("2009-01-01", org.jooq.impl.SQLDataType.DATE)), this, "생성일");

    /**
     * The column <code>STATDB.stat_queue_wait.stat_hour</code>. 생성시간
     */
    public final TableField<StatQueueWaitRecord, Byte> STAT_HOUR = createField(DSL.name("stat_hour"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "생성시간");

    /**
     * The column <code>STATDB.stat_queue_wait.total_wait</code>. 시간당대기자수합계
     */
    public final TableField<StatQueueWaitRecord, Integer> TOTAL_WAIT = createField(DSL.name("total_wait"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "시간당대기자수합계");

    /**
     * The column <code>STATDB.stat_queue_wait.max_wait</code>. 최대대기자수
     */
    public final TableField<StatQueueWaitRecord, Integer> MAX_WAIT = createField(DSL.name("max_wait"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "최대대기자수");

    /**
     * Create a <code>STATDB.stat_queue_wait</code> table reference
     */
    public StatQueueWait() {
        this(DSL.name("stat_queue_wait"), null);
    }

    /**
     * Create an aliased <code>STATDB.stat_queue_wait</code> table reference
     */
    public StatQueueWait(String alias) {
        this(DSL.name(alias), STAT_QUEUE_WAIT);
    }

    /**
     * Create an aliased <code>STATDB.stat_queue_wait</code> table reference
     */
    public StatQueueWait(Name alias) {
        this(alias, STAT_QUEUE_WAIT);
    }

    private StatQueueWait(Name alias, Table<StatQueueWaitRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatQueueWait(Name alias, Table<StatQueueWaitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("헌트대기자수통계 테이블"), TableOptions.table());
    }

    public <O extends Record> StatQueueWait(Table<O> child, ForeignKey<O, StatQueueWaitRecord> key) {
        super(child, key, STAT_QUEUE_WAIT);
    }

    @Override
    public Schema getSchema() {
        return Statdb.STATDB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STAT_QUEUE_WAIT_COMPANY_ID, Indexes.STAT_QUEUE_WAIT_GROUP_CODE, Indexes.STAT_QUEUE_WAIT_GROUP_LEVEL, Indexes.STAT_QUEUE_WAIT_GROUP_TREE_NAME, Indexes.STAT_QUEUE_WAIT_QUEUE_NAME, Indexes.STAT_QUEUE_WAIT_STAT_DATE);
    }

    @Override
    public Identity<StatQueueWaitRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STAT_QUEUE_WAIT;
    }

    @Override
    public UniqueKey<StatQueueWaitRecord> getPrimaryKey() {
        return Keys.KEY_STAT_QUEUE_WAIT_PRIMARY;
    }

    @Override
    public List<UniqueKey<StatQueueWaitRecord>> getKeys() {
        return Arrays.<UniqueKey<StatQueueWaitRecord>>asList(Keys.KEY_STAT_QUEUE_WAIT_PRIMARY);
    }

    @Override
    public StatQueueWait as(String alias) {
        return new StatQueueWait(DSL.name(alias), this);
    }

    @Override
    public StatQueueWait as(Name alias) {
        return new StatQueueWait(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatQueueWait rename(String name) {
        return new StatQueueWait(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatQueueWait rename(Name name) {
        return new StatQueueWait(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, String, Integer, String, Date, Byte, Integer, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
