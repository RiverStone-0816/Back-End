/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.EmailInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailInfo extends TableImpl<EmailInfoRecord> {

    private static final long serialVersionUID = -1145081188;

    /**
     * The reference instance of <code>eicn.email_info</code>
     */
    public static final EmailInfo EMAIL_INFO = new EmailInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmailInfoRecord> getRecordType() {
        return EmailInfoRecord.class;
    }

    /**
     * The column <code>eicn.email_info.seq</code>.
     */
    public final TableField<EmailInfoRecord, UInteger> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.email_info.service_id</code>.
     */
    public final TableField<EmailInfoRecord, Integer> SERVICE_ID = createField(DSL.name("service_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>eicn.email_info.service_name</code>.
     */
    public final TableField<EmailInfoRecord, String> SERVICE_NAME = createField(DSL.name("service_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_info.inserted_date</code>.
     */
    public final TableField<EmailInfoRecord, Timestamp> INSERTED_DATE = createField(DSL.name("inserted_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.email_info.sent_date_string</code>.
     */
    public final TableField<EmailInfoRecord, String> SENT_DATE_STRING = createField(DSL.name("sent_date_string"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_info.received_date_string</code>.
     */
    public final TableField<EmailInfoRecord, String> RECEIVED_DATE_STRING = createField(DSL.name("received_date_string"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_info.message_number</code>.
     */
    public final TableField<EmailInfoRecord, UInteger> MESSAGE_NUMBER = createField(DSL.name("message_number"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>eicn.email_info.message_id</code>.
     */
    public final TableField<EmailInfoRecord, String> MESSAGE_ID = createField(DSL.name("message_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eicn.email_info.subject</code>.
     */
    public final TableField<EmailInfoRecord, String> SUBJECT = createField(DSL.name("subject"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eicn.email_info.content_type</code>.
     */
    public final TableField<EmailInfoRecord, String> CONTENT_TYPE = createField(DSL.name("content_type"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>eicn.email_info.contents</code>.
     */
    public final TableField<EmailInfoRecord, String> CONTENTS = createField(DSL.name("contents"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>eicn.email_info.from_name</code>.
     */
    public final TableField<EmailInfoRecord, String> FROM_NAME = createField(DSL.name("from_name"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>eicn.email_info.from_email</code>.
     */
    public final TableField<EmailInfoRecord, String> FROM_EMAIL = createField(DSL.name("from_email"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eicn.email_info.to_emails</code>.
     */
    public final TableField<EmailInfoRecord, String> TO_EMAILS = createField(DSL.name("to_emails"), org.jooq.impl.SQLDataType.VARCHAR(2000), this, "");

    /**
     * The column <code>eicn.email_info.cc_emails</code>.
     */
    public final TableField<EmailInfoRecord, String> CC_EMAILS = createField(DSL.name("cc_emails"), org.jooq.impl.SQLDataType.VARCHAR(2000), this, "");

    /**
     * The column <code>eicn.email_info.is_attach</code>.
     */
    public final TableField<EmailInfoRecord, UByte> IS_ATTACH = createField(DSL.name("is_attach"), org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>eicn.email_info.userid</code>.
     */
    public final TableField<EmailInfoRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.email_info.company_id</code>.
     */
    public final TableField<EmailInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.email_info</code> table reference
     */
    public EmailInfo() {
        this(DSL.name("email_info"), null);
    }

    /**
     * Create an aliased <code>eicn.email_info</code> table reference
     */
    public EmailInfo(String alias) {
        this(DSL.name(alias), EMAIL_INFO);
    }

    /**
     * Create an aliased <code>eicn.email_info</code> table reference
     */
    public EmailInfo(Name alias) {
        this(alias, EMAIL_INFO);
    }

    private EmailInfo(Name alias, Table<EmailInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmailInfo(Name alias, Table<EmailInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> EmailInfo(Table<O> child, ForeignKey<O, EmailInfoRecord> key) {
        super(child, key, EMAIL_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EMAIL_INFO_INSERTED_DATE, Indexes.EMAIL_INFO_RECEIVED_DATE_STRING, Indexes.EMAIL_INFO_SENT_DATE_STRING, Indexes.EMAIL_INFO_SERVICE_ID);
    }

    @Override
    public Identity<EmailInfoRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_EMAIL_INFO;
    }

    @Override
    public UniqueKey<EmailInfoRecord> getPrimaryKey() {
        return Keys.KEY_EMAIL_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<EmailInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<EmailInfoRecord>>asList(Keys.KEY_EMAIL_INFO_PRIMARY);
    }

    @Override
    public EmailInfo as(String alias) {
        return new EmailInfo(DSL.name(alias), this);
    }

    @Override
    public EmailInfo as(Name alias) {
        return new EmailInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmailInfo rename(String name) {
        return new EmailInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EmailInfo rename(Name name) {
        return new EmailInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<UInteger, Integer, String, Timestamp, String, String, UInteger, String, String, String, String, String, String, String, String, UByte, String, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
