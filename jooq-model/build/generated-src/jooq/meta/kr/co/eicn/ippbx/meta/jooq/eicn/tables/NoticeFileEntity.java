/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.NoticeFileEntityRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 공지사항 파일
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NoticeFileEntity extends TableImpl<NoticeFileEntityRecord> {

    private static final long serialVersionUID = -372912128;

    /**
     * The reference instance of <code>eicn.notice_file_entity</code>
     */
    public static final NoticeFileEntity NOTICE_FILE_ENTITY = new NoticeFileEntity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NoticeFileEntityRecord> getRecordType() {
        return NoticeFileEntityRecord.class;
    }

    /**
     * The column <code>eicn.notice_file_entity.id</code>.
     */
    public final TableField<NoticeFileEntityRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.notice_file_entity.size</code>. 파일 사이즈
     */
    public final TableField<NoticeFileEntityRecord, Long> SIZE = createField(DSL.name("size"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "파일 사이즈");

    /**
     * The column <code>eicn.notice_file_entity.original_name</code>. 파일 원본이름
     */
    public final TableField<NoticeFileEntityRecord, String> ORIGINAL_NAME = createField(DSL.name("original_name"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "파일 원본이름");

    /**
     * The column <code>eicn.notice_file_entity.path</code>. 파일명을 포함한 파일 경로
     */
    public final TableField<NoticeFileEntityRecord, String> PATH = createField(DSL.name("path"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "파일명을 포함한 파일 경로");

    /**
     * The column <code>eicn.notice_file_entity.created_at</code>. 레코드 생성 시각
     */
    public final TableField<NoticeFileEntityRecord, Timestamp> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "레코드 생성 시각");

    /**
     * The column <code>eicn.notice_file_entity.company_id</code>.
     */
    public final TableField<NoticeFileEntityRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.notice_file_entity</code> table reference
     */
    public NoticeFileEntity() {
        this(DSL.name("notice_file_entity"), null);
    }

    /**
     * Create an aliased <code>eicn.notice_file_entity</code> table reference
     */
    public NoticeFileEntity(String alias) {
        this(DSL.name(alias), NOTICE_FILE_ENTITY);
    }

    /**
     * Create an aliased <code>eicn.notice_file_entity</code> table reference
     */
    public NoticeFileEntity(Name alias) {
        this(alias, NOTICE_FILE_ENTITY);
    }

    private NoticeFileEntity(Name alias, Table<NoticeFileEntityRecord> aliased) {
        this(alias, aliased, null);
    }

    private NoticeFileEntity(Name alias, Table<NoticeFileEntityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("공지사항 파일"), TableOptions.table());
    }

    public <O extends Record> NoticeFileEntity(Table<O> child, ForeignKey<O, NoticeFileEntityRecord> key) {
        super(child, key, NOTICE_FILE_ENTITY);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<NoticeFileEntityRecord, Long> getIdentity() {
        return Keys.IDENTITY_NOTICE_FILE_ENTITY;
    }

    @Override
    public UniqueKey<NoticeFileEntityRecord> getPrimaryKey() {
        return Keys.KEY_NOTICE_FILE_ENTITY_PRIMARY;
    }

    @Override
    public List<UniqueKey<NoticeFileEntityRecord>> getKeys() {
        return Arrays.<UniqueKey<NoticeFileEntityRecord>>asList(Keys.KEY_NOTICE_FILE_ENTITY_PRIMARY);
    }

    @Override
    public NoticeFileEntity as(String alias) {
        return new NoticeFileEntity(DSL.name(alias), this);
    }

    @Override
    public NoticeFileEntity as(Name alias) {
        return new NoticeFileEntity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NoticeFileEntity rename(String name) {
        return new NoticeFileEntity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NoticeFileEntity rename(Name name) {
        return new NoticeFileEntity(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, String, String, Timestamp, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
