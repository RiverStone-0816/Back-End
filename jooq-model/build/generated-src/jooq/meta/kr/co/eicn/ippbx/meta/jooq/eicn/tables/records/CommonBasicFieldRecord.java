/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables.records;


import kr.co.eicn.ippbx.meta.jooq.eicn.tables.CommonBasicField;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommonBasicFieldRecord extends TableRecordImpl<CommonBasicFieldRecord> implements Record8<Integer, String, String, String, String, String, String, Integer> {

    private static final long serialVersionUID = 828876734;

    /**
     * Setter for <code>eicn.common_basic_field.seq</code>.
     */
    public CommonBasicFieldRecord setSeq(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>eicn.common_basic_field.seq</code>.
     */
    public Integer getSeq() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>eicn.common_basic_field.id</code>.
     */
    public CommonBasicFieldRecord setId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>eicn.common_basic_field.id</code>.
     */
    public String getId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>eicn.common_basic_field.name</code>.
     */
    public CommonBasicFieldRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>eicn.common_basic_field.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>eicn.common_basic_field.type</code>.
     */
    public CommonBasicFieldRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>eicn.common_basic_field.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>eicn.common_basic_field.service_kind</code>.
     */
    public CommonBasicFieldRecord setServiceKind(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>eicn.common_basic_field.service_kind</code>.
     */
    public String getServiceKind() {
        return (String) get(4);
    }

    /**
     * Setter for <code>eicn.common_basic_field.info</code>.
     */
    public CommonBasicFieldRecord setInfo(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>eicn.common_basic_field.info</code>.
     */
    public String getInfo() {
        return (String) get(5);
    }

    /**
     * Setter for <code>eicn.common_basic_field.isdefault</code>.
     */
    public CommonBasicFieldRecord setIsdefault(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>eicn.common_basic_field.isdefault</code>.
     */
    public String getIsdefault() {
        return (String) get(6);
    }

    /**
     * Setter for <code>eicn.common_basic_field.field_size</code>.
     */
    public CommonBasicFieldRecord setFieldSize(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>eicn.common_basic_field.field_size</code>.
     */
    public Integer getFieldSize() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, String, String, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, String, String, String, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CommonBasicField.COMMON_BASIC_FIELD.SEQ;
    }

    @Override
    public Field<String> field2() {
        return CommonBasicField.COMMON_BASIC_FIELD.ID;
    }

    @Override
    public Field<String> field3() {
        return CommonBasicField.COMMON_BASIC_FIELD.NAME;
    }

    @Override
    public Field<String> field4() {
        return CommonBasicField.COMMON_BASIC_FIELD.TYPE;
    }

    @Override
    public Field<String> field5() {
        return CommonBasicField.COMMON_BASIC_FIELD.SERVICE_KIND;
    }

    @Override
    public Field<String> field6() {
        return CommonBasicField.COMMON_BASIC_FIELD.INFO;
    }

    @Override
    public Field<String> field7() {
        return CommonBasicField.COMMON_BASIC_FIELD.ISDEFAULT;
    }

    @Override
    public Field<Integer> field8() {
        return CommonBasicField.COMMON_BASIC_FIELD.FIELD_SIZE;
    }

    @Override
    public Integer component1() {
        return getSeq();
    }

    @Override
    public String component2() {
        return getId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getServiceKind();
    }

    @Override
    public String component6() {
        return getInfo();
    }

    @Override
    public String component7() {
        return getIsdefault();
    }

    @Override
    public Integer component8() {
        return getFieldSize();
    }

    @Override
    public Integer value1() {
        return getSeq();
    }

    @Override
    public String value2() {
        return getId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getServiceKind();
    }

    @Override
    public String value6() {
        return getInfo();
    }

    @Override
    public String value7() {
        return getIsdefault();
    }

    @Override
    public Integer value8() {
        return getFieldSize();
    }

    @Override
    public CommonBasicFieldRecord value1(Integer value) {
        setSeq(value);
        return this;
    }

    @Override
    public CommonBasicFieldRecord value2(String value) {
        setId(value);
        return this;
    }

    @Override
    public CommonBasicFieldRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public CommonBasicFieldRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public CommonBasicFieldRecord value5(String value) {
        setServiceKind(value);
        return this;
    }

    @Override
    public CommonBasicFieldRecord value6(String value) {
        setInfo(value);
        return this;
    }

    @Override
    public CommonBasicFieldRecord value7(String value) {
        setIsdefault(value);
        return this;
    }

    @Override
    public CommonBasicFieldRecord value8(Integer value) {
        setFieldSize(value);
        return this;
    }

    @Override
    public CommonBasicFieldRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommonBasicFieldRecord
     */
    public CommonBasicFieldRecord() {
        super(CommonBasicField.COMMON_BASIC_FIELD);
    }

    /**
     * Create a detached, initialised CommonBasicFieldRecord
     */
    public CommonBasicFieldRecord(Integer seq, String id, String name, String type, String serviceKind, String info, String isdefault, Integer fieldSize) {
        super(CommonBasicField.COMMON_BASIC_FIELD);

        set(0, seq);
        set(1, id);
        set(2, name);
        set(3, type);
        set(4, serviceKind);
        set(5, info);
        set(6, isdefault);
        set(7, fieldSize);
    }
}
