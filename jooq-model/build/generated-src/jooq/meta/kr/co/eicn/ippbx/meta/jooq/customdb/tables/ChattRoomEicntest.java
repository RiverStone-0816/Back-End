/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.customdb.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.customdb.Customdb;
import kr.co.eicn.ippbx.meta.jooq.customdb.Indexes;
import kr.co.eicn.ippbx.meta.jooq.customdb.Keys;
import kr.co.eicn.ippbx.meta.jooq.customdb.tables.records.ChattRoomEicntestRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChattRoomEicntest extends TableImpl<ChattRoomEicntestRecord> {

    private static final long serialVersionUID = -2049094336;

    /**
     * The reference instance of <code>CUSTOMDB.chatt_room_eicntest</code>
     */
    public static final ChattRoomEicntest CHATT_ROOM_EICNTEST = new ChattRoomEicntest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChattRoomEicntestRecord> getRecordType() {
        return ChattRoomEicntestRecord.class;
    }

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.room_id</code>.
     */
    public final TableField<ChattRoomEicntestRecord, String> ROOM_ID = createField(DSL.name("room_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.room_name</code>.
     */
    public final TableField<ChattRoomEicntestRecord, String> ROOM_NAME = createField(DSL.name("room_name"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.room_name_change</code>.
     */
    public final TableField<ChattRoomEicntestRecord, String> ROOM_NAME_CHANGE = createField(DSL.name("room_name_change"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.member_md5</code>.
     */
    public final TableField<ChattRoomEicntestRecord, String> MEMBER_MD5 = createField(DSL.name("member_md5"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.start_time</code>.
     */
    public final TableField<ChattRoomEicntestRecord, Timestamp> START_TIME = createField(DSL.name("start_time"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2009-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.last_time</code>.
     */
    public final TableField<ChattRoomEicntestRecord, Timestamp> LAST_TIME = createField(DSL.name("last_time"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2009-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.last_msg</code>.
     */
    public final TableField<ChattRoomEicntestRecord, String> LAST_MSG = createField(DSL.name("last_msg"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.last_msg_type</code>.
     */
    public final TableField<ChattRoomEicntestRecord, String> LAST_MSG_TYPE = createField(DSL.name("last_msg_type"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.last_msg_send_receive</code>.
     */
    public final TableField<ChattRoomEicntestRecord, String> LAST_MSG_SEND_RECEIVE = createField(DSL.name("last_msg_send_receive"), org.jooq.impl.SQLDataType.CHAR(3).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.last_userid</code>.
     */
    public final TableField<ChattRoomEicntestRecord, String> LAST_USERID = createField(DSL.name("last_userid"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.make_userid</code>.
     */
    public final TableField<ChattRoomEicntestRecord, String> MAKE_USERID = createField(DSL.name("make_userid"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.cur_member_cnt</code>.
     */
    public final TableField<ChattRoomEicntestRecord, Integer> CUR_MEMBER_CNT = createField(DSL.name("cur_member_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>CUSTOMDB.chatt_room_eicntest.org_member_cnt</code>.
     */
    public final TableField<ChattRoomEicntestRecord, Integer> ORG_MEMBER_CNT = createField(DSL.name("org_member_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>CUSTOMDB.chatt_room_eicntest</code> table reference
     */
    public ChattRoomEicntest() {
        this(DSL.name("chatt_room_eicntest"), null);
    }

    /**
     * Create an aliased <code>CUSTOMDB.chatt_room_eicntest</code> table reference
     */
    public ChattRoomEicntest(String alias) {
        this(DSL.name(alias), CHATT_ROOM_EICNTEST);
    }

    /**
     * Create an aliased <code>CUSTOMDB.chatt_room_eicntest</code> table reference
     */
    public ChattRoomEicntest(Name alias) {
        this(alias, CHATT_ROOM_EICNTEST);
    }

    private ChattRoomEicntest(Name alias, Table<ChattRoomEicntestRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChattRoomEicntest(Name alias, Table<ChattRoomEicntestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ChattRoomEicntest(Table<O> child, ForeignKey<O, ChattRoomEicntestRecord> key) {
        super(child, key, CHATT_ROOM_EICNTEST);
    }

    @Override
    public Schema getSchema() {
        return Customdb.CUSTOMDB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CHATT_ROOM_EICNTEST_LAST_TIME, Indexes.CHATT_ROOM_EICNTEST_MEMBER_MD5);
    }

    @Override
    public UniqueKey<ChattRoomEicntestRecord> getPrimaryKey() {
        return Keys.KEY_CHATT_ROOM_EICNTEST_PRIMARY;
    }

    @Override
    public List<UniqueKey<ChattRoomEicntestRecord>> getKeys() {
        return Arrays.<UniqueKey<ChattRoomEicntestRecord>>asList(Keys.KEY_CHATT_ROOM_EICNTEST_PRIMARY);
    }

    @Override
    public ChattRoomEicntest as(String alias) {
        return new ChattRoomEicntest(DSL.name(alias), this);
    }

    @Override
    public ChattRoomEicntest as(Name alias) {
        return new ChattRoomEicntest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ChattRoomEicntest rename(String name) {
        return new ChattRoomEicntest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ChattRoomEicntest rename(Name name) {
        return new ChattRoomEicntest(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<String, String, String, String, Timestamp, Timestamp, String, String, String, String, String, Integer, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
