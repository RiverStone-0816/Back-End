/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.TalkServiceInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 플러스친구정보
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TalkServiceInfo extends TableImpl<TalkServiceInfoRecord> {

    private static final long serialVersionUID = -855846214;

    /**
     * The reference instance of <code>eicn.talk_service_info</code>
     */
    public static final TalkServiceInfo TALK_SERVICE_INFO = new TalkServiceInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TalkServiceInfoRecord> getRecordType() {
        return TalkServiceInfoRecord.class;
    }

    /**
     * The column <code>eicn.talk_service_info.seq</code>. SEQUENCE KEY
     */
    public final TableField<TalkServiceInfoRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.talk_service_info.company_id</code>. 고객사 아이디
     */
    public final TableField<TalkServiceInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * The column <code>eicn.talk_service_info.kakao_service_name</code>. 상담톡서비스명
     */
    public final TableField<TalkServiceInfoRecord, String> KAKAO_SERVICE_NAME = createField(DSL.name("kakao_service_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담톡서비스명");

    /**
     * The column <code>eicn.talk_service_info.kakao_service_id</code>. 삼당톡아이디
     */
    public final TableField<TalkServiceInfoRecord, String> KAKAO_SERVICE_ID = createField(DSL.name("kakao_service_id"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "삼당톡아이디");

    /**
     * The column <code>eicn.talk_service_info.sender_key</code>. 상담톡키
     */
    public final TableField<TalkServiceInfoRecord, String> SENDER_KEY = createField(DSL.name("sender_key"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담톡키");

    /**
     * The column <code>eicn.talk_service_info.is_chatt_enable</code>. 상담창활성화 여부
     */
    public final TableField<TalkServiceInfoRecord, String> IS_CHATT_ENABLE = createField(DSL.name("is_chatt_enable"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.CHAR)), this, "상담창활성화 여부");

    /**
     * Create a <code>eicn.talk_service_info</code> table reference
     */
    public TalkServiceInfo() {
        this(DSL.name("talk_service_info"), null);
    }

    /**
     * Create an aliased <code>eicn.talk_service_info</code> table reference
     */
    public TalkServiceInfo(String alias) {
        this(DSL.name(alias), TALK_SERVICE_INFO);
    }

    /**
     * Create an aliased <code>eicn.talk_service_info</code> table reference
     */
    public TalkServiceInfo(Name alias) {
        this(alias, TALK_SERVICE_INFO);
    }

    private TalkServiceInfo(Name alias, Table<TalkServiceInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TalkServiceInfo(Name alias, Table<TalkServiceInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("플러스친구정보\r\n"), TableOptions.table());
    }

    public <O extends Record> TalkServiceInfo(Table<O> child, ForeignKey<O, TalkServiceInfoRecord> key) {
        super(child, key, TALK_SERVICE_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<TalkServiceInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TALK_SERVICE_INFO;
    }

    @Override
    public List<UniqueKey<TalkServiceInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<TalkServiceInfoRecord>>asList(Keys.KEY_TALK_SERVICE_INFO_SEQ);
    }

    @Override
    public TalkServiceInfo as(String alias) {
        return new TalkServiceInfo(DSL.name(alias), this);
    }

    @Override
    public TalkServiceInfo as(Name alias) {
        return new TalkServiceInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TalkServiceInfo rename(String name) {
        return new TalkServiceInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TalkServiceInfo rename(Name name) {
        return new TalkServiceInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
