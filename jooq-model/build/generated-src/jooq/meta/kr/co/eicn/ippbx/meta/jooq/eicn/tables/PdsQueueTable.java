/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PdsQueueTableRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PdsQueueTable extends TableImpl<PdsQueueTableRecord> {

    private static final long serialVersionUID = -1580603886;

    /**
     * The reference instance of <code>eicn.pds_queue_table</code>
     */
    public static final PdsQueueTable PDS_QUEUE_TABLE = new PdsQueueTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PdsQueueTableRecord> getRecordType() {
        return PdsQueueTableRecord.class;
    }

    /**
     * The column <code>eicn.pds_queue_table.name</code>.
     */
    public final TableField<PdsQueueTableRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>eicn.pds_queue_table.musiconhold</code>.
     */
    public final TableField<PdsQueueTableRecord, String> MUSICONHOLD = createField(DSL.name("musiconhold"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.announce</code>.
     */
    public final TableField<PdsQueueTableRecord, String> ANNOUNCE = createField(DSL.name("announce"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.context</code>.
     */
    public final TableField<PdsQueueTableRecord, String> CONTEXT = createField(DSL.name("context"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.timeout</code>.
     */
    public final TableField<PdsQueueTableRecord, Integer> TIMEOUT = createField(DSL.name("timeout"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eicn.pds_queue_table.monitor_type</code>.
     */
    public final TableField<PdsQueueTableRecord, String> MONITOR_TYPE = createField(DSL.name("monitor_type"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.monitor_format</code>.
     */
    public final TableField<PdsQueueTableRecord, String> MONITOR_FORMAT = createField(DSL.name("monitor_format"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.queue_youarenext</code>.
     */
    public final TableField<PdsQueueTableRecord, String> QUEUE_YOUARENEXT = createField(DSL.name("queue_youarenext"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.queue_thereare</code>.
     */
    public final TableField<PdsQueueTableRecord, String> QUEUE_THEREARE = createField(DSL.name("queue_thereare"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.queue_callswaiting</code>.
     */
    public final TableField<PdsQueueTableRecord, String> QUEUE_CALLSWAITING = createField(DSL.name("queue_callswaiting"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.queue_holdtime</code>.
     */
    public final TableField<PdsQueueTableRecord, String> QUEUE_HOLDTIME = createField(DSL.name("queue_holdtime"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.queue_minutes</code>.
     */
    public final TableField<PdsQueueTableRecord, String> QUEUE_MINUTES = createField(DSL.name("queue_minutes"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.queue_seconds</code>.
     */
    public final TableField<PdsQueueTableRecord, String> QUEUE_SECONDS = createField(DSL.name("queue_seconds"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.queue_lessthan</code>.
     */
    public final TableField<PdsQueueTableRecord, String> QUEUE_LESSTHAN = createField(DSL.name("queue_lessthan"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.queue_thankyou</code>.
     */
    public final TableField<PdsQueueTableRecord, String> QUEUE_THANKYOU = createField(DSL.name("queue_thankyou"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.queue_reporthold</code>.
     */
    public final TableField<PdsQueueTableRecord, String> QUEUE_REPORTHOLD = createField(DSL.name("queue_reporthold"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.announce_frequency</code>.
     */
    public final TableField<PdsQueueTableRecord, Integer> ANNOUNCE_FREQUENCY = createField(DSL.name("announce_frequency"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eicn.pds_queue_table.announce_round_seconds</code>.
     */
    public final TableField<PdsQueueTableRecord, Integer> ANNOUNCE_ROUND_SECONDS = createField(DSL.name("announce_round_seconds"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eicn.pds_queue_table.announce_holdtime</code>.
     */
    public final TableField<PdsQueueTableRecord, String> ANNOUNCE_HOLDTIME = createField(DSL.name("announce_holdtime"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.retry</code>.
     */
    public final TableField<PdsQueueTableRecord, Integer> RETRY = createField(DSL.name("retry"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eicn.pds_queue_table.wrapuptime</code>.
     */
    public final TableField<PdsQueueTableRecord, Integer> WRAPUPTIME = createField(DSL.name("wrapuptime"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eicn.pds_queue_table.maxlen</code>.
     */
    public final TableField<PdsQueueTableRecord, Integer> MAXLEN = createField(DSL.name("maxlen"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eicn.pds_queue_table.servicelevel</code>.
     */
    public final TableField<PdsQueueTableRecord, Integer> SERVICELEVEL = createField(DSL.name("servicelevel"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eicn.pds_queue_table.strategy</code>.
     */
    public final TableField<PdsQueueTableRecord, String> STRATEGY = createField(DSL.name("strategy"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.joinempty</code>.
     */
    public final TableField<PdsQueueTableRecord, String> JOINEMPTY = createField(DSL.name("joinempty"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.leavewhenempty</code>.
     */
    public final TableField<PdsQueueTableRecord, String> LEAVEWHENEMPTY = createField(DSL.name("leavewhenempty"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>eicn.pds_queue_table.eventmemberstatus</code>.
     */
    public final TableField<PdsQueueTableRecord, Boolean> EVENTMEMBERSTATUS = createField(DSL.name("eventmemberstatus"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>eicn.pds_queue_table.eventwhencalled</code>.
     */
    public final TableField<PdsQueueTableRecord, Boolean> EVENTWHENCALLED = createField(DSL.name("eventwhencalled"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>eicn.pds_queue_table.reportholdtime</code>.
     */
    public final TableField<PdsQueueTableRecord, Boolean> REPORTHOLDTIME = createField(DSL.name("reportholdtime"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>eicn.pds_queue_table.memberdelay</code>.
     */
    public final TableField<PdsQueueTableRecord, Integer> MEMBERDELAY = createField(DSL.name("memberdelay"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eicn.pds_queue_table.weight</code>.
     */
    public final TableField<PdsQueueTableRecord, Integer> WEIGHT = createField(DSL.name("weight"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eicn.pds_queue_table.timeoutrestart</code>.
     */
    public final TableField<PdsQueueTableRecord, Boolean> TIMEOUTRESTART = createField(DSL.name("timeoutrestart"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>eicn.pds_queue_table.periodic_announce</code>.
     */
    public final TableField<PdsQueueTableRecord, String> PERIODIC_ANNOUNCE = createField(DSL.name("periodic_announce"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>eicn.pds_queue_table.periodic_announce_frequency</code>.
     */
    public final TableField<PdsQueueTableRecord, Integer> PERIODIC_ANNOUNCE_FREQUENCY = createField(DSL.name("periodic_announce_frequency"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eicn.pds_queue_table.ringinuse</code>.
     */
    public final TableField<PdsQueueTableRecord, Boolean> RINGINUSE = createField(DSL.name("ringinuse"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>eicn.pds_queue_table.setinterfacevar</code>.
     */
    public final TableField<PdsQueueTableRecord, Boolean> SETINTERFACEVAR = createField(DSL.name("setinterfacevar"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>eicn.pds_queue_table</code> table reference
     */
    public PdsQueueTable() {
        this(DSL.name("pds_queue_table"), null);
    }

    /**
     * Create an aliased <code>eicn.pds_queue_table</code> table reference
     */
    public PdsQueueTable(String alias) {
        this(DSL.name(alias), PDS_QUEUE_TABLE);
    }

    /**
     * Create an aliased <code>eicn.pds_queue_table</code> table reference
     */
    public PdsQueueTable(Name alias) {
        this(alias, PDS_QUEUE_TABLE);
    }

    private PdsQueueTable(Name alias, Table<PdsQueueTableRecord> aliased) {
        this(alias, aliased, null);
    }

    private PdsQueueTable(Name alias, Table<PdsQueueTableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PdsQueueTable(Table<O> child, ForeignKey<O, PdsQueueTableRecord> key) {
        super(child, key, PDS_QUEUE_TABLE);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public UniqueKey<PdsQueueTableRecord> getPrimaryKey() {
        return Keys.KEY_PDS_QUEUE_TABLE_PRIMARY;
    }

    @Override
    public List<UniqueKey<PdsQueueTableRecord>> getKeys() {
        return Arrays.<UniqueKey<PdsQueueTableRecord>>asList(Keys.KEY_PDS_QUEUE_TABLE_PRIMARY);
    }

    @Override
    public PdsQueueTable as(String alias) {
        return new PdsQueueTable(DSL.name(alias), this);
    }

    @Override
    public PdsQueueTable as(Name alias) {
        return new PdsQueueTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsQueueTable rename(String name) {
        return new PdsQueueTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsQueueTable rename(Name name) {
        return new PdsQueueTable(name, null);
    }
}
