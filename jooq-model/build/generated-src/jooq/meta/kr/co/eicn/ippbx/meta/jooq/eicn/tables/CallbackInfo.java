/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CallbackInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 콜백정보타입관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CallbackInfo extends TableImpl<CallbackInfoRecord> {

    private static final long serialVersionUID = -2095805602;

    /**
     * The reference instance of <code>eicn.callback_info</code>
     */
    public static final CallbackInfo CALLBACK_INFO = new CallbackInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CallbackInfoRecord> getRecordType() {
        return CallbackInfoRecord.class;
    }

    /**
     * The column <code>eicn.callback_info.seq</code>. SEQ (데이터입력시자동증가)
     */
    public final TableField<CallbackInfoRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "SEQ (데이터입력시자동증가)");

    /**
     * The column <code>eicn.callback_info.type</code>. 콜백정보타입
     */
    public final TableField<CallbackInfoRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "콜백정보타입");

    /**
     * The column <code>eicn.callback_info.company_id</code>. 회사아이디
     */
    public final TableField<CallbackInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아이디");

    /**
     * Create a <code>eicn.callback_info</code> table reference
     */
    public CallbackInfo() {
        this(DSL.name("callback_info"), null);
    }

    /**
     * Create an aliased <code>eicn.callback_info</code> table reference
     */
    public CallbackInfo(String alias) {
        this(DSL.name(alias), CALLBACK_INFO);
    }

    /**
     * Create an aliased <code>eicn.callback_info</code> table reference
     */
    public CallbackInfo(Name alias) {
        this(alias, CALLBACK_INFO);
    }

    private CallbackInfo(Name alias, Table<CallbackInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CallbackInfo(Name alias, Table<CallbackInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("콜백정보타입관리 테이블"), TableOptions.table());
    }

    public <O extends Record> CallbackInfo(Table<O> child, ForeignKey<O, CallbackInfoRecord> key) {
        super(child, key, CALLBACK_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CALLBACK_INFO_COMPANY_ID);
    }

    @Override
    public Identity<CallbackInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CALLBACK_INFO;
    }

    @Override
    public UniqueKey<CallbackInfoRecord> getPrimaryKey() {
        return Keys.KEY_CALLBACK_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<CallbackInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<CallbackInfoRecord>>asList(Keys.KEY_CALLBACK_INFO_PRIMARY);
    }

    @Override
    public CallbackInfo as(String alias) {
        return new CallbackInfo(DSL.name(alias), this);
    }

    @Override
    public CallbackInfo as(Name alias) {
        return new CallbackInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CallbackInfo rename(String name) {
        return new CallbackInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CallbackInfo rename(Name name) {
        return new CallbackInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
