/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.SendFileRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * FAX 또는 EMAIL 발송시 참조되는 파일정보
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SendFile extends TableImpl<SendFileRecord> {

    private static final long serialVersionUID = -191322851;

    /**
     * The reference instance of <code>eicn.send_file</code>
     */
    public static final SendFile SEND_FILE = new SendFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SendFileRecord> getRecordType() {
        return SendFileRecord.class;
    }

    /**
     * The column <code>eicn.send_file.id</code>.
     */
    public final TableField<SendFileRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.send_file.category_code</code>. 유형
     */
    public final TableField<SendFileRecord, String> CATEGORY_CODE = createField(DSL.name("category_code"), org.jooq.impl.SQLDataType.CHAR(4).nullable(false), this, "유형");

    /**
     * The column <code>eicn.send_file.name</code>. 발송물 이름
     */
    public final TableField<SendFileRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "발송물 이름");

    /**
     * The column <code>eicn.send_file.desc</code>. 발송물 설명
     */
    public final TableField<SendFileRecord, String> DESC = createField(DSL.name("desc"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "발송물 설명");

    /**
     * The column <code>eicn.send_file.path</code>. 발송물 경로
     */
    public final TableField<SendFileRecord, String> PATH = createField(DSL.name("path"), org.jooq.impl.SQLDataType.VARCHAR(2048).nullable(false), this, "발송물 경로");

    /**
     * The column <code>eicn.send_file.file_name</code>. 발송물 파일명
     */
    public final TableField<SendFileRecord, String> FILE_NAME = createField(DSL.name("file_name"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "발송물 파일명");

    /**
     * The column <code>eicn.send_file.company_id</code>. 고객사 아이디
     */
    public final TableField<SendFileRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "고객사 아이디");

    /**
     * The column <code>eicn.send_file.created_at</code>. 등록일
     */
    public final TableField<SendFileRecord, Timestamp> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "등록일");

    /**
     * Create a <code>eicn.send_file</code> table reference
     */
    public SendFile() {
        this(DSL.name("send_file"), null);
    }

    /**
     * Create an aliased <code>eicn.send_file</code> table reference
     */
    public SendFile(String alias) {
        this(DSL.name(alias), SEND_FILE);
    }

    /**
     * Create an aliased <code>eicn.send_file</code> table reference
     */
    public SendFile(Name alias) {
        this(alias, SEND_FILE);
    }

    private SendFile(Name alias, Table<SendFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private SendFile(Name alias, Table<SendFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("FAX 또는 EMAIL 발송시 참조되는 파일정보"), TableOptions.table());
    }

    public <O extends Record> SendFile(Table<O> child, ForeignKey<O, SendFileRecord> key) {
        super(child, key, SEND_FILE);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<SendFileRecord, Long> getIdentity() {
        return Keys.IDENTITY_SEND_FILE;
    }

    @Override
    public UniqueKey<SendFileRecord> getPrimaryKey() {
        return Keys.KEY_SEND_FILE_PRIMARY;
    }

    @Override
    public List<UniqueKey<SendFileRecord>> getKeys() {
        return Arrays.<UniqueKey<SendFileRecord>>asList(Keys.KEY_SEND_FILE_PRIMARY, Keys.KEY_SEND_FILE_CATEGORY);
    }

    @Override
    public SendFile as(String alias) {
        return new SendFile(DSL.name(alias), this);
    }

    @Override
    public SendFile as(Name alias) {
        return new SendFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SendFile rename(String name) {
        return new SendFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SendFile rename(Name name) {
        return new SendFile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, String, String, String, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
