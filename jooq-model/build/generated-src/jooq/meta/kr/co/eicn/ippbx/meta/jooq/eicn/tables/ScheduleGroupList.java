/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.ScheduleGroupListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 스케쥴유형 항목관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduleGroupList extends TableImpl<ScheduleGroupListRecord> {

    private static final long serialVersionUID = 1256030904;

    /**
     * The reference instance of <code>eicn.schedule_group_list</code>
     */
    public static final ScheduleGroupList SCHEDULE_GROUP_LIST = new ScheduleGroupList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScheduleGroupListRecord> getRecordType() {
        return ScheduleGroupListRecord.class;
    }

    /**
     * The column <code>eicn.schedule_group_list.child</code>. SEQUENCE KEY
     */
    public final TableField<ScheduleGroupListRecord, Integer> CHILD = createField(DSL.name("child"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "SEQUENCE KEY");

    /**
     * The column <code>eicn.schedule_group_list.parent</code>. 유형 SEQUENCE 참조 키
     */
    public final TableField<ScheduleGroupListRecord, Integer> PARENT = createField(DSL.name("parent"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "유형 SEQUENCE 참조 키");

    /**
     * The column <code>eicn.schedule_group_list.child_name</code>.
     */
    public final TableField<ScheduleGroupListRecord, String> CHILD_NAME = createField(DSL.name("child_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.schedule_group_list.worktime_yn</code>. 업무시간 유무
     */
    public final TableField<ScheduleGroupListRecord, String> WORKTIME_YN = createField(DSL.name("worktime_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("Y", org.jooq.impl.SQLDataType.CHAR)), this, "업무시간 유무");

    /**
     * The column <code>eicn.schedule_group_list.stat_yn</code>. 통계사용 유무
     */
    public final TableField<ScheduleGroupListRecord, String> STAT_YN = createField(DSL.name("stat_yn"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("Y", org.jooq.impl.SQLDataType.CHAR)), this, "통계사용 유무");

    /**
     * The column <code>eicn.schedule_group_list.fromhour</code>. 시작시간 분 (09:00 -&gt; 540)
     */
    public final TableField<ScheduleGroupListRecord, Integer> FROMHOUR = createField(DSL.name("fromhour"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "시작시간 분 (09:00 -> 540)");

    /**
     * The column <code>eicn.schedule_group_list.tohour</code>. 종료시간 분 (18:00 -&gt; 1080)
     */
    public final TableField<ScheduleGroupListRecord, Integer> TOHOUR = createField(DSL.name("tohour"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "종료시간 분 (18:00 -> 1080)");

    /**
     * The column <code>eicn.schedule_group_list.kind</code>. 스케쥴 유형(S:음원만플레이, D:번호직접연결(내부번호연결), F:착신전환(외부번호연결), I:IVR연결, C:예외컨텍스트, V:음성사서함)
     */
    public final TableField<ScheduleGroupListRecord, String> KIND = createField(DSL.name("kind"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("D", org.jooq.impl.SQLDataType.CHAR)), this, "스케쥴 유형(S:음원만플레이, D:번호직접연결(내부번호연결), F:착신전환(외부번호연결), I:IVR연결, C:예외컨텍스트, V:음성사서함)");

    /**
     * The column <code>eicn.schedule_group_list.kind_data</code>. 유형별입력 데이터
     */
    public final TableField<ScheduleGroupListRecord, String> KIND_DATA = createField(DSL.name("kind_data"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "유형별입력 데이터");

    /**
     * The column <code>eicn.schedule_group_list.kind_sound_code</code>. 음원 참조키
     */
    public final TableField<ScheduleGroupListRecord, String> KIND_SOUND_CODE = createField(DSL.name("kind_sound_code"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "음원 참조키");

    /**
     * The column <code>eicn.schedule_group_list.tts_data</code>. TTS문구
     */
    public final TableField<ScheduleGroupListRecord, String> TTS_DATA = createField(DSL.name("tts_data"), org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "TTS문구");

    /**
     * The column <code>eicn.schedule_group_list.company_id</code>. 고객사 아이디
     */
    public final TableField<ScheduleGroupListRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * Create a <code>eicn.schedule_group_list</code> table reference
     */
    public ScheduleGroupList() {
        this(DSL.name("schedule_group_list"), null);
    }

    /**
     * Create an aliased <code>eicn.schedule_group_list</code> table reference
     */
    public ScheduleGroupList(String alias) {
        this(DSL.name(alias), SCHEDULE_GROUP_LIST);
    }

    /**
     * Create an aliased <code>eicn.schedule_group_list</code> table reference
     */
    public ScheduleGroupList(Name alias) {
        this(alias, SCHEDULE_GROUP_LIST);
    }

    private ScheduleGroupList(Name alias, Table<ScheduleGroupListRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScheduleGroupList(Name alias, Table<ScheduleGroupListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("스케쥴유형 항목관리 테이블"), TableOptions.table());
    }

    public <O extends Record> ScheduleGroupList(Table<O> child, ForeignKey<O, ScheduleGroupListRecord> key) {
        super(child, key, SCHEDULE_GROUP_LIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<ScheduleGroupListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SCHEDULE_GROUP_LIST;
    }

    @Override
    public List<UniqueKey<ScheduleGroupListRecord>> getKeys() {
        return Arrays.<UniqueKey<ScheduleGroupListRecord>>asList(Keys.KEY_SCHEDULE_GROUP_LIST_CHILD);
    }

    @Override
    public ScheduleGroupList as(String alias) {
        return new ScheduleGroupList(DSL.name(alias), this);
    }

    @Override
    public ScheduleGroupList as(Name alias) {
        return new ScheduleGroupList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduleGroupList rename(String name) {
        return new ScheduleGroupList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduleGroupList rename(Name name) {
        return new ScheduleGroupList(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Integer, String, String, String, Integer, Integer, String, String, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
