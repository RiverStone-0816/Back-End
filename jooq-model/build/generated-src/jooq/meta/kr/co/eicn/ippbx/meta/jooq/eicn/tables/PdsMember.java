/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PdsMemberRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PdsMember extends TableImpl<PdsMemberRecord> {

    private static final long serialVersionUID = -2028302118;

    /**
     * The reference instance of <code>eicn.pds_member</code>
     */
    public static final PdsMember PDS_MEMBER = new PdsMember();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PdsMemberRecord> getRecordType() {
        return PdsMemberRecord.class;
    }

    /**
     * The column <code>eicn.pds_member.seq</code>.
     */
    public final TableField<PdsMemberRecord, UInteger> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.pds_member.pds_seq</code>.
     */
    public final TableField<PdsMemberRecord, String> PDS_SEQ = createField(DSL.name("pds_seq"), org.jooq.impl.SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>eicn.pds_member.userid</code>.
     */
    public final TableField<PdsMemberRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>eicn.pds_member.reserve_seq</code>.
     */
    public final TableField<PdsMemberRecord, Integer> RESERVE_SEQ = createField(DSL.name("reserve_seq"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.pds_member.company_id</code>.
     */
    public final TableField<PdsMemberRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.pds_member</code> table reference
     */
    public PdsMember() {
        this(DSL.name("pds_member"), null);
    }

    /**
     * Create an aliased <code>eicn.pds_member</code> table reference
     */
    public PdsMember(String alias) {
        this(DSL.name(alias), PDS_MEMBER);
    }

    /**
     * Create an aliased <code>eicn.pds_member</code> table reference
     */
    public PdsMember(Name alias) {
        this(alias, PDS_MEMBER);
    }

    private PdsMember(Name alias, Table<PdsMemberRecord> aliased) {
        this(alias, aliased, null);
    }

    private PdsMember(Name alias, Table<PdsMemberRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PdsMember(Table<O> child, ForeignKey<O, PdsMemberRecord> key) {
        super(child, key, PDS_MEMBER);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<PdsMemberRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_PDS_MEMBER;
    }

    @Override
    public UniqueKey<PdsMemberRecord> getPrimaryKey() {
        return Keys.KEY_PDS_MEMBER_PRIMARY;
    }

    @Override
    public List<UniqueKey<PdsMemberRecord>> getKeys() {
        return Arrays.<UniqueKey<PdsMemberRecord>>asList(Keys.KEY_PDS_MEMBER_PRIMARY);
    }

    @Override
    public PdsMember as(String alias) {
        return new PdsMember(DSL.name(alias), this);
    }

    @Override
    public PdsMember as(Name alias) {
        return new PdsMember(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsMember rename(String name) {
        return new PdsMember(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PdsMember rename(Name name) {
        return new PdsMember(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<UInteger, String, String, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
