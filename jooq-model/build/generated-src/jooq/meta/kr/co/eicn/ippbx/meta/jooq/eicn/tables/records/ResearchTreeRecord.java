/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables.records;


import kr.co.eicn.ippbx.meta.jooq.eicn.tables.ResearchTree;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;


/**
 * 설문 시나리오 관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResearchTreeRecord extends TableRecordImpl<ResearchTreeRecord> implements Record11<Integer, String, String, String, String, Integer, Byte, Integer, Byte, Integer, String> {

    private static final long serialVersionUID = -810044334;

    /**
     * Setter for <code>eicn.research_tree.seq</code>. SEQUENCE KEY
     */
    public ResearchTreeRecord setSeq(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.seq</code>. SEQUENCE KEY
     */
    public Integer getSeq() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>eicn.research_tree.code</code>. {설문아이디}_{시나리오 레벨}_{문항 아이디}_{research_item.mapping_number} 
     */
    public ResearchTreeRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.code</code>. {설문아이디}_{시나리오 레벨}_{문항 아이디}_{research_item.mapping_number} 
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>eicn.research_tree.path</code>. 윗레벨의 path를 포함한 path의 나열 ex&gt;0-4_1_2_0-4_2_6_1
     */
    public ResearchTreeRecord setPath(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.path</code>. 윗레벨의 path를 포함한 path의 나열 ex&gt;0-4_1_2_0-4_2_6_1
     */
    public String getPath() {
        return (String) get(2);
    }

    /**
     * Setter for <code>eicn.research_tree.root</code>. 최상위 트리 path
     */
    public ResearchTreeRecord setRoot(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.root</code>. 최상위 트리 path
     */
    public String getRoot() {
        return (String) get(3);
    }

    /**
     * Setter for <code>eicn.research_tree.parent</code>. 윗레벨의 path
     */
    public ResearchTreeRecord setParent(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.parent</code>. 윗레벨의 path
     */
    public String getParent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>eicn.research_tree.level</code>. 해당 트리의 레벨
     */
    public ResearchTreeRecord setLevel(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.level</code>. 해당 트리의 레벨
     */
    public Integer getLevel() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>eicn.research_tree.type</code>.
     */
    public ResearchTreeRecord setType(Byte value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.type</code>.
     */
    public Byte getType() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>eicn.research_tree.item_id</code>. 문항 아이디
     */
    public ResearchTreeRecord setItemId(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.item_id</code>. 문항 아이디
     */
    public Integer getItemId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>eicn.research_tree.mapping_number</code>. tree index
     */
    public ResearchTreeRecord setMappingNumber(Byte value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.mapping_number</code>. tree index
     */
    public Byte getMappingNumber() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>eicn.research_tree.research_id</code>. 설문 아이디
     */
    public ResearchTreeRecord setResearchId(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.research_id</code>. 설문 아이디
     */
    public Integer getResearchId() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>eicn.research_tree.company_id</code>. 고객사 아이디
     */
    public ResearchTreeRecord setCompanyId(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>eicn.research_tree.company_id</code>. 고객사 아이디
     */
    public String getCompanyId() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, String, String, String, Integer, Byte, Integer, Byte, Integer, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, String, String, String, String, Integer, Byte, Integer, Byte, Integer, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ResearchTree.RESEARCH_TREE.SEQ;
    }

    @Override
    public Field<String> field2() {
        return ResearchTree.RESEARCH_TREE.CODE;
    }

    @Override
    public Field<String> field3() {
        return ResearchTree.RESEARCH_TREE.PATH;
    }

    @Override
    public Field<String> field4() {
        return ResearchTree.RESEARCH_TREE.ROOT;
    }

    @Override
    public Field<String> field5() {
        return ResearchTree.RESEARCH_TREE.PARENT;
    }

    @Override
    public Field<Integer> field6() {
        return ResearchTree.RESEARCH_TREE.LEVEL;
    }

    @Override
    public Field<Byte> field7() {
        return ResearchTree.RESEARCH_TREE.TYPE;
    }

    @Override
    public Field<Integer> field8() {
        return ResearchTree.RESEARCH_TREE.ITEM_ID;
    }

    @Override
    public Field<Byte> field9() {
        return ResearchTree.RESEARCH_TREE.MAPPING_NUMBER;
    }

    @Override
    public Field<Integer> field10() {
        return ResearchTree.RESEARCH_TREE.RESEARCH_ID;
    }

    @Override
    public Field<String> field11() {
        return ResearchTree.RESEARCH_TREE.COMPANY_ID;
    }

    @Override
    public Integer component1() {
        return getSeq();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getPath();
    }

    @Override
    public String component4() {
        return getRoot();
    }

    @Override
    public String component5() {
        return getParent();
    }

    @Override
    public Integer component6() {
        return getLevel();
    }

    @Override
    public Byte component7() {
        return getType();
    }

    @Override
    public Integer component8() {
        return getItemId();
    }

    @Override
    public Byte component9() {
        return getMappingNumber();
    }

    @Override
    public Integer component10() {
        return getResearchId();
    }

    @Override
    public String component11() {
        return getCompanyId();
    }

    @Override
    public Integer value1() {
        return getSeq();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getPath();
    }

    @Override
    public String value4() {
        return getRoot();
    }

    @Override
    public String value5() {
        return getParent();
    }

    @Override
    public Integer value6() {
        return getLevel();
    }

    @Override
    public Byte value7() {
        return getType();
    }

    @Override
    public Integer value8() {
        return getItemId();
    }

    @Override
    public Byte value9() {
        return getMappingNumber();
    }

    @Override
    public Integer value10() {
        return getResearchId();
    }

    @Override
    public String value11() {
        return getCompanyId();
    }

    @Override
    public ResearchTreeRecord value1(Integer value) {
        setSeq(value);
        return this;
    }

    @Override
    public ResearchTreeRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public ResearchTreeRecord value3(String value) {
        setPath(value);
        return this;
    }

    @Override
    public ResearchTreeRecord value4(String value) {
        setRoot(value);
        return this;
    }

    @Override
    public ResearchTreeRecord value5(String value) {
        setParent(value);
        return this;
    }

    @Override
    public ResearchTreeRecord value6(Integer value) {
        setLevel(value);
        return this;
    }

    @Override
    public ResearchTreeRecord value7(Byte value) {
        setType(value);
        return this;
    }

    @Override
    public ResearchTreeRecord value8(Integer value) {
        setItemId(value);
        return this;
    }

    @Override
    public ResearchTreeRecord value9(Byte value) {
        setMappingNumber(value);
        return this;
    }

    @Override
    public ResearchTreeRecord value10(Integer value) {
        setResearchId(value);
        return this;
    }

    @Override
    public ResearchTreeRecord value11(String value) {
        setCompanyId(value);
        return this;
    }

    @Override
    public ResearchTreeRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, Byte value7, Integer value8, Byte value9, Integer value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResearchTreeRecord
     */
    public ResearchTreeRecord() {
        super(ResearchTree.RESEARCH_TREE);
    }

    /**
     * Create a detached, initialised ResearchTreeRecord
     */
    public ResearchTreeRecord(Integer seq, String code, String path, String root, String parent, Integer level, Byte type, Integer itemId, Byte mappingNumber, Integer researchId, String companyId) {
        super(ResearchTree.RESEARCH_TREE);

        set(0, seq);
        set(1, code);
        set(2, path);
        set(3, root);
        set(4, parent);
        set(5, level);
        set(6, type);
        set(7, itemId);
        set(8, mappingNumber);
        set(9, researchId);
        set(10, companyId);
    }
}
