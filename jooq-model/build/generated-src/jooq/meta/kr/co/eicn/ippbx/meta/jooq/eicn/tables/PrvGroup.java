/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PrvGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PrvGroup extends TableImpl<PrvGroupRecord> {

    private static final long serialVersionUID = 2127865310;

    /**
     * The reference instance of <code>eicn.prv_group</code>
     */
    public static final PrvGroup PRV_GROUP = new PrvGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PrvGroupRecord> getRecordType() {
        return PrvGroupRecord.class;
    }

    /**
     * The column <code>eicn.prv_group.seq</code>.
     */
    public final TableField<PrvGroupRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.prv_group.name</code>.
     */
    public final TableField<PrvGroupRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.prv_group.total_cnt</code>.
     */
    public final TableField<PrvGroupRecord, Integer> TOTAL_CNT = createField(DSL.name("total_cnt"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.prv_group.prv_type</code>.
     */
    public final TableField<PrvGroupRecord, Integer> PRV_TYPE = createField(DSL.name("prv_type"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.prv_group.result_type</code>.
     */
    public final TableField<PrvGroupRecord, Integer> RESULT_TYPE = createField(DSL.name("result_type"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.prv_group.info</code>.
     */
    public final TableField<PrvGroupRecord, String> INFO = createField(DSL.name("info"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.prv_group.group_code</code>.
     */
    public final TableField<PrvGroupRecord, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4).defaultValue(org.jooq.impl.DSL.inline("0000", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>eicn.prv_group.group_tree_name</code>.
     */
    public final TableField<PrvGroupRecord, String> GROUP_TREE_NAME = createField(DSL.name("group_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.prv_group.group_level</code>.
     */
    public final TableField<PrvGroupRecord, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.prv_group.company_id</code>.
     */
    public final TableField<PrvGroupRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.prv_group.dial_timeout</code>.
     */
    public final TableField<PrvGroupRecord, Byte> DIAL_TIMEOUT = createField(DSL.name("dial_timeout"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>eicn.prv_group.rid_kind</code>.
     */
    public final TableField<PrvGroupRecord, String> RID_KIND = createField(DSL.name("rid_kind"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("PBX", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.prv_group.rid_data</code>.
     */
    public final TableField<PrvGroupRecord, String> RID_DATA = createField(DSL.name("rid_data"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.prv_group.billing_kind</code>.
     */
    public final TableField<PrvGroupRecord, String> BILLING_KIND = createField(DSL.name("billing_kind"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("PBX", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.prv_group.billing_data</code>.
     */
    public final TableField<PrvGroupRecord, String> BILLING_DATA = createField(DSL.name("billing_data"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.prv_group.member_kind</code>.
     */
    public final TableField<PrvGroupRecord, String> MEMBER_KIND = createField(DSL.name("member_kind"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("PBX", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.prv_group.member_data</code>.
     */
    public final TableField<PrvGroupRecord, String> MEMBER_DATA = createField(DSL.name("member_data"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.prv_group</code> table reference
     */
    public PrvGroup() {
        this(DSL.name("prv_group"), null);
    }

    /**
     * Create an aliased <code>eicn.prv_group</code> table reference
     */
    public PrvGroup(String alias) {
        this(DSL.name(alias), PRV_GROUP);
    }

    /**
     * Create an aliased <code>eicn.prv_group</code> table reference
     */
    public PrvGroup(Name alias) {
        this(alias, PRV_GROUP);
    }

    private PrvGroup(Name alias, Table<PrvGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private PrvGroup(Name alias, Table<PrvGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PrvGroup(Table<O> child, ForeignKey<O, PrvGroupRecord> key) {
        super(child, key, PRV_GROUP);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRV_GROUP_COMPANY_ID);
    }

    @Override
    public Identity<PrvGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRV_GROUP;
    }

    @Override
    public UniqueKey<PrvGroupRecord> getPrimaryKey() {
        return Keys.KEY_PRV_GROUP_PRIMARY;
    }

    @Override
    public List<UniqueKey<PrvGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<PrvGroupRecord>>asList(Keys.KEY_PRV_GROUP_PRIMARY);
    }

    @Override
    public PrvGroup as(String alias) {
        return new PrvGroup(DSL.name(alias), this);
    }

    @Override
    public PrvGroup as(Name alias) {
        return new PrvGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PrvGroup rename(String name) {
        return new PrvGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PrvGroup rename(Name name) {
        return new PrvGroup(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<Integer, String, Integer, Integer, Integer, String, String, String, Integer, String, Byte, String, String, String, String, String, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
