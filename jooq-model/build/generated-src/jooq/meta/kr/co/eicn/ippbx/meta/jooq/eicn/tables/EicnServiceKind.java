/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.EicnServiceKindRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EicnServiceKind extends TableImpl<EicnServiceKindRecord> {

    private static final long serialVersionUID = 371136537;

    /**
     * The reference instance of <code>eicn.eicn_service_kind</code>
     */
    public static final EicnServiceKind EICN_SERVICE_KIND = new EicnServiceKind();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EicnServiceKindRecord> getRecordType() {
        return EicnServiceKindRecord.class;
    }

    /**
     * The column <code>eicn.eicn_service_kind.service_kind</code>.
     */
    public final TableField<EicnServiceKindRecord, String> SERVICE_KIND = createField(DSL.name("service_kind"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("SC", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.eicn_service_kind.changedate</code>.
     */
    public final TableField<EicnServiceKindRecord, Timestamp> CHANGEDATE = createField(DSL.name("changedate"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-01-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>eicn.eicn_service_kind.project_id</code>.
     */
    public final TableField<EicnServiceKindRecord, String> PROJECT_ID = createField(DSL.name("project_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.eicn_service_kind</code> table reference
     */
    public EicnServiceKind() {
        this(DSL.name("eicn_service_kind"), null);
    }

    /**
     * Create an aliased <code>eicn.eicn_service_kind</code> table reference
     */
    public EicnServiceKind(String alias) {
        this(DSL.name(alias), EICN_SERVICE_KIND);
    }

    /**
     * Create an aliased <code>eicn.eicn_service_kind</code> table reference
     */
    public EicnServiceKind(Name alias) {
        this(alias, EICN_SERVICE_KIND);
    }

    private EicnServiceKind(Name alias, Table<EicnServiceKindRecord> aliased) {
        this(alias, aliased, null);
    }

    private EicnServiceKind(Name alias, Table<EicnServiceKindRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> EicnServiceKind(Table<O> child, ForeignKey<O, EicnServiceKindRecord> key) {
        super(child, key, EICN_SERVICE_KIND);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<UniqueKey<EicnServiceKindRecord>> getKeys() {
        return Arrays.<UniqueKey<EicnServiceKindRecord>>asList(Keys.KEY_EICN_SERVICE_KIND_SERVICE_KIND);
    }

    @Override
    public EicnServiceKind as(String alias) {
        return new EicnServiceKind(DSL.name(alias), this);
    }

    @Override
    public EicnServiceKind as(Name alias) {
        return new EicnServiceKind(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EicnServiceKind rename(String name) {
        return new EicnServiceKind(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EicnServiceKind rename(Name name) {
        return new EicnServiceKind(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Timestamp, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
