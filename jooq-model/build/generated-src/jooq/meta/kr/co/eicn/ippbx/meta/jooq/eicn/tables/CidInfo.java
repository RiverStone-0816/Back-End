/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CidInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * 내선기타정보 관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CidInfo extends TableImpl<CidInfoRecord> {

    private static final long serialVersionUID = -698910650;

    /**
     * The reference instance of <code>eicn.cid_info</code>
     */
    public static final CidInfo CID_INFO = new CidInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CidInfoRecord> getRecordType() {
        return CidInfoRecord.class;
    }

    /**
     * The column <code>eicn.cid_info.seq</code>. 고유키
     */
    public final TableField<CidInfoRecord, UInteger> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "고유키");

    /**
     * The column <code>eicn.cid_info.cid_number</code>.
     */
    public final TableField<CidInfoRecord, String> CID_NUMBER = createField(DSL.name("cid_number"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cid_info.company_id</code>. 회사아이디
     */
    public final TableField<CidInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아이디");

    /**
     * The column <code>eicn.cid_info.etc1</code>.
     */
    public final TableField<CidInfoRecord, String> ETC1 = createField(DSL.name("etc1"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.cid_info.etc2</code>.
     */
    public final TableField<CidInfoRecord, String> ETC2 = createField(DSL.name("etc2"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>eicn.cid_info</code> table reference
     */
    public CidInfo() {
        this(DSL.name("cid_info"), null);
    }

    /**
     * Create an aliased <code>eicn.cid_info</code> table reference
     */
    public CidInfo(String alias) {
        this(DSL.name(alias), CID_INFO);
    }

    /**
     * Create an aliased <code>eicn.cid_info</code> table reference
     */
    public CidInfo(Name alias) {
        this(alias, CID_INFO);
    }

    private CidInfo(Name alias, Table<CidInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CidInfo(Name alias, Table<CidInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("내선기타정보 관리 테이블"), TableOptions.table());
    }

    public <O extends Record> CidInfo(Table<O> child, ForeignKey<O, CidInfoRecord> key) {
        super(child, key, CID_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CID_INFO_COMPANY_ID);
    }

    @Override
    public Identity<CidInfoRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_CID_INFO;
    }

    @Override
    public UniqueKey<CidInfoRecord> getPrimaryKey() {
        return Keys.KEY_CID_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<CidInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<CidInfoRecord>>asList(Keys.KEY_CID_INFO_PRIMARY);
    }

    @Override
    public CidInfo as(String alias) {
        return new CidInfo(DSL.name(alias), this);
    }

    @Override
    public CidInfo as(Name alias) {
        return new CidInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CidInfo rename(String name) {
        return new CidInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CidInfo rename(Name name) {
        return new CidInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<UInteger, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
