/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.MemberStatusRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 상담원의 콜 상태를 나타낸다.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberStatus extends TableImpl<MemberStatusRecord> {

    private static final long serialVersionUID = 1763329627;

    /**
     * The reference instance of <code>eicn.member_status</code>
     */
    public static final MemberStatus MEMBER_STATUS = new MemberStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemberStatusRecord> getRecordType() {
        return MemberStatusRecord.class;
    }

    /**
     * The column <code>eicn.member_status.seq</code>. 고유키
     */
    public final TableField<MemberStatusRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "고유키");

    /**
     * The column <code>eicn.member_status.start_date</code>. 시작일
     */
    public final TableField<MemberStatusRecord, Timestamp> START_DATE = createField(DSL.name("start_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "시작일");

    /**
     * The column <code>eicn.member_status.end_date</code>. 종료일
     */
    public final TableField<MemberStatusRecord, Timestamp> END_DATE = createField(DSL.name("end_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-07-01 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "종료일");

    /**
     * The column <code>eicn.member_status.phoneid</code>. 전화아이디
     */
    public final TableField<MemberStatusRecord, String> PHONEID = createField(DSL.name("phoneid"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "전화아이디");

    /**
     * The column <code>eicn.member_status.phonename</code>. 전화이름
     */
    public final TableField<MemberStatusRecord, String> PHONENAME = createField(DSL.name("phonename"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "전화이름");

    /**
     * The column <code>eicn.member_status.status</code>. 상태
     */
    public final TableField<MemberStatusRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.CHAR(5).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "상태");

    /**
     * The column <code>eicn.member_status.next_status</code>. 다음상태
     */
    public final TableField<MemberStatusRecord, String> NEXT_STATUS = createField(DSL.name("next_status"), org.jooq.impl.SQLDataType.CHAR(5).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "다음상태");

    /**
     * The column <code>eicn.member_status.in_out</code>. status가 1일때만 의미가 있음
     */
    public final TableField<MemberStatusRecord, String> IN_OUT = createField(DSL.name("in_out"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("I", org.jooq.impl.SQLDataType.CHAR)), this, "status가 1일때만 의미가 있음");

    /**
     * The column <code>eicn.member_status.company_id</code>. 회사아이디
     */
    public final TableField<MemberStatusRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아이디");

    /**
     * Create a <code>eicn.member_status</code> table reference
     */
    public MemberStatus() {
        this(DSL.name("member_status"), null);
    }

    /**
     * Create an aliased <code>eicn.member_status</code> table reference
     */
    public MemberStatus(String alias) {
        this(DSL.name(alias), MEMBER_STATUS);
    }

    /**
     * Create an aliased <code>eicn.member_status</code> table reference
     */
    public MemberStatus(Name alias) {
        this(alias, MEMBER_STATUS);
    }

    private MemberStatus(Name alias, Table<MemberStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private MemberStatus(Name alias, Table<MemberStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("상담원의 콜 상태를 나타낸다."), TableOptions.table());
    }

    public <O extends Record> MemberStatus(Table<O> child, ForeignKey<O, MemberStatusRecord> key) {
        super(child, key, MEMBER_STATUS);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MEMBER_STATUS_PHONEID, Indexes.MEMBER_STATUS_START_DATE, Indexes.MEMBER_STATUS_STATUS);
    }

    @Override
    public Identity<MemberStatusRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MEMBER_STATUS;
    }

    @Override
    public UniqueKey<MemberStatusRecord> getPrimaryKey() {
        return Keys.KEY_MEMBER_STATUS_PRIMARY;
    }

    @Override
    public List<UniqueKey<MemberStatusRecord>> getKeys() {
        return Arrays.<UniqueKey<MemberStatusRecord>>asList(Keys.KEY_MEMBER_STATUS_PRIMARY);
    }

    @Override
    public MemberStatus as(String alias) {
        return new MemberStatus(DSL.name(alias), this);
    }

    @Override
    public MemberStatus as(Name alias) {
        return new MemberStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberStatus rename(String name) {
        return new MemberStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberStatus rename(Name name) {
        return new MemberStatus(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Timestamp, Timestamp, String, String, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
