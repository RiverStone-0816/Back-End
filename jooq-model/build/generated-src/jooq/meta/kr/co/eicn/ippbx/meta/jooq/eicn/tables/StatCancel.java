/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.StatCancelRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatCancel extends TableImpl<StatCancelRecord> {

    private static final long serialVersionUID = -369127363;

    /**
     * The reference instance of <code>eicn.stat_cancel</code>
     */
    public static final StatCancel STAT_CANCEL = new StatCancel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatCancelRecord> getRecordType() {
        return StatCancelRecord.class;
    }

    /**
     * The column <code>eicn.stat_cancel.seq</code>.
     */
    public final TableField<StatCancelRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.stat_cancel.company_id</code>.
     */
    public final TableField<StatCancelRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.stat_cancel.service_number</code>.
     */
    public final TableField<StatCancelRecord, String> SERVICE_NUMBER = createField(DSL.name("service_number"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.stat_cancel.hunt_number</code>.
     */
    public final TableField<StatCancelRecord, String> HUNT_NUMBER = createField(DSL.name("hunt_number"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.stat_cancel.stat_date</code>.
     */
    public final TableField<StatCancelRecord, Date> STAT_DATE = createField(DSL.name("stat_date"), org.jooq.impl.SQLDataType.DATE.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2009-01-01", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>eicn.stat_cancel.stat_hour</code>.
     */
    public final TableField<StatCancelRecord, Byte> STAT_HOUR = createField(DSL.name("stat_hour"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>eicn.stat_cancel.total</code>.
     */
    public final TableField<StatCancelRecord, Integer> TOTAL = createField(DSL.name("total"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_cancel.wait1</code>.
     */
    public final TableField<StatCancelRecord, Integer> WAIT1 = createField(DSL.name("wait1"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_cancel.wait2</code>.
     */
    public final TableField<StatCancelRecord, Integer> WAIT2 = createField(DSL.name("wait2"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_cancel.wait3</code>.
     */
    public final TableField<StatCancelRecord, Integer> WAIT3 = createField(DSL.name("wait3"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_cancel.wait4</code>.
     */
    public final TableField<StatCancelRecord, Integer> WAIT4 = createField(DSL.name("wait4"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_cancel.wait5</code>.
     */
    public final TableField<StatCancelRecord, Integer> WAIT5 = createField(DSL.name("wait5"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_cancel.wait6</code>.
     */
    public final TableField<StatCancelRecord, Integer> WAIT6 = createField(DSL.name("wait6"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_cancel.wait7</code>.
     */
    public final TableField<StatCancelRecord, Integer> WAIT7 = createField(DSL.name("wait7"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.stat_cancel.wait8</code>.
     */
    public final TableField<StatCancelRecord, Integer> WAIT8 = createField(DSL.name("wait8"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>eicn.stat_cancel</code> table reference
     */
    public StatCancel() {
        this(DSL.name("stat_cancel"), null);
    }

    /**
     * Create an aliased <code>eicn.stat_cancel</code> table reference
     */
    public StatCancel(String alias) {
        this(DSL.name(alias), STAT_CANCEL);
    }

    /**
     * Create an aliased <code>eicn.stat_cancel</code> table reference
     */
    public StatCancel(Name alias) {
        this(alias, STAT_CANCEL);
    }

    private StatCancel(Name alias, Table<StatCancelRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatCancel(Name alias, Table<StatCancelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> StatCancel(Table<O> child, ForeignKey<O, StatCancelRecord> key) {
        super(child, key, STAT_CANCEL);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STAT_CANCEL_COMPANY_ID, Indexes.STAT_CANCEL_SERVICE_NUMBER, Indexes.STAT_CANCEL_STAT_DATE, Indexes.STAT_CANCEL_STAT_HOUR);
    }

    @Override
    public Identity<StatCancelRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STAT_CANCEL;
    }

    @Override
    public UniqueKey<StatCancelRecord> getPrimaryKey() {
        return Keys.KEY_STAT_CANCEL_PRIMARY;
    }

    @Override
    public List<UniqueKey<StatCancelRecord>> getKeys() {
        return Arrays.<UniqueKey<StatCancelRecord>>asList(Keys.KEY_STAT_CANCEL_PRIMARY);
    }

    @Override
    public StatCancel as(String alias) {
        return new StatCancel(DSL.name(alias), this);
    }

    @Override
    public StatCancel as(Name alias) {
        return new StatCancel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatCancel rename(String name) {
        return new StatCancel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatCancel rename(Name name) {
        return new StatCancel(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Integer, String, String, String, Date, Byte, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
