/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.PhoneInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 전화기 및 번호에 대한 정보
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhoneInfo extends TableImpl<PhoneInfoRecord> {

    private static final long serialVersionUID = -411581035;

    /**
     * The reference instance of <code>eicn.phone_info</code>
     */
    public static final PhoneInfo PHONE_INFO = new PhoneInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PhoneInfoRecord> getRecordType() {
        return PhoneInfoRecord.class;
    }

    /**
     * The column <code>eicn.phone_info.peer</code>. 전화기 ID(보편적으로 070번호를 제외한 번호)
     */
    public final TableField<PhoneInfoRecord, String> PEER = createField(DSL.name("peer"), org.jooq.impl.SQLDataType.VARCHAR(18).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "전화기 ID(보편적으로 070번호를 제외한 번호)");

    /**
     * The column <code>eicn.phone_info.company_id</code>. 고객사 아이디
     */
    public final TableField<PhoneInfoRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "고객사 아이디");

    /**
     * The column <code>eicn.phone_info.extension</code>. 내선번호
     */
    public final TableField<PhoneInfoRecord, String> EXTENSION = createField(DSL.name("extension"), org.jooq.impl.SQLDataType.VARCHAR(18), this, "내선번호");

    /**
     * The column <code>eicn.phone_info.voip_tel</code>. 개인 070 번호
     */
    public final TableField<PhoneInfoRecord, String> VOIP_TEL = createField(DSL.name("voip_tel"), org.jooq.impl.SQLDataType.VARCHAR(18), this, "개인 070 번호");

    /**
     * The column <code>eicn.phone_info.forward_when</code>. 착신전환여부(N:착신전환안함, A:항상, B:통화중, C:부재중, T:통화중+부재중)
     */
    public final TableField<PhoneInfoRecord, String> FORWARD_WHEN = createField(DSL.name("forward_when"), org.jooq.impl.SQLDataType.CHAR(1), this, "착신전환여부(N:착신전환안함, A:항상, B:통화중, C:부재중, T:통화중+부재중)");

    /**
     * The column <code>eicn.phone_info.forwarding</code>. 착신할전화번호 정보(E:내선, R:대표번호, O:외부번호)
     */
    public final TableField<PhoneInfoRecord, String> FORWARDING = createField(DSL.name("forwarding"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "착신할전화번호 정보(E:내선, R:대표번호, O:외부번호)");

    /**
     * The column <code>eicn.phone_info.prevent</code>. 금지프리픽스
     */
    public final TableField<PhoneInfoRecord, String> PREVENT = createField(DSL.name("prevent"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "금지프리픽스");

    /**
     * The column <code>eicn.phone_info.record_type</code>. 녹취 여부(M:녹취,S:녹취안함)
     */
    public final TableField<PhoneInfoRecord, String> RECORD_TYPE = createField(DSL.name("record_type"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "녹취 여부(M:녹취,S:녹취안함)");

    /**
     * The column <code>eicn.phone_info.cid</code>. 발신번호
     */
    public final TableField<PhoneInfoRecord, String> CID = createField(DSL.name("cid"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "발신번호");

    /**
     * The column <code>eicn.phone_info.billing_number</code>. 과금번호
     */
    public final TableField<PhoneInfoRecord, String> BILLING_NUMBER = createField(DSL.name("billing_number"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "과금번호");

    /**
     * The column <code>eicn.phone_info.host</code>. localhost 고정값
     */
    public final TableField<PhoneInfoRecord, String> HOST = createField(DSL.name("host"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "localhost 고정값");

    /**
     * The column <code>eicn.phone_info.pickup</code>. pickup_group 테이블의 groupcode 컬럼값 참조
     */
    public final TableField<PhoneInfoRecord, String> PICKUP = createField(DSL.name("pickup"), org.jooq.impl.SQLDataType.VARCHAR(5).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "pickup_group 테이블의 groupcode 컬럼값 참조");

    /**
     * The column <code>eicn.phone_info.local_prefix</code>. 지역번호
     */
    public final TableField<PhoneInfoRecord, String> LOCAL_PREFIX = createField(DSL.name("local_prefix"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("02", org.jooq.impl.SQLDataType.VARCHAR)), this, "지역번호");

    /**
     * The column <code>eicn.phone_info.first_status</code>. 로긴시 첫 상태
     */
    public final TableField<PhoneInfoRecord, Byte> FIRST_STATUS = createField(DSL.name("first_status"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("2", org.jooq.impl.SQLDataType.TINYINT)), this, "로긴시 첫 상태");

    /**
     * The column <code>eicn.phone_info.logout_status</code>. 로그아웃 상태
     */
    public final TableField<PhoneInfoRecord, Byte> LOGOUT_STATUS = createField(DSL.name("logout_status"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "로그아웃 상태");

    /**
     * The column <code>eicn.phone_info.dial_status</code>. 전화 상태
     */
    public final TableField<PhoneInfoRecord, Byte> DIAL_STATUS = createField(DSL.name("dial_status"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("2", org.jooq.impl.SQLDataType.TINYINT)), this, "전화 상태");

    /**
     * The column <code>eicn.phone_info.phone_status</code>. 전화기 상태
     */
    public final TableField<PhoneInfoRecord, String> PHONE_STATUS = createField(DSL.name("phone_status"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "전화기 상태");

    /**
     * The column <code>eicn.phone_info.outbound_gw</code>. 게이트웨이
     */
    public final TableField<PhoneInfoRecord, String> OUTBOUND_GW = createField(DSL.name("outbound_gw"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "게이트웨이");

    /**
     * The column <code>eicn.phone_info.group_code</code>. 조직코드
     */
    public final TableField<PhoneInfoRecord, String> GROUP_CODE = createField(DSL.name("group_code"), org.jooq.impl.SQLDataType.CHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000", org.jooq.impl.SQLDataType.CHAR)), this, "조직코드");

    /**
     * The column <code>eicn.phone_info.group_tree_name</code>.
     */
    public final TableField<PhoneInfoRecord, String> GROUP_TREE_NAME = createField(DSL.name("group_tree_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>eicn.phone_info.group_level</code>.
     */
    public final TableField<PhoneInfoRecord, Integer> GROUP_LEVEL = createField(DSL.name("group_level"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>eicn.phone_info.phone_kind</code>. N 고정
     */
    public final TableField<PhoneInfoRecord, String> PHONE_KIND = createField(DSL.name("phone_kind"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "N 고정");

    /**
     * The column <code>eicn.phone_info.hp_device_id</code>. 사용안함
     */
    public final TableField<PhoneInfoRecord, String> HP_DEVICE_ID = createField(DSL.name("hp_device_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "사용안함");

    /**
     * The column <code>eicn.phone_info.hp_number</code>. 사용안함
     */
    public final TableField<PhoneInfoRecord, String> HP_NUMBER = createField(DSL.name("hp_number"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "사용안함");

    /**
     * The column <code>eicn.phone_info.original_number</code>. 번호이동원번호
     */
    public final TableField<PhoneInfoRecord, String> ORIGINAL_NUMBER = createField(DSL.name("original_number"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "번호이동원번호");

    /**
     * Create a <code>eicn.phone_info</code> table reference
     */
    public PhoneInfo() {
        this(DSL.name("phone_info"), null);
    }

    /**
     * Create an aliased <code>eicn.phone_info</code> table reference
     */
    public PhoneInfo(String alias) {
        this(DSL.name(alias), PHONE_INFO);
    }

    /**
     * Create an aliased <code>eicn.phone_info</code> table reference
     */
    public PhoneInfo(Name alias) {
        this(alias, PHONE_INFO);
    }

    private PhoneInfo(Name alias, Table<PhoneInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private PhoneInfo(Name alias, Table<PhoneInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("전화기 및 번호에 대한 정보"), TableOptions.table());
    }

    public <O extends Record> PhoneInfo(Table<O> child, ForeignKey<O, PhoneInfoRecord> key) {
        super(child, key, PHONE_INFO);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<UniqueKey<PhoneInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<PhoneInfoRecord>>asList(Keys.KEY_PHONE_INFO_PEER);
    }

    @Override
    public PhoneInfo as(String alias) {
        return new PhoneInfo(DSL.name(alias), this);
    }

    @Override
    public PhoneInfo as(Name alias) {
        return new PhoneInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PhoneInfo rename(String name) {
        return new PhoneInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PhoneInfo rename(Name name) {
        return new PhoneInfo(name, null);
    }
}
