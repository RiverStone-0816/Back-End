/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.SendMessageRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * SMS 발송
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SendMessage extends TableImpl<SendMessageRecord> {

    private static final long serialVersionUID = -720583094;

    /**
     * The reference instance of <code>eicn.send_message</code>
     */
    public static final SendMessage SEND_MESSAGE = new SendMessage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SendMessageRecord> getRecordType() {
        return SendMessageRecord.class;
    }

    /**
     * The column <code>eicn.send_message.id</code>. SEQUENCE_KEY
     */
    public final TableField<SendMessageRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "SEQUENCE_KEY");

    /**
     * The column <code>eicn.send_message.user</code>. 상담원 ID
     */
    public final TableField<SendMessageRecord, String> USER = createField(DSL.name("user"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "상담원 ID");

    /**
     * The column <code>eicn.send_message.maindb_sys_custom_id</code>. 고객 아이디
     */
    public final TableField<SendMessageRecord, String> MAINDB_SYS_CUSTOM_ID = createField(DSL.name("maindb_sys_custom_id"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "고객 아이디");

    /**
     * The column <code>eicn.send_message.phone</code>. 상담전화번호
     */
    public final TableField<SendMessageRecord, String> PHONE = createField(DSL.name("phone"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "상담전화번호");

    /**
     * The column <code>eicn.send_message.target</code>. 수신번호
     */
    public final TableField<SendMessageRecord, String> TARGET = createField(DSL.name("target"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "수신번호");

    /**
     * The column <code>eicn.send_message.receiver</code>. 받는사람
     */
    public final TableField<SendMessageRecord, String> RECEIVER = createField(DSL.name("receiver"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "받는사람");

    /**
     * The column <code>eicn.send_message.content</code>. 메세지
     */
    public final TableField<SendMessageRecord, String> CONTENT = createField(DSL.name("content"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "메세지");

    /**
     * The column <code>eicn.send_message.template</code>. 발송 문구 종류
     */
    public final TableField<SendMessageRecord, Long> TEMPLATE = createField(DSL.name("template"), org.jooq.impl.SQLDataType.BIGINT, this, "발송 문구 종류");

    /**
     * The column <code>eicn.send_message.send_message</code>. 발송구분
     */
    public final TableField<SendMessageRecord, String> SEND_MESSAGE_ = createField(DSL.name("send_message"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "발송구분");

    /**
     * The column <code>eicn.send_message.company_id</code>. 고객사 아이디
     */
    public final TableField<SendMessageRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "고객사 아이디");

    /**
     * The column <code>eicn.send_message.send_date</code>. 발송일
     */
    public final TableField<SendMessageRecord, Timestamp> SEND_DATE = createField(DSL.name("send_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "발송일");

    /**
     * Create a <code>eicn.send_message</code> table reference
     */
    public SendMessage() {
        this(DSL.name("send_message"), null);
    }

    /**
     * Create an aliased <code>eicn.send_message</code> table reference
     */
    public SendMessage(String alias) {
        this(DSL.name(alias), SEND_MESSAGE);
    }

    /**
     * Create an aliased <code>eicn.send_message</code> table reference
     */
    public SendMessage(Name alias) {
        this(alias, SEND_MESSAGE);
    }

    private SendMessage(Name alias, Table<SendMessageRecord> aliased) {
        this(alias, aliased, null);
    }

    private SendMessage(Name alias, Table<SendMessageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("SMS 발송"), TableOptions.table());
    }

    public <O extends Record> SendMessage(Table<O> child, ForeignKey<O, SendMessageRecord> key) {
        super(child, key, SEND_MESSAGE);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public Identity<SendMessageRecord, Long> getIdentity() {
        return Keys.IDENTITY_SEND_MESSAGE;
    }

    @Override
    public UniqueKey<SendMessageRecord> getPrimaryKey() {
        return Keys.KEY_SEND_MESSAGE_PRIMARY;
    }

    @Override
    public List<UniqueKey<SendMessageRecord>> getKeys() {
        return Arrays.<UniqueKey<SendMessageRecord>>asList(Keys.KEY_SEND_MESSAGE_PRIMARY);
    }

    @Override
    public SendMessage as(String alias) {
        return new SendMessage(DSL.name(alias), this);
    }

    @Override
    public SendMessage as(Name alias) {
        return new SendMessage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SendMessage rename(String name) {
        return new SendMessage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SendMessage rename(Name name) {
        return new SendMessage(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, String, String, String, String, String, Long, String, String, Timestamp> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
