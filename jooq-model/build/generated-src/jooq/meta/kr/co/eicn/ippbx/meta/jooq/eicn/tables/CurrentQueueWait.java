/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CurrentQueueWaitRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 대기자수관리 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurrentQueueWait extends TableImpl<CurrentQueueWaitRecord> {

    private static final long serialVersionUID = -1865391379;

    /**
     * The reference instance of <code>eicn.current_queue_wait</code>
     */
    public static final CurrentQueueWait CURRENT_QUEUE_WAIT = new CurrentQueueWait();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CurrentQueueWaitRecord> getRecordType() {
        return CurrentQueueWaitRecord.class;
    }

    /**
     * The column <code>eicn.current_queue_wait.seq</code>.
     */
    public final TableField<CurrentQueueWaitRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>eicn.current_queue_wait.queue_name</code>. QUEUE 이름
     */
    public final TableField<CurrentQueueWaitRecord, String> QUEUE_NAME = createField(DSL.name("queue_name"), org.jooq.impl.SQLDataType.VARCHAR(128).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "QUEUE 이름");

    /**
     * The column <code>eicn.current_queue_wait.han_name</code>. QUEUE 한글이름
     */
    public final TableField<CurrentQueueWaitRecord, String> HAN_NAME = createField(DSL.name("han_name"), org.jooq.impl.SQLDataType.VARCHAR(128).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "QUEUE 한글이름");

    /**
     * The column <code>eicn.current_queue_wait.number</code>. QUEUE 11자리번호
     */
    public final TableField<CurrentQueueWaitRecord, String> NUMBER = createField(DSL.name("number"), org.jooq.impl.SQLDataType.VARCHAR(128).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "QUEUE 11자리번호");

    /**
     * The column <code>eicn.current_queue_wait.insert_date</code>. 인서트된시간
     */
    public final TableField<CurrentQueueWaitRecord, Timestamp> INSERT_DATE = createField(DSL.name("insert_date"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("2016-01-01 01:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "인서트된시간");

    /**
     * The column <code>eicn.current_queue_wait.member_cnt</code>. 헌트상담원수
     */
    public final TableField<CurrentQueueWaitRecord, Integer> MEMBER_CNT = createField(DSL.name("member_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "헌트상담원수");

    /**
     * The column <code>eicn.current_queue_wait.member_wait_cnt</code>. 대기중인상담원수
     */
    public final TableField<CurrentQueueWaitRecord, Integer> MEMBER_WAIT_CNT = createField(DSL.name("member_wait_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "대기중인상담원수");

    /**
     * The column <code>eicn.current_queue_wait.custom_wait_cnt</code>. 고객대기자수
     */
    public final TableField<CurrentQueueWaitRecord, Integer> CUSTOM_WAIT_CNT = createField(DSL.name("custom_wait_cnt"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "고객대기자수");

    /**
     * The column <code>eicn.current_queue_wait.join_uniqueid</code>. QUEUE에 JOIN된 콜아이디
     */
    public final TableField<CurrentQueueWaitRecord, String> JOIN_UNIQUEID = createField(DSL.name("join_uniqueid"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "QUEUE에 JOIN된 콜아이디");

    /**
     * The column <code>eicn.current_queue_wait.company_id</code>. 회사아이디
     */
    public final TableField<CurrentQueueWaitRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아이디");

    /**
     * Create a <code>eicn.current_queue_wait</code> table reference
     */
    public CurrentQueueWait() {
        this(DSL.name("current_queue_wait"), null);
    }

    /**
     * Create an aliased <code>eicn.current_queue_wait</code> table reference
     */
    public CurrentQueueWait(String alias) {
        this(DSL.name(alias), CURRENT_QUEUE_WAIT);
    }

    /**
     * Create an aliased <code>eicn.current_queue_wait</code> table reference
     */
    public CurrentQueueWait(Name alias) {
        this(alias, CURRENT_QUEUE_WAIT);
    }

    private CurrentQueueWait(Name alias, Table<CurrentQueueWaitRecord> aliased) {
        this(alias, aliased, null);
    }

    private CurrentQueueWait(Name alias, Table<CurrentQueueWaitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("대기자수관리 테이블"), TableOptions.table());
    }

    public <O extends Record> CurrentQueueWait(Table<O> child, ForeignKey<O, CurrentQueueWaitRecord> key) {
        super(child, key, CURRENT_QUEUE_WAIT);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CURRENT_QUEUE_WAIT_COMPANY_ID, Indexes.CURRENT_QUEUE_WAIT_INSERT_DATE, Indexes.CURRENT_QUEUE_WAIT_QUEUE_NAME);
    }

    @Override
    public Identity<CurrentQueueWaitRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CURRENT_QUEUE_WAIT;
    }

    @Override
    public List<UniqueKey<CurrentQueueWaitRecord>> getKeys() {
        return Arrays.<UniqueKey<CurrentQueueWaitRecord>>asList(Keys.KEY_CURRENT_QUEUE_WAIT_SEQ);
    }

    @Override
    public CurrentQueueWait as(String alias) {
        return new CurrentQueueWait(DSL.name(alias), this);
    }

    @Override
    public CurrentQueueWait as(Name alias) {
        return new CurrentQueueWait(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CurrentQueueWait rename(String name) {
        return new CurrentQueueWait(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CurrentQueueWait rename(Name name) {
        return new CurrentQueueWait(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, String, Timestamp, Integer, Integer, Integer, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
