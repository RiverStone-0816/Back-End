/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables.records;


import java.sql.Timestamp;

import kr.co.eicn.ippbx.meta.jooq.eicn.tables.RecordEncKey;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 녹취암호화정보
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecordEncKeyRecord extends UpdatableRecordImpl<RecordEncKeyRecord> implements Record4<Integer, String, Timestamp, String> {

    private static final long serialVersionUID = 1501533186;

    /**
     * Setter for <code>eicn.record_enc_key.id</code>.
     */
    public RecordEncKeyRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>eicn.record_enc_key.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>eicn.record_enc_key.company_id</code>.
     */
    public RecordEncKeyRecord setCompanyId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>eicn.record_enc_key.company_id</code>.
     */
    public String getCompanyId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>eicn.record_enc_key.create_time</code>.
     */
    public RecordEncKeyRecord setCreateTime(Timestamp value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>eicn.record_enc_key.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>eicn.record_enc_key.enc_key</code>.
     */
    public RecordEncKeyRecord setEncKey(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>eicn.record_enc_key.enc_key</code>.
     */
    public String getEncKey() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Timestamp, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Timestamp, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RecordEncKey.RECORD_ENC_KEY.ID;
    }

    @Override
    public Field<String> field2() {
        return RecordEncKey.RECORD_ENC_KEY.COMPANY_ID;
    }

    @Override
    public Field<Timestamp> field3() {
        return RecordEncKey.RECORD_ENC_KEY.CREATE_TIME;
    }

    @Override
    public Field<String> field4() {
        return RecordEncKey.RECORD_ENC_KEY.ENC_KEY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCompanyId();
    }

    @Override
    public Timestamp component3() {
        return getCreateTime();
    }

    @Override
    public String component4() {
        return getEncKey();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCompanyId();
    }

    @Override
    public Timestamp value3() {
        return getCreateTime();
    }

    @Override
    public String value4() {
        return getEncKey();
    }

    @Override
    public RecordEncKeyRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RecordEncKeyRecord value2(String value) {
        setCompanyId(value);
        return this;
    }

    @Override
    public RecordEncKeyRecord value3(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public RecordEncKeyRecord value4(String value) {
        setEncKey(value);
        return this;
    }

    @Override
    public RecordEncKeyRecord values(Integer value1, String value2, Timestamp value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecordEncKeyRecord
     */
    public RecordEncKeyRecord() {
        super(RecordEncKey.RECORD_ENC_KEY);
    }

    /**
     * Create a detached, initialised RecordEncKeyRecord
     */
    public RecordEncKeyRecord(Integer id, String companyId, Timestamp createTime, String encKey) {
        super(RecordEncKey.RECORD_ENC_KEY);

        set(0, id);
        set(1, companyId);
        set(2, createTime);
        set(3, encKey);
    }
}
