/*
 * This file is generated by jOOQ.
 */
package kr.co.eicn.ippbx.meta.jooq.eicn.tables;


import java.util.Arrays;
import java.util.List;

import kr.co.eicn.ippbx.meta.jooq.eicn.Eicn;
import kr.co.eicn.ippbx.meta.jooq.eicn.Indexes;
import kr.co.eicn.ippbx.meta.jooq.eicn.Keys;
import kr.co.eicn.ippbx.meta.jooq.eicn.tables.records.CallbackDistRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 콜백 목적지 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CallbackDist extends TableImpl<CallbackDistRecord> {

    private static final long serialVersionUID = 1277564588;

    /**
     * The reference instance of <code>eicn.callback_dist</code>
     */
    public static final CallbackDist CALLBACK_DIST = new CallbackDist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CallbackDistRecord> getRecordType() {
        return CallbackDistRecord.class;
    }

    /**
     * The column <code>eicn.callback_dist.seq</code>. SEQ (데이터입력시자동증가)
     */
    public final TableField<CallbackDistRecord, Integer> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "SEQ (데이터입력시자동증가)");

    /**
     * The column <code>eicn.callback_dist.userid</code>. 상담원 ID
     */
    public final TableField<CallbackDistRecord, String> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "상담원 ID");

    /**
     * The column <code>eicn.callback_dist.service_number</code>. 대표번호(service_list&gt;svc_number 필드참조)
     */
    public final TableField<CallbackDistRecord, String> SERVICE_NUMBER = createField(DSL.name("service_number"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "대표번호(service_list>svc_number 필드참조)");

    /**
     * The column <code>eicn.callback_dist.hunt_number</code>. 헌트번호
     */
    public final TableField<CallbackDistRecord, String> HUNT_NUMBER = createField(DSL.name("hunt_number"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "헌트번호");

    /**
     * The column <code>eicn.callback_dist.ivrkey</code>. ivrkey
     */
    public final TableField<CallbackDistRecord, String> IVRKEY = createField(DSL.name("ivrkey"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "ivrkey");

    /**
     * The column <code>eicn.callback_dist.ivrkey_name</code>. ivrkey 한글명
     */
    public final TableField<CallbackDistRecord, String> IVRKEY_NAME = createField(DSL.name("ivrkey_name"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "ivrkey 한글명");

    /**
     * The column <code>eicn.callback_dist.company_id</code>. 회사아이디
     */
    public final TableField<CallbackDistRecord, String> COMPANY_ID = createField(DSL.name("company_id"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사아이디");

    /**
     * Create a <code>eicn.callback_dist</code> table reference
     */
    public CallbackDist() {
        this(DSL.name("callback_dist"), null);
    }

    /**
     * Create an aliased <code>eicn.callback_dist</code> table reference
     */
    public CallbackDist(String alias) {
        this(DSL.name(alias), CALLBACK_DIST);
    }

    /**
     * Create an aliased <code>eicn.callback_dist</code> table reference
     */
    public CallbackDist(Name alias) {
        this(alias, CALLBACK_DIST);
    }

    private CallbackDist(Name alias, Table<CallbackDistRecord> aliased) {
        this(alias, aliased, null);
    }

    private CallbackDist(Name alias, Table<CallbackDistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("콜백 목적지 테이블"), TableOptions.table());
    }

    public <O extends Record> CallbackDist(Table<O> child, ForeignKey<O, CallbackDistRecord> key) {
        super(child, key, CALLBACK_DIST);
    }

    @Override
    public Schema getSchema() {
        return Eicn.EICN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CALLBACK_DIST_IVRKEY, Indexes.CALLBACK_DIST_USERID);
    }

    @Override
    public Identity<CallbackDistRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CALLBACK_DIST;
    }

    @Override
    public UniqueKey<CallbackDistRecord> getPrimaryKey() {
        return Keys.KEY_CALLBACK_DIST_PRIMARY;
    }

    @Override
    public List<UniqueKey<CallbackDistRecord>> getKeys() {
        return Arrays.<UniqueKey<CallbackDistRecord>>asList(Keys.KEY_CALLBACK_DIST_PRIMARY);
    }

    @Override
    public CallbackDist as(String alias) {
        return new CallbackDist(DSL.name(alias), this);
    }

    @Override
    public CallbackDist as(Name alias) {
        return new CallbackDist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CallbackDist rename(String name) {
        return new CallbackDist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CallbackDist rename(Name name) {
        return new CallbackDist(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
