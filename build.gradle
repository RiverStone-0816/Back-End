buildscript {
    def env = { String name -> System.getProperty(name, System.getenv(name)) }

    ext.databaseHost = env("JDBC_HOST") ?: "122.49.74.102"
    ext.databasePort = env("JDBC_POST") ?: 3306
    ext.databaseUsername = env("JDBC_USERNAME") ?: "eicn"
    ext.databasePassword = env("JDBC_PASSWORD") ?: "eicnrw"

    ext.databaseName = env("JDBC_DATABASE") ?: "eicn"
    ext.databaseUrl = "jdbc:mysql://$databaseHost:$databasePort/$databaseName?useUnicode=yes&characterEncoding=utf8&autoReconnect=true&autoReconnectForPools=true&zeroDateTimeBehavior=convertToNull&useSSL=false"

    ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

    ext {
        springBootVersion = '2.7.11'
        springCloudVersion = 'Hoxton.SR4'
        vavrVersion = '0.10.2'
        mysqlVersion = '5.1.47'
        jooqVersion = '3.14.16'
        poiVersion = '4.1.0'
        okhttpVersion = '4.2.2'
        //okhttpVersion = '3.12.0'
        retrofitVersion = '2.9.0'
        gsonVersion = '2.8.6'
        ckanJavaApiVersion = '1.2.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.21"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
        classpath "io.freefair.gradle:lombok-plugin:6.6.3"
        classpath "nu.studer:gradle-jooq-plugin:4.2"
        classpath "gradle.plugin.org.flywaydb:gradle-plugin-publishing:6.4.2"
//        classpath files("gradle/lib/gradle-css-plugin-6.0.0-tinywind-custom.jar")
        classpath 'de.obqo.gradle:gradle-lesscss-plugin:1.0-1.3.3'
    }

    configurations["classpath"].resolutionStrategy.eachDependency {
        if (requested.group.startsWith('org.jooq') && requested.name.startsWith('jooq')) {
            useVersion("${jooqVersion}")
        }
    }
}

plugins {
//    id "com.eriwen.gradle.css" version "2.14.0"
}

allprojects {
    group 'kr.co.eicn'
    version '1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'idea'
    apply plugin: "io.freefair.lombok"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 17
    targetCompatibility = 17

    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"

    repositories {
        mavenCentral()
        maven {
            url 'https://jitpack.io'
        }
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    sourceSets {
        main {
            resources {
                srcDirs "src/main/resources", "src/main/resources-${profile}"
            }
        }
    }

    test {
        useJUnitPlatform()
    }

    dependencies {
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        implementation 'org.jetbrains.kotlin:kotlin-stdlib'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'

        implementation 'io.springfox:springfox-swagger2:2.8.0'
        implementation 'io.springfox:springfox-swagger-ui:2.8.0'
        implementation "org.slf4j:slf4j-api:1.7.32"
        implementation "org.slf4j:jcl-over-slf4j:1.7.32"
        implementation "ch.qos.logback:logback-classic:1.2.8"
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    configurations.all {
        exclude module: 'spring-boot-starter-logging'
    }
}

project(':util') {
    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        compileOnly 'org.springframework:spring-core'
        compileOnly 'org.springframework:spring-web'
        compileOnly 'org.springframework:spring-webmvc'
        compileOnly 'org.springframework:spring-context'
        compileOnly 'org.springframework:spring-jdbc'
        compileOnly 'org.jooq:jooq'
        compileOnly 'jakarta.servlet:jakarta.servlet-api'
        compileOnly 'jakarta.validation:jakarta.validation-api'

        api 'org.apache.commons:commons-lang3:3.8.1'
        api 'org.apache.httpcomponents:httpcore:4.4.12'
        api 'org.apache.httpcomponents:httpclient:4.5.10'
        api "io.vavr:vavr-jackson:${vavrVersion}"
        api "org.apache.poi:poi:${poiVersion}"
        api "org.apache.poi:poi-ooxml:${poiVersion}"
    }
}

project(':jooq-model') {
    bootJar.enabled = false
    jar.enabled = true

    apply plugin: 'nu.studer.jooq'
    jooq {
        version = jooqVersion
        edition = 'OSS'
        meta(sourceSets.main) {
            jdbc {
                driver = 'com.mysql.jdbc.Driver'
                url = databaseUrl
                user = databaseUsername
                password = databasePassword
            }
            generator {
                name = 'org.jooq.codegen.DefaultGenerator'
                strategy {
                    name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
                database {
                    name = 'org.jooq.meta.mysql.MySQLDatabase'
                    schemata {
                        schema {
                            inputSchema = 'eicn'
                        }
                        schema {
                            inputSchema = 'CUSTOMDB'
                        }
                        schema {
                            inputSchema = 'CONFIGDB'
                        }
                        schema {
                            inputSchema = 'STATDB'
                        }
                        schema {
                            inputSchema = 'PDS'
                        }
                    }

                    excludes = """
                                schema_version
                                | CONFIGDB.menu_company_.*
                                | CUSTOMDB.assist_token_.*
                                | CUSTOMDB.chatt_bookmark_.*
                                | CUSTOMDB.chatt_msg(?!_read)_.*
                                | CUSTOMDB.chatt_msg_read_.*
                                | CUSTOMDB.chatt_room(?!_member)_.*
                                | CUSTOMDB.chatt_room_member_.*
                                | CUSTOMDB.cst_custom_info_.*
                                | CUSTOMDB.con_custom_info_.*
                                | CUSTOMDB.cs_mail(?!_attach|_process_history|_reply|_reply_attach)_.*
                                | CUSTOMDB.cs_mail_attach_.*
                                | CUSTOMDB.cs_mail_process_history_.*
                                | CUSTOMDB.cs_mail_reply(?!_attach)_.*
                                | CUSTOMDB.cs_mail_reply_attach_.*
                                | CUSTOMDB.doub_stt_upload_.*
                                | CUSTOMDB.eicn_cdr_.*
                                | CUSTOMDB.history_queue_wait_.*
                                | CUSTOMDB.hunt_member_sequence_.*
                                | CUSTOMDB.kakao_chatbot_block_.*
                                | CUSTOMDB.kakao_event_.*
                                | CUSTOMDB.kakao_profile_.*
                                | CUSTOMDB.kakao_skill_msg_.*
                                | CUSTOMDB.maindb_custom_info_.*
                                | CUSTOMDB.maindb_key_info_.*
                                | CUSTOMDB.maindb_multichannel_info_.*
                                | CUSTOMDB.member_status_.*
                                | CUSTOMDB.memo(?!_msg)_.*
                                | CUSTOMDB.memo_msg_.*
                                | CUSTOMDB.message_data_.*
                                | CUSTOMDB.prohibited_keyword_.*
                                | CUSTOMDB.prv_custom_info_.*
                                | CUSTOMDB.result_custom_info_.*
                                | CUSTOMDB.stt_cdr_.*
                                | CUSTOMDB.stt_message_.*
                                | CUSTOMDB.stt_text_.*
                                | CUSTOMDB.talk_msg_.*
                                | CUSTOMDB.talk_record_.*
                                | CUSTOMDB.talk_room_.*
                                | CUSTOMDB.transcribe_data_.*
                                | CUSTOMDB.transcribe_group_.*
                                | CUSTOMDB.transcribe_learn_.*
                                | CUSTOMDB.voc_custom_list_.*
                                | CUSTOMDB.voc_research_result_.*
                                | CUSTOMDB.voc_result_.*
                                | CUSTOMDB.webchat_av_record_.*
                                | CUSTOMDB.wtalk_auth_number_.*
                                | CUSTOMDB.wtalk_msg_.*
                                | CUSTOMDB.wtalk_record_.*
                                | CUSTOMDB.wtalk_room_.*
                                | PDS.execute_pds_custom_info_.*
                                | PDS.pds_custom_info_.*
                                | PDS.pds_research_result_.*
                                | PDS.result_custom_info_.*
                                | STATDB.stat_cancel_.*
                                | STATDB.stat_inbound_.*
                                | STATDB.stat_kakao_chatbot_.*
                                | STATDB.stat_member_status_.*
                                | STATDB.stat_message_.*
                                | STATDB.stat_outbound_.*
                                | STATDB.stat_queue_wait_.*
                                | STATDB.stat_talk_.*
                                | STATDB.stat_user_inbound_.*
                                | STATDB.stat_user_outbound_.*
                                | STATDB.stat_user_ranking_.*
                                | STATDB.stat_voc_.*
                                | STATDB.stat_wtalk_.*
                            """

                    forcedTypes {
                        forcedType {
                            name = "BOOLEAN"
                            includeExpression  = ".*"
                            includeTypes  = "(?i:TINYINT)\\(1\\)"
                        }
                    }
                }
                generate {
                    relations = true
                    deprecated = false
                    records = true
                    pojos = true
                    fluentSetters = true
                    javaTimeTypes = false
                }
                target {
                    packageName = 'kr.co.eicn.ippbx.meta.jooq'
                }
            }
        }
    }

    dependencies {
        jooqRuntime 'com.sun.xml.bind:jaxb-impl:3.0.2'
        jooqRuntime "mysql:mysql-connector-java:${mysqlVersion}"
        api "mysql:mysql-connector-java:${mysqlVersion}"
        api 'org.jooq:jooq'
        api 'jakarta.persistence:jakarta.persistence-api'
    }
}

project(':model-extension') {
    bootJar.enabled = false
    jar.enabled = true

    jar {
        duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }

    dependencies {
        implementation project(':util')
        implementation project(':jooq-model')

        compileOnly 'jakarta.validation:jakarta.validation-api'
        compileOnly 'org.springframework:spring-web'
        compileOnly 'org.springframework.security:spring-security-core'

        api 'commons-fileupload:commons-fileupload:1.5'
        api 'io.jsonwebtoken:jjwt:0.9.1'
    }
}

project(':api-server') {
    apply plugin: 'war'

    configurations {
        optional
        compile.extendsFrom optional
    }

    tasks {
        processResources {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE
        }
    }

    dependencies {
        compileOnly project(':util')
        compileOnly project(':jooq-model')
        implementation project(':model-extension')

        compileOnly 'org.springframework.boot:spring-boot-starter-tomcat'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-jooq'
        implementation "org.springframework.boot:spring-boot-starter-data-rest"
        implementation "org.springframework.boot:spring-boot-starter-mail"
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation "org.springframework.boot:spring-boot-starter-cache"
        implementation "org.springframework.boot:spring-boot-starter-batch"

        optional "org.springframework.boot:spring-boot-configuration-processor"

        implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
        implementation 'taglibs:standard:1.1.2'
        implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'

        implementation "org.springframework.restdocs:spring-restdocs-mockmvc"
        implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1"

        implementation 'org.modelmapper:modelmapper:2.3.5'
        implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'
        implementation 'commons-io:commons-io:2.5'
        implementation 'org.apache.commons:commons-collections4:4.4'
        implementation 'org.springdoc:springdoc-openapi-ui:1.2.16'

        implementation files('libs/diotts_class.jar')

        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        testImplementation 'org.springframework.security:spring-security-test'
    }

    bootWar {
        archiveName 'api-server.war'
    }
}

project(':front-controller') {
    bootJar.enabled = false
    jar.enabled = true

    jar {
        duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }

    tasks {
        processResources {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE
        }
    }

    dependencies {
        compileOnly project(':util')
        compileOnly project(':jooq-model')
        implementation project(':model-extension')

        api 'org.springframework.boot:spring-boot-starter-web'
        api 'org.springframework.boot:spring-boot-starter-aop'
        api 'org.springframework.boot:spring-boot-starter-validation'
        api "org.springframework.boot:spring-boot-starter-data-rest"
        api "org.springframework.boot:spring-boot-starter-mail"
        api "org.springframework.boot:spring-boot-starter-cache"
        api "org.springframework.boot:spring-boot-starter-batch"
        api 'org.springframework.boot:spring-boot-starter-security'
        api "org.springframework.session:spring-session-core"

        api 'org.springframework.security:spring-security-core'
        api 'org.apache.tomcat.embed:tomcat-embed-jasper'
        api 'taglibs:standard:1.1.2'
        api 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'

        api 'com.ibm.icu:icu4j:67.1'

        testApi 'org.springframework.restdocs:spring-restdocs-mockmvc'
        testApi 'org.springframework.security:spring-security-test'
    }
}

project(':lgu-front') {
    apply plugin: 'war'

    apply plugin: 'lesscss'
    lesscss {
        source = fileTree('src/main/webapp/resources/less') {
            include 'app.less'
        }
        dest = 'src/main/webapp/resources/compiled'
        compress = true
    }
    war {
        dependsOn 'lesscss'
    }
    bootWar {
        dependsOn 'lesscss'
        archiveName 'ROOT.war'
    }

    dependencies {
        implementation project(':front-controller')
        compileOnly 'org.springframework.boot:spring-boot-starter-tomcat'

        implementation 'org.webjars:jquery:3.4.1'
        implementation 'org.webjars:jquery-blockui:2.65'
        implementation 'org.webjars:momentjs:2.21.0'
        implementation 'org.webjars.bower:less.js:2.7.3'
        implementation 'org.webjars:font-awesome:5.13.0'

        implementation 'org.webjars:jquery-ui:1.12.1'
        implementation 'org.webjars:d3js:5.9.1'
        implementation 'org.webjars:Semantic-UI:2.4.1'
        implementation 'org.webjars.npm:overlayscrollbars:1.9.1'
        implementation 'org.webjars:material-design-icons:3.0.1'
        implementation 'org.webjars:toastr:2.1.2'
        implementation 'org.webjars:cryptojs:3.1.2'

        implementation 'org.webjars:sockjs-client:1.0.2'
        implementation 'org.webjars:stomp-websocket:2.3.3'

        implementation 'org.webjars.npm:vue:3.2.10'
    }
}

project(':skt-front') {
    apply plugin: 'war'

    apply plugin: 'lesscss'
    lesscss {
        source = fileTree('src/main/webapp/resources/less') {
            include 'app.less'
        }
        dest = 'src/main/webapp/resources/compiled'
        compress = true
    }
    war {
        dependsOn 'lesscss'
    }
    bootWar {
        dependsOn 'lesscss'
        archiveName 'ROOT.war'
    }

    dependencies {
        implementation project(':front-controller')
        compileOnly 'org.springframework.boot:spring-boot-starter-tomcat'

        implementation 'org.webjars:jquery:3.4.1'
        implementation 'org.webjars:jquery-blockui:2.65'
        implementation 'org.webjars:momentjs:2.21.0'
        implementation 'org.webjars.bower:less.js:2.7.3'
        implementation 'org.webjars:font-awesome:5.13.0'

        implementation 'org.webjars:jquery-ui:1.12.1'
        implementation 'org.webjars:d3js:5.9.1'
        implementation 'org.webjars:Semantic-UI:2.4.1'
        implementation 'org.webjars.npm:overlayscrollbars:1.9.1'
        implementation 'org.webjars:material-design-icons:3.0.1'
        implementation 'org.webjars:toastr:2.1.2'
        implementation 'org.webjars:cryptojs:3.1.2'

        implementation 'org.webjars:sockjs-client:1.0.2'
        implementation 'org.webjars:stomp-websocket:2.3.3'

        implementation 'org.webjars.npm:vue:3.2.10'
    }
}
